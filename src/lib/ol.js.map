{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/rbush.min.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/render.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/format/IIIFInfo.js","webpack://ol/./build/ol/source/IIIF.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","LN2","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","b","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","j","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","index","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","tmp","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","closestSquaredDistanceXY","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","k","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","transform_rotate","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","join","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","resolutions","constrainResolution","capped","z","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","declutterItems","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","asColorLike","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","margin","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","Immediate","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","renderDeclutterItems","declutterTree","items","zIndexItems","renderDeclutter","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","declutteredFeatures","layerStates","numLayers","getLayerRenderer","callback_1","getWrapX","layerKey","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","insertBefore","firstChild","children_","MAX_SAFE_INTEGER","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","BufferUsage","STATIC_DRAW","STREAM_DRAW","Buffer","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","arrayBuffer","Uint32Array","Uint16Array","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","IconAnchorUnits","FRACTION","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","listenImage","loadHandler","errorHandler","img","decode","then","catch","unlistenImage","ol_Image","ImageWrapper","imageLoadFunction","src_","Image","imageListenerKeys_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad_1","sourceListenKey_1","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_min_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Cluster_extends","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","Zoomify_extends","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","localContext_1","TileGroup","ZoomifyTileClass","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","RegExp","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","tiles","scaleFactors","extraFeatures","extraFormats","extraQualities","maxWidth","maxHeight","maxArea","format_IIIFInfo","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","version","test","getComplianceLevelFromProfile","complianceLevel","level","getTileSourceOptions","opt_preferredOptions","imageOptions","quality","IIIF_extends","formatPercentage","percentage","toLocaleString","maximumFractionDigits","source_IIIF","IIIF","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","OSM_extends","ATTRIBUTION","source_OSM","OSM","BaseImage_extends","BaseImage","BaseImageLayer","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","canvasTransform","layer_Image_extends","layer_Image","ImageLayer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","wantedResolution","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile_extends","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","sourceTileGrid_1","covered_1","empty_1","sourceZ_1","loadedZ_1","sourceTileCoord","sourceTile","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","webgl_Layer_extends","Layer_WebGLLayerRenderer","WebGLLayerRenderer","helper_","pushFeatureToBuffer","vertexBuffer","indexBuffer","geojsonFeature","red","green","baseIndex","customAttributeValues","tmpArray_","pushPointFeatureToBuffer_","webgl_Layer","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","PointsLayer_extends","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorArray_","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","geojsonFormat_","geojsonFeatureCache_","currentTransform_","renderTransform_","invertRenderTransform_","vectorSource","sourceChanged","viewNotMoving","rebuildBuffers_","bytesPerFloat","BYTES_PER_ELEMENT","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatOffset","flatEnd","oo","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","canvas_BuilderGroup","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","clipExtent","getDeclutter","world","transform_2","viewHints_1","layer_1","features_1","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","features_2","replayGroupInstructions","executorGroup","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","imageFrameState_1","newSkippedFeatures_1","image_1","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","renderPixelRatio","renderTileImage_","replayState","renderScale","pixelScale","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","toFunction","layer_Vector_extends","layer_Vector","VectorLayer","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","layer_VectorTile_extends","layer_VectorTile","VectorTileLayer","renderMode_","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","interaction_Extent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","oldMap","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","child","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","TextFeature_extends","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","format_TopoJSON","filter_Filter","Filter","tagName_","getTagName","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","And_extends","filter_And","And","Bbox_extends","filter_Bbox","Bbox","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","and","Function","filter_bbox","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","default","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_extends","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","penOnly","pointerEvt","platformModifierKeyOnly","touchOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","ELEMENT_ARRAY_BUFFER","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.8';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Geolocation\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport { listen } from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { circular as circularPolygon } from './geom/Polygon.js';\nimport { GEOLOCATION } from './has.js';\nimport { toRadians } from './math.js';\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\n/**\n * @enum {string}\n */\nvar Property = {\n    ACCURACY: 'accuracy',\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\n    ALTITUDE: 'altitude',\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\n    HEADING: 'heading',\n    POSITION: 'position',\n    PROJECTION: 'projection',\n    SPEED: 'speed',\n    TRACKING: 'tracking',\n    TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */ (function (_super) {\n    __extends(GeolocationError, _super);\n    /**\n     * @param {PositionError} error error object.\n     */\n    function GeolocationError(error) {\n        var _this = _super.call(this, EventType.ERROR) || this;\n        /**\n         * @type {number}\n         */\n        _this.code = error.code;\n        /**\n         * @type {string}\n         */\n        _this.message = error.message;\n        return _this;\n    }\n    return GeolocationError;\n}(Event));\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~Event#event:error\n * @api\n */\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Geolocation(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * The unprojected (EPSG:4326) device position.\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.position_ = null;\n        /**\n         * @private\n         * @type {import(\"./proj.js\").TransformFunction}\n         */\n        _this.transform_ = identityTransform;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.watchId_ = undefined;\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\n        if (options.projection !== undefined) {\n            _this.setProjection(options.projection);\n        }\n        if (options.trackingOptions !== undefined) {\n            _this.setTrackingOptions(options.trackingOptions);\n        }\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Geolocation.prototype.disposeInternal = function () {\n        this.setTracking(false);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleProjectionChanged_ = function () {\n        var projection = this.getProjection();\n        if (projection) {\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\n            if (this.position_) {\n                this.set(Property.POSITION, this.transform_(this.position_));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleTrackingChanged_ = function () {\n        if (GEOLOCATION) {\n            var tracking = this.getTracking();\n            if (tracking && this.watchId_ === undefined) {\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n            }\n            else if (!tracking && this.watchId_ !== undefined) {\n                navigator.geolocation.clearWatch(this.watchId_);\n                this.watchId_ = undefined;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Position} position position event.\n     */\n    Geolocation.prototype.positionChange_ = function (position) {\n        var coords = position.coords;\n        this.set(Property.ACCURACY, coords.accuracy);\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\n            undefined : coords.altitudeAccuracy);\n        this.set(Property.HEADING, coords.heading === null ?\n            undefined : toRadians(coords.heading));\n        if (!this.position_) {\n            this.position_ = [coords.longitude, coords.latitude];\n        }\n        else {\n            this.position_[0] = coords.longitude;\n            this.position_[1] = coords.latitude;\n        }\n        var projectedPosition = this.transform_(this.position_);\n        this.set(Property.POSITION, projectedPosition);\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n        var geometry = circularPolygon(this.position_, coords.accuracy);\n        geometry.applyTransform(this.transform_);\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\n        this.changed();\n    };\n    /**\n     * @private\n     * @param {PositionError} error error object.\n     */\n    Geolocation.prototype.positionError_ = function (error) {\n        this.setTracking(false);\n        this.dispatchEvent(new GeolocationError(error));\n    };\n    /**\n     * Get the accuracy of the position in meters.\n     * @return {number|undefined} The accuracy of the position measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n    };\n    /**\n     * Get a geometry of the position accuracy.\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracyGeometry = function () {\n        return (\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\n    };\n    /**\n     * Get the altitude associated with the position.\n     * @return {number|undefined} The altitude of the position in meters above mean\n     *     sea level.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitude = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n    };\n    /**\n     * Get the altitude accuracy of the position.\n     * @return {number|undefined} The accuracy of the altitude measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitudeAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n    };\n    /**\n     * Get the heading as radians clockwise from North.\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n     * is set to `true` in the tracking options.\n     * @return {number|undefined} The heading of the device in radians from north.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getHeading = function () {\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\n    };\n    /**\n     * Get the position of the device.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n     *     in the current projection.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the projection associated with the position.\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\n    };\n    /**\n     * Get the speed in meters per second.\n     * @return {number|undefined} The instantaneous speed of the device in meters\n     *     per second.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getSpeed = function () {\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\n    };\n    /**\n     * Determine if the device location is being tracked.\n     * @return {boolean} The device location is being tracked.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTracking = function () {\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\n    };\n    /**\n     * Get the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @return {PositionOptions|undefined} PositionOptions as defined by\n     *     the [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTrackingOptions = function () {\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n    };\n    /**\n     * Set the projection to use for transforming the coordinates.\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setProjection = function (projection) {\n        this.set(Property.PROJECTION, getProjection(projection));\n    };\n    /**\n     * Enable or disable tracking.\n     * @param {boolean} tracking Enable tracking.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTracking = function (tracking) {\n        this.set(Property.TRACKING, tracking);\n    };\n    /**\n     * Set the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @param {PositionOptions} options PositionOptions as defined by the\n     *     [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTrackingOptions = function (options) {\n        this.set(Property.TRACKING_OPTIONS, options);\n    };\n    return Geolocation;\n}(BaseObject));\nexport default Geolocation;\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<*>} declutterItems\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var zIndexItems = items[z];\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1, declutteredFeatures);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex === Infinity ? Number.MAX_SAFE_INTEGER : zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88E0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88E4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n    'experimental-webgl',\n    'webgl',\n    'webkit-3d',\n    'moz-webgl'\n];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n    try {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            HAS = true;\n            MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n            EXTENSIONS = gl.getSupportedExtensions();\n        }\n    }\n    catch (e) {\n        // pass\n    }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = object[property] = [];\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName]\n                    .call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData) for more info.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {Array<number>=} opt_arr Array.\n     * @param {number=} opt_usage Usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`. Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(opt_arr, opt_usage) {\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.arr_ = opt_arr !== undefined ? opt_arr : [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * @return {Array<number>} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.arr_;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage_;\n    };\n    return WebGLArrayBuffer;\n}());\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored'\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options=} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, -1,\n            1, 1,\n            -1, 1\n        ];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                value: options.uniforms[name],\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\n            });\n        }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        var size = frameState.size;\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n            this.renderTargetTextureSize_ = size;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default: return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport { getUid } from '../util.js';\nimport { EXTENSIONS as WEBGL_EXTENSIONS } from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport { includes } from '../array.js';\nimport { listen, unlistenAll } from '../events.js';\nimport { clear } from '../obj.js';\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T } from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport { create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../transform';\nimport { create, fromTransform } from '../vec/mat4';\nimport WebGLPostProcessingPass from './PostProcessingPass';\nimport { getContext } from '../webgl';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8B30,\n    VERTEX_SHADER: 0x8B31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n/**\n * Attribute names used in the default shaders: `POSITION`, `TEX_COORD`, `OPACITY`,\n * `ROTATE_WITH_VIEW`, `OFFSETS` and `COLOR`\n * @enum {string}\n */\nexport var DefaultAttrib = {\n    POSITION: 'a_position',\n    TEX_COORD: 'a_texCoord',\n    OPACITY: 'a_opacity',\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\n    OFFSETS: 'a_offsets',\n    COLOR: 'a_color'\n};\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   this.context.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {!Array<WebGLShader>}\n         */\n        _this.shaderCache_ = [];\n        /**\n         * @private\n         * @type {!Array<WebGLProgram>}\n         */\n        _this.programCache_ = [];\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        /**\n         * @type {boolean}\n         */\n        _this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n        // use the OES_element_index_uint extension if available\n        if (_this.hasOESElementIndexUint) {\n            gl.getExtension('OES_element_index_uint');\n        }\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1]\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n            return new WebGLPostProcessingPass({\n                webGlContext: gl,\n                scaleRatio: options.scaleRatio,\n                vertexShader: options.vertexShader,\n                fragmentShader: options.fragmentShader,\n                uniforms: options.uniforms\n            });\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (target, buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = this.bufferCache_[bufferKey] = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer\n            };\n        }\n        gl.bindBuffer(target, bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (target, buffer) {\n        var gl = this.getGL();\n        var arr = buffer.getArray();\n        this.bindBuffer(target, buffer);\n        var /** @type {ArrayBufferView} */ arrayBuffer;\n        if (target == ARRAY_BUFFER) {\n            arrayBuffer = new Float32Array(arr);\n        }\n        else if (target == ELEMENT_ARRAY_BUFFER) {\n            arrayBuffer = this.hasOESElementIndexUint ?\n                new Uint32Array(arr) : new Uint16Array(arr);\n        }\n        gl.bufferData(target, arrayBuffer, buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        unlistenAll(this.canvas_);\n        var gl = this.getGL();\n        if (!gl.isContextLost()) {\n            for (var key in this.bufferCache_) {\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\n            }\n            for (var key in this.programCache_) {\n                gl.deleteProgram(this.programCache_[key]);\n            }\n            for (var key in this.shaderCache_) {\n                gl.deleteShader(this.shaderCache_[key]);\n            }\n        }\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = this.hasOESElementIndexUint ?\n            gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        var elementSize = this.hasOESElementIndexUint ? 4 : 2;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        this.shaderCache_.push(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ =\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        this.programCache_.push(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        scaleTransform(transform, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n        rotateTransform(transform, -rotation);\n        translateTransform(transform, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        clear(this.shaderCache_);\n        clear(this.programCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\n    };\n    // TODO: shutdown program\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        if (opt_wrapS !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n        }\n        if (opt_wrapT !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n        }\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.imageListenerKeys_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        unlistenImage(this.imageListenerKeys_);\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {Array<import(\"./events.js\").EventsKey>} listener keys.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.decode) {\n        img.decode().then(loadHandler).catch(errorHandler);\n        return null;\n    }\n    else {\n        var listenerKeys = [\n            listenOnce(img, EventType.LOAD, loadHandler),\n            listenOnce(img, EventType.ERROR, errorHandler)\n        ];\n        return listenerKeys;\n    }\n}\n/**\n * @param {Array<import(\"./events.js\").EventsKey>} listenerKeys listener keys.\n */\nexport function unlistenImage(listenerKeys) {\n    if (listenerKeys) {\n        listenerKeys.forEach(unlistenByKey);\n        listenerKeys = null;\n    }\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage, unlistenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.imageListenerKeys_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        unlistenImage(this.imageListenerKeys_);\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage, unlistenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.imageListenerKeys_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        unlistenImage(this.imageListenerKeys_);\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = /** @type {Point} */ (feature.getGeometry());\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getTopLeft } from '../extent.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {number} tilePixelRatio Tile pixel ratio to display the tile\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tilePixelRatio, tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0])).map(function (x) {\n            return x * tilePixelRatio;\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var extent = options.extent || [0, -size[1], size[0], 0];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var tileSizeForTierSizeCalculation = tileSize;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [1];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(1 << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, tilePixelRatio, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_0\n * @property {string} identifier\n * @property {number} width\n * @property {number} height\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_1\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context URI.\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n/**\n * @typedef {Object} ImageInformationResponse2\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<string|IiifProfile>} profile Additional informations about the image\n * service's capabilities.\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n */\n/**\n * @typedef {Object} ImageInformationResponse3\n * @property {string} id The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {string} profile Compliance level, one of 'level0', 'level1' or 'level2'\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n * @property {Array<string>} [extraQualities] IIIF image qualities supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFormats] Image formats supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFeatures] Additional supported features whose support\n * is not indicated by the compliance level.\n */\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nvar Versions = {\n    VERSION1: 'version1',\n    VERSION2: 'version2',\n    VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nvar IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n    'level0': {\n        supports: [],\n        formats: [],\n        qualities: ['native']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['native']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['native', 'color', 'grey', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionSquare', 'regionByPct',\n            'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES['none'] = {\n    'none': {\n        supports: [],\n        formats: [],\n        qualities: []\n    }\n};\nvar COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nvar COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nvar COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\nfunction generateVersion1Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    // Version 1.0 and 1.1 do not require a profile.\n    if (levelProfile === undefined) {\n        levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n    }\n    return {\n        url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        supports: levelProfile.supports,\n        formats: levelProfile.formats.concat([iiifInfo.imageInfo.formats === undefined ?\n                [] : iiifInfo.imageInfo.formats]),\n        qualities: levelProfile.qualities.concat([iiifInfo.imageInfo.qualities === undefined ?\n                [] : iiifInfo.imageInfo.qualities]),\n        resolutions: iiifInfo.imageInfo.scale_factors,\n        tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n            [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n            (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n    };\n}\nfunction generateVersion2Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1, profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [], profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [], profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n    return {\n        url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height === undefined ? tile.width : tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: levelProfile.supports.concat(profileSupports),\n        formats: levelProfile.formats.concat(profileFormats),\n        qualities: levelProfile.qualities.concat(profileQualities)\n    };\n}\nfunction generateVersion3Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    return {\n        url: iiifInfo.imageInfo['id'],\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : levelProfile.supports.concat(iiifInfo.imageInfo.extraFeatures),\n        formats: iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : levelProfile.formats.concat(iiifInfo.imageInfo.extraFormats),\n        qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : levelProfile.supports.concat(iiifInfo.imageInfo.extraQualities),\n        maxWidth: undefined,\n        maxHeight: undefined,\n        maxArea: undefined\n    };\n}\nvar versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nvar IIIFInfo = /** @class */ (function () {\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     */\n    function IIIFInfo(imageInfo) {\n        this.setImageInfo(imageInfo);\n    }\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     * @api\n     */\n    IIIFInfo.prototype.setImageInfo = function (imageInfo) {\n        if (typeof imageInfo == 'string') {\n            this.imageInfo = JSON.parse(imageInfo);\n        }\n        else {\n            this.imageInfo = imageInfo;\n        }\n    };\n    /**\n     * @returns {Versions} Major IIIF version.\n     * @api\n     */\n    IIIFInfo.prototype.getImageApiVersion = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var context = this.imageInfo['@context'] || 'ol-no-context';\n        if (typeof context == 'string') {\n            context = [context];\n        }\n        for (var i = 0; i < context.length; i++) {\n            switch (context[i]) {\n                case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                case 'http://iiif.io/api/image/1/context.json':\n                    return Versions.VERSION1;\n                case 'http://iiif.io/api/image/2/context.json':\n                    return Versions.VERSION2;\n                case 'http://iiif.io/api/image/3/context.json':\n                    return Versions.VERSION3;\n                case 'ol-no-context':\n                    // Image API 1.0 has no '@context'\n                    if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n                        return Versions.VERSION1;\n                    }\n                    break;\n                default:\n            }\n        }\n        assert(false, 61);\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level as it appears in the IIIF image information\n     * response.\n     */\n    IIIFInfo.prototype.getComplianceLevelEntryFromProfile = function (version) {\n        if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n            return;\n        }\n        if (version === undefined) {\n            version = this.getImageApiVersion();\n        }\n        switch (version) {\n            case Versions.VERSION1:\n                if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION3:\n                if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION2:\n                if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n                    && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n                    return this.imageInfo.profile[0];\n                }\n                break;\n            default:\n        }\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n     */\n    IIIFInfo.prototype.getComplianceLevelFromProfile = function (version) {\n        var complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n        if (complianceLevel === undefined) {\n            return undefined;\n        }\n        var level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n        return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n    };\n    /**\n     * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n     * methods that are supported by the IIIF service.\n     */\n    IIIFInfo.prototype.getComplianceLevelSupportedFeatures = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var version = this.getImageApiVersion();\n        var level = this.getComplianceLevelFromProfile(version);\n        if (level === undefined) {\n            return IIIF_PROFILE_VALUES['none']['none'];\n        }\n        return IIIF_PROFILE_VALUES[version][level];\n    };\n    /**\n     * @param {PreferredOptions} opt_preferredOptions Optional options for preferred format and quality.\n     * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n     * @api\n     */\n    IIIFInfo.prototype.getTileSourceOptions = function (opt_preferredOptions) {\n        var options = opt_preferredOptions || {}, version = this.getImageApiVersion();\n        if (version === undefined) {\n            return;\n        }\n        var imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n        if (imageOptions === undefined) {\n            return;\n        }\n        return {\n            url: imageOptions.url,\n            version: version,\n            size: [this.imageInfo.width, this.imageInfo.height],\n            sizes: imageOptions.sizes,\n            format: imageOptions.formats.includes(options.format) ? options.format : 'jpg',\n            supports: imageOptions.supports,\n            quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n                options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n            resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n                return b - a;\n            }) : undefined,\n            tileSize: imageOptions.tileSize\n        };\n    };\n    return IIIFInfo;\n}());\nexport default IIIFInfo;\nexport { Versions };\n//# sourceMappingURL=IIIFInfo.js.map","/**\n * @module ol/source/IIIF\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport { getTopLeft } from '../extent.js';\nimport { CustomTile } from './Zoomify.js';\nimport { Versions } from '../format/IIIFInfo.js';\nimport { assert } from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {import(\"../size.js\").Size[]} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image @id.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\nfunction formatPercentage(percentage) {\n    return percentage.toLocaleString('en', { maximumFractionDigits: 10 });\n}\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nvar IIIF = /** @class */ (function (_super) {\n    __extends(IIIF, _super);\n    /**\n     * @param {Options} opt_options Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n     * to parse Image API service information responses into constructor options.\n     * @api\n     */\n    function IIIF(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseUrl = options.url || '';\n        baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n        var version = options.version || Versions.VERSION2;\n        var sizes = options.sizes || [];\n        var size = options.size;\n        assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n            !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n        var width = size[0];\n        var height = size[1];\n        var tileSize = options.tileSize;\n        var format = options.format || 'jpg';\n        var quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n        var resolutions = options.resolutions || [];\n        var supports = options.supports || [];\n        var extent = options.extent || [0, -height, width, 0];\n        var supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n        var supportsListedTiles = tileSize != undefined && (Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n        var supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n            (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n            (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n                supports.includes('sizeByW') || supports.includes('sizeByPct'));\n        var tileWidth, tileHeight, maxZoom;\n        resolutions.sort(function (a, b) {\n            return b - a;\n        });\n        if (supportsListedTiles || supportsArbitraryTiling) {\n            if (tileSize != undefined) {\n                if (Number.isInteger(tileSize) && tileSize > 0) {\n                    tileWidth = tileSize;\n                    tileHeight = tileSize;\n                }\n                else if (Array.isArray(tileSize) && tileSize.length > 0) {\n                    if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n                        tileWidth = tileSize[0];\n                        tileHeight = tileSize[0];\n                    }\n                    if (tileSize.length == 2) {\n                        if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[0];\n                            tileHeight = tileSize[1];\n                        }\n                        else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[1];\n                            tileHeight = tileSize[1];\n                        }\n                    }\n                }\n            }\n            if (tileWidth === undefined || tileHeight === undefined) {\n                tileWidth = DEFAULT_TILE_SIZE;\n                tileHeight = DEFAULT_TILE_SIZE;\n            }\n            if (resolutions.length == 0) {\n                maxZoom = Math.max(Math.ceil(Math.log(width / tileWidth) / Math.LN2), Math.ceil(Math.log(height / tileHeight) / Math.LN2));\n                for (var i = maxZoom; i >= 0; i--) {\n                    resolutions.push(Math.pow(2, i));\n                }\n            }\n            else {\n                var maxScaleFactor = Math.max(resolutions.slice());\n                // TODO maxScaleFactor might not be a power to 2\n                maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n            }\n        }\n        else {\n            // No tile support.\n            tileWidth = width;\n            tileHeight = height;\n            resolutions = [];\n            if (supportsListedSizes) {\n                /*\n                 * 'sizes' provided. Use full region in different resolutions. Every\n                 * resolution has only one tile.\n                 */\n                sizes.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n                maxZoom = -1;\n                var ignoredSizesIndex = [];\n                for (var i = 0; i < sizes.length; i++) {\n                    var resolution = width / sizes[i][0];\n                    if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n                        ignoredSizesIndex.push(i);\n                        continue;\n                    }\n                    resolutions.push(resolution);\n                    maxZoom++;\n                }\n                if (ignoredSizesIndex.length > 0) {\n                    for (var i = 0; i < ignoredSizesIndex.length; i++) {\n                        sizes.splice(ignoredSizesIndex[i] - i, 1);\n                    }\n                }\n            }\n            else {\n                // No useful image information at all. Try pseudo tile with full image.\n                resolutions.push(1);\n                sizes.push([width, height]);\n                maxZoom = 0;\n            }\n        }\n        var tileGrid = new TileGrid({\n            tileSize: [tileWidth, tileHeight],\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n            var regionParam, sizeParam;\n            var zoom = tileCoord[0];\n            if (zoom > maxZoom) {\n                return;\n            }\n            var tileX = tileCoord[1], tileY = tileCoord[2], scale = resolutions[zoom];\n            if (tileX === undefined || tileY === undefined || scale === undefined ||\n                tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n                tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n                return;\n            }\n            if (supportsArbitraryTiling || supportsListedTiles) {\n                var regionX = tileX * tileWidth * scale, regionY = tileY * tileHeight * scale;\n                var regionW = tileWidth * scale, regionH = tileHeight * scale, sizeW = tileWidth, sizeH = tileHeight;\n                if (regionX + regionW > width) {\n                    regionW = width - regionX;\n                }\n                if (regionY + regionH > height) {\n                    regionH = height - regionY;\n                }\n                if (regionX + tileWidth * scale > width) {\n                    sizeW = Math.floor((width - regionX + scale - 1) / scale);\n                }\n                if (regionY + tileHeight * scale > height) {\n                    sizeH = Math.floor((height - regionY + scale - 1) / scale);\n                }\n                if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n                    // canonical full image region parameter is 'full', not 'x,y,w,h'\n                    regionParam = 'full';\n                }\n                else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n                    regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n                }\n                else if (supports.includes('regionByPct')) {\n                    var pctX = formatPercentage(regionX / width * 100), pctY = formatPercentage(regionY / height * 100), pctW = formatPercentage(regionW / width * 100), pctH = formatPercentage(regionH / height * 100);\n                    regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n                }\n                if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n                    sizeParam = sizeW + ',';\n                }\n                else if (supports.includes('sizeByH')) {\n                    sizeParam = ',' + sizeH;\n                }\n                else if (supports.includes('sizeByWh')) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (supports.includes('sizeByPct')) {\n                    sizeParam = 'pct:' + formatPercentage(100 / scale);\n                }\n            }\n            else {\n                regionParam = 'full';\n                if (supportsListedSizes) {\n                    var regionWidth = sizes[zoom][0], regionHeight = sizes[zoom][1];\n                    if (version == Versions.VERSION3) {\n                        if (regionWidth == width && regionHeight == height) {\n                            sizeParam = 'max';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',' + regionHeight;\n                        }\n                    }\n                    else {\n                        if (regionWidth == width) {\n                            sizeParam = 'full';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',';\n                        }\n                    }\n                }\n                else {\n                    sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n                }\n            }\n            return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n        };\n        var IiifTileClass = CustomTile.bind(null, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: options.state,\n            tileClass: IiifTileClass,\n            tileGrid: tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return IIIF;\n}(TileImage));\nexport default IIIF;\n//# sourceMappingURL=IIIF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    CARMENTA_SERVER: 'carmentaserver',\n    GEOSERVER: 'geoserver',\n    MAPSERVER: 'mapserver',\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState, layerState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var element = renderer.renderFrame(frameState, layerState);\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.IDLE && opt_request === true) {\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.EMPTY;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get an source tiles for this tile.\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\n     * source tiles's consumer count.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles_ = getSourceTiles;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n         */\n        _this.removeSourceTiles_ = removeSourceTiles;\n        /**\n         * @private\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.disposeInternal = function () {\n        this.removeSourceTiles_(this);\n        for (var key in this.context_) {\n            var canvas = this.context_[key].canvas;\n            canvas.width = canvas.height = 0;\n        }\n        for (var key in this.executorGroups) {\n            var executorGroups = this.executorGroups[key];\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].disposeInternal();\n            }\n        }\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D();\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles_(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @type {number}\n         */\n        _this.consumers = 0;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.disposeInternal = function () {\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            this.loader_(this.extent, this.resolution, this.projection);\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, getKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { isEmpty } from '../obj.js';\nimport { equals } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxZoom: options.maxZoom || 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\n         */\n        _this.sourceTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n         */\n        _this.sourceTilesByTileKey_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTiles_ = {};\n        this.sourceTilesByTileKey_ = {};\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var sourceTiles = [];\n        var urlTileCoord = tile.wrappedTileCoord;\n        if (urlTileCoord) {\n            var tileGrid = this.getTileGridForProjection(projection);\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            var z = urlTileCoord[0];\n            var resolution = tileGrid.getResolution(z);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(extent, -1 / resolution, extent);\n            var sourceTileGrid_1 = this.tileGrid;\n            var sourceExtent = sourceTileGrid_1.getExtent();\n            if (sourceExtent) {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            var sourceZ_1 = sourceTileGrid_1.getZForResolution(resolution, 1);\n            var minZoom = sourceTileGrid_1.getMinZoom();\n            var loadedZ_1 = sourceZ_1 + 1;\n            var covered_1, empty_1;\n            do {\n                --loadedZ_1;\n                covered_1 = true;\n                empty_1 = true;\n                sourceTileGrid_1.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\n                    var tileKey = getKey(sourceTileCoord);\n                    var sourceTile;\n                    if (tileKey in this.sourceTiles_) {\n                        sourceTile = this.sourceTiles_[tileKey];\n                        var state = sourceTile.getState();\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                            empty_1 = empty_1 && state === TileState.EMPTY;\n                            sourceTiles.push(sourceTile);\n                            return;\n                        }\n                    }\n                    else if (loadedZ_1 === sourceZ_1) {\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\n                        sourceTile.extent = sourceTileGrid_1.getTileCoordExtent(sourceTileCoord);\n                        sourceTile.projection = projection;\n                        sourceTile.resolution = sourceTileGrid_1.getResolution(sourceTileCoord[0]);\n                        this.sourceTiles_[tileKey] = sourceTile;\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n                        sourceTile.load();\n                    }\n                    else {\n                        empty_1 = false;\n                    }\n                    covered_1 = false;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    unlistenByKey(key_1);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                                    tile.hifi = true;\n                                    tile.sourceZ = sourceZ_1;\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered_1) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered_1 && loadedZ_1 > minZoom);\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\n                tile.setState(TileState.LOADING);\n            }\n            if (covered_1 || empty_1) {\n                tile.hifi = sourceZ_1 === loadedZ_1;\n                tile.sourceZ = loadedZ_1;\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n                if (tile.getState() < TileState.LOADED) {\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\n                }\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                    this.removeSourceTiles(tile);\n                    this.addSourceTiles(tile, sourceTiles);\n                }\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n     */\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n            sourceTiles[i].consumers++;\n        }\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     */\n    VectorTile.prototype.removeSourceTiles = function (tile) {\n        var tileKey = getKey(tile.tileCoord);\n        if (tileKey in this.sourceTilesByTileKey_) {\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                sourceTile.consumers--;\n                if (sourceTile.consumers === 0) {\n                    sourceTile.dispose();\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n                }\n            }\n        }\n        delete this.sourceTilesByTileKey_[tileKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\n            tile.key = this.getRevision().toString();\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { containsExtent } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\n    var extent, wrapX;\n    if (wgs84BoundingBox !== undefined) {\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\n        var projectionExtent = projection.getExtent();\n        if (projectionExtent) {\n            // If possible, do a sanity check on the extent - it should never be\n            // bigger than the validity extent of the projection of a matrix set.\n            if (!containsExtent(projectionExtent, extent)) {\n                extent = undefined;\n            }\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport WebGLHelper from '../../webgl/Helper';\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        _this.helper_ = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper_.getShaderCompileErrors();\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\n/**\n * Pushes vertices and indices to the given buffers using the geometry coordinates and the following properties\n * from the feature:\n * - `color`\n * - `opacity`\n * - `size` (for points)\n * - `u0`, `v0`, `u1`, `v1` (for points)\n * - `rotateWithView` (for points)\n * - `width` (for lines)\n * Custom attributes can be designated using the `opt_attributes` argument, otherwise other properties on the\n * feature will be ignored.\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer in which new vertices will be pushed.\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer in which new indices will be pushed.\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature in geojson format, coordinates\n * expressed in EPSG:4326.\n * @param {Array<string>} [opt_attributes] Custom attributes. An array of properties which will be read from the\n * feature and pushed in the buffer in the given order. Note: attributes can only be numerical! Any other type or\n * NaN will result in `0` being pushed in the buffer.\n */\nexport function pushFeatureToBuffer(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\n    if (!geojsonFeature.geometry) {\n        return;\n    }\n    switch (geojsonFeature.geometry.type) {\n        case 'Point':\n            pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes);\n            return;\n        default:\n            return;\n    }\n}\nvar tmpArray_ = [];\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature\n * @param {Array<string>} [opt_attributes] Custom attributes\n * @private\n */\nfunction pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\n    var stride = 12 + (opt_attributes !== undefined ? opt_attributes.length : 0);\n    var x = geojsonFeature.geometry.coordinates[0];\n    var y = geojsonFeature.geometry.coordinates[1];\n    var u0 = geojsonFeature.properties.u0;\n    var v0 = geojsonFeature.properties.v0;\n    var u1 = geojsonFeature.properties.u1;\n    var v1 = geojsonFeature.properties.v1;\n    var size = geojsonFeature.properties.size;\n    var opacity = geojsonFeature.properties.opacity;\n    var rotateWithView = geojsonFeature.properties.rotateWithView;\n    var color = geojsonFeature.properties.color;\n    var red = color[0];\n    var green = color[1];\n    var blue = color[2];\n    var alpha = color[3];\n    var baseIndex = vertexBuffer.getArray().length / stride;\n    // read custom numerical attributes on the feature\n    var customAttributeValues = tmpArray_;\n    customAttributeValues.length = opt_attributes ? opt_attributes.length : 0;\n    for (var i = 0; i < customAttributeValues.length; i++) {\n        customAttributeValues[i] = parseFloat(geojsonFeature.properties[opt_attributes[i]]) || 0;\n    }\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    vertexBuffer.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    indexBuffer.getArray().push(baseIndex, baseIndex + 1, baseIndex + 3, baseIndex + 1, baseIndex + 2, baseIndex + 3);\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankTexture() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n    return image;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer';\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl';\nimport { DefaultAttrib, DefaultUniform } from '../../webgl/Helper';\nimport GeometryType from '../../geom/GeometryType';\nimport WebGLLayerRenderer, { getBlankTexture, pushFeatureToBuffer } from './Layer';\nimport GeoJSON from '../../format/GeoJSON';\nimport { getUid } from '../../util';\nimport ViewHint from '../../ViewHint';\nimport { createEmpty, equals } from '../../extent';\nimport { create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, apply as applyTransform } from '../../transform';\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, Array<number>=):Array<number>} [colorCallback] Will be called on every feature in the\n * source to compute the color for use in the fragment shader (available as the `v_color` varying). This is only done on source change.\n * The return value should be between an array of R, G, B, A values between 0 and 1.  To reduce unnecessary\n * allocation, the function is called with a reusable array that can serve as the return value after updating\n * the R, G, B, and A values.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var uniforms = options.uniforms || {};\n        uniforms.u_texture = options.texture || getBlankTexture();\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, vectorLayer, {\n            uniforms: uniforms,\n            postProcesses: options.postProcesses\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.program_ = _this.helper_.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\n        _this.helper_.useProgram(_this.program_);\n        _this.sizeCallback_ = options.sizeCallback || function () {\n            return 1;\n        };\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\n            var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\n            return geom.getCoordinates()[index];\n        };\n        _this.opacityCallback_ = options.opacityCallback || function () {\n            return 1;\n        };\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\n            return index < 2 ? 0 : 1;\n        };\n        _this.colorArray_ = [1, 1, 1, 1];\n        _this.colorCallback_ = options.colorCallback || function (feature, color) {\n            return this.colorArray_;\n        };\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\n            return false;\n        };\n        _this.geojsonFormat_ = new GeoJSON();\n        /**\n         * @type {Object<string, import(\"../../format/GeoJSON\").GeoJSONFeature>}\n         * @private\n         */\n        _this.geojsonFeatureCache_ = {};\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\n        this.helper_.finalizeDraw(frameState);\n        var canvas = this.helper_.getCanvas();\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var viewState = frameState.viewState;\n        // TODO: get this from somewhere...\n        var stride = 12;\n        // the source has changed: clear the feature cache & reload features\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n            this.geojsonFeatureCache_ = {};\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n        }\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        if ((sourceChanged || extentChanged) && viewNotMoving) {\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper_.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper_.prepareDraw(frameState);\n        // write new data\n        this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n        this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n        this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n        this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n        this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n        this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n        this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        this.verticesBuffer_.getArray().length = 0;\n        this.indicesBuffer_.getArray().length = 0;\n        // saves the projection transform for the current frame state\n        this.helper_.makeProjectionTransform(frameState, this.renderTransform_);\n        makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n        // loop on features to fill the buffer\n        var features = vectorSource.getFeatures();\n        var feature;\n        for (var i = 0; i < features.length; i++) {\n            feature = features[i];\n            if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n                continue;\n            }\n            var geojsonFeature = this.geojsonFeatureCache_[getUid(feature)];\n            if (!geojsonFeature) {\n                geojsonFeature = this.geojsonFormat_.writeFeatureObject(feature);\n                this.geojsonFeatureCache_[getUid(feature)] = geojsonFeature;\n            }\n            geojsonFeature.geometry.coordinates[0] = this.coordCallback_(feature, 0);\n            geojsonFeature.geometry.coordinates[1] = this.coordCallback_(feature, 1);\n            applyTransform(this.renderTransform_, geojsonFeature.geometry.coordinates);\n            geojsonFeature.properties = geojsonFeature.properties || {};\n            geojsonFeature.properties.color = this.colorCallback_(feature, this.colorArray_);\n            geojsonFeature.properties.u0 = this.texCoordCallback_(feature, 0);\n            geojsonFeature.properties.v0 = this.texCoordCallback_(feature, 1);\n            geojsonFeature.properties.u1 = this.texCoordCallback_(feature, 2);\n            geojsonFeature.properties.v1 = this.texCoordCallback_(feature, 3);\n            geojsonFeature.properties.size = this.sizeCallback_(feature);\n            geojsonFeature.properties.opacity = this.opacityCallback_(feature);\n            geojsonFeature.properties.rotateWithView = this.rotateWithViewCallback_(feature) ? 1 : 0;\n            pushFeatureToBuffer(this.verticesBuffer_, this.indicesBuffer_, geojsonFeature);\n        }\n        this.helper_.flushBufferData(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<Array<*>>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push(executor.declutterItems);\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        var declutterReplays = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer()).getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = /** @type {import(\"../../layer/Vector\").default} */ (this.getLayer());\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\nimport { assign } from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport { listen } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport ImageState from '../../ImageState.js';\nimport { renderDeclutterItems } from '../../render.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n     */\n    function CanvasVectorImageLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @type {!Array<string>}\n         */\n        _this.skippedFeatures_ = [];\n        /**\n         * @private\n         * @type {import(\"./VectorLayer.js\").default}\n         */\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.layerImageRatio_ = layer.getImageRatio();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\n        this.vectorRenderer_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var hints = frameState.viewHints;\n        var vectorRenderer = this.vectorRenderer_;\n        var renderedExtent = frameState.extent;\n        if (this.layerImageRatio_ !== 1) {\n            renderedExtent = renderedExtent.slice(0);\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var skippedFeatures_1 = this.skippedFeatures_;\n            var context = vectorRenderer.context;\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n                declutterItems: [],\n                size: [\n                    getWidth(renderedExtent) / viewResolution,\n                    getHeight(renderedExtent) / viewResolution\n                ],\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n                    rotation: 0\n                }))\n            }));\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\n            var image_1 = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n                if (vectorRenderer.prepareFrame(imageFrameState_1, layerState) &&\n                    (vectorRenderer.replayGroupChanged ||\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\n                    vectorRenderer.renderFrame(imageFrameState_1, layerState);\n                    renderDeclutterItems(imageFrameState_1, null);\n                    skippedFeatures_1 = newSkippedFeatures_1;\n                    callback();\n                }\n            });\n            listen(image_1, EventType.CHANGE, function () {\n                if (image_1.getState() === ImageState.LOADED) {\n                    this.image_ = image_1;\n                    this.skippedFeatures_ = skippedFeatures_1;\n                }\n            }, this);\n            image_1.load();\n        }\n        if (this.image_) {\n            var image = this.image_;\n            var imageResolution = image.getResolution();\n            var imagePixelRatio = image.getPixelRatio();\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        }\n        return !!this.image_;\n    };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (this.vectorRenderer_) {\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n        else {\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n    };\n    return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\nexport default CanvasVectorImageLayerRenderer;\n//# sourceMappingURL=VectorImageLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid'\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten, unlistenByKey } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, containsCoordinate, equals, getIntersection, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport { clear, isEmpty } from '../../obj.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        var baseCanvas = _this.context.canvas;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.overlayContext_ = createCanvasContext2D();\n        var overlayCanvas = _this.overlayContext_.canvas;\n        overlayCanvas.style.position = 'absolute';\n        overlayCanvas.style.transformOrigin = 'top left';\n        var container = document.createElement('div');\n        var style = container.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        container.appendChild(baseCanvas);\n        container.appendChild(overlayCanvas);\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.container_ = container;\n        /**\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.overlayPixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inverseOverlayPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        // Use nearest lower resolution.\n        _this.zDirection = 1;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        this.overlayContext_.canvas.width = this.overlayContext_.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR || state === TileState.ABORT) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                this.renderTileImageQueue_[tileUid] = tile;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, frameState));\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            this.prepareTile(tile, pixelRatio, projection);\n        }\n        return tile;\n    };\n    /**\n     * @inheritdoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState, layerState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty && builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        var executorGroups = tile.executorGroups[layerUid];\n        if (executorGroups) {\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].dispose();\n            }\n        }\n        tile.executorGroups[layerUid] = [];\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, layer.getDeclutter());\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n                null :\n                sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var declutter = layer.getDeclutter();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        /** @type {!Object<string, boolean>} */\n        var features = {};\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var i, ii;\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n            var tile = renderedTiles[i];\n            if (!declutter) {\n                // When not decluttering, we only need to consider the tile that contains the given\n                // coordinate, because each feature will be rendered for each tile that contains it.\n                var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n                if (!containsCoordinate(tileExtent, coordinate)) {\n                    continue;\n                }\n            }\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n                /**\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n                 * @return {?} Callback result.\n                 */\n                function (feature) {\n                    var key = feature.getId();\n                    if (key === undefined) {\n                        key = getUid(feature);\n                    }\n                    if (!(key in features)) {\n                        features[key] = true;\n                        return callback(feature, layer);\n                    }\n                }, layer.getDeclutter() ? declutteredFeatures : null);\n            }\n        }\n        return found;\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        _super.prototype.renderFrame.call(this, frameState, layerState);\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        if (!isEmpty(this.renderTileImageQueue_) && !this.extentChanged) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        var context = this.overlayContext_;\n        var declutterReplays = layer.getDeclutter() ? {} : null;\n        var source = layer.getSource();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var pixelRatio = frameState.pixelRatio;\n        var rotation = frameState.viewState.rotation;\n        var size = frameState.size;\n        // set forward and inverse pixel transforms\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n        // resize and clear\n        var canvas = context.canvas;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        var tiles = this.renderedTiles;\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var clips = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            if (tile.getState() == TileState.ABORT) {\n                continue;\n            }\n            var tileCoord = tile.tileCoord;\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var zs = void 0, currentClip = void 0;\n                if (!declutterReplays) {\n                    zs = [];\n                    currentClip = executorGroup.getClipCoords(transform);\n                    context.save();\n                    // Create a clip mask for regions in this low resolution tile that are\n                    // already filled by a higher resolution tile\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\n                        var clip = clips[j];\n                        if (currentZ < zs[j]) {\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher resolution tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n                if (!declutterReplays) {\n                    context.restore();\n                    clips.push(currentClip);\n                    zs.push(currentZ);\n                }\n            }\n        }\n        if (declutterReplays) {\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        // Now that we have rendered the tiles we have already, let's prepare new tile images\n        // for the next frame\n        this.renderTileImages_(hifi, frameState);\n        return this.container_;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            frameState.animate = true;\n            delete this.renderTileImageQueue_[uid];\n            var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var viewState = frameState.viewState;\n            var tileGrid = layer.getSource().getTileGridForProjection(viewState.projection);\n            var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n            var renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\n            this.renderTileImage_(tile, frameState.pixelRatio, renderPixelRatio, viewState.projection);\n        }\n        clear(this.renderTileImageQueue_);\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} renderPixelRatio Render pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, pixelRatio, renderPixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.max(pixelRatio, renderPixelRatio / pixelRatio);\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n        if (data) {\n            return data;\n        }\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n        var context = this.overlayContext_;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\nimport { get as getProjection, getTransform } from '../../proj.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + ((lon2 - lon1) * frac), lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport { degreesToStringHDMS } from '../coordinate';\nimport Text from '../style/Text';\nimport Fill from '../style/Fill';\nimport Stroke from '../style/Stroke';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj';\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent';\nimport { clamp } from '../math';\nimport Style from '../style/Style';\nimport Feature from '../Feature';\nimport { bbox } from '../loadingstrategy';\nimport { meridian, parallel } from '../geom/flat/geodesic';\nimport GeometryLayout from '../geom/GeometryLayout';\nimport Point from '../geom/Point';\nimport Collection from '../Collection';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)'\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLatP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLonP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLatP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLonP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n                options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n                options.latLabelPosition;\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.lonLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.lonLabelStyleCache_[label]) {\n                    this.lonLabelStyleCache_[label] = new Style({\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textBaseline: 'bottom',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.lonLabelStyleCache_[label];\n            }.bind(_this);\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.latLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.latLabelStyleCache_[label]) {\n                    this.latLabelStyleCache_[label] = new Style({\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textAlign: 'right',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.latLabelStyleCache_[label];\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: bbox,\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_\n        });\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        _this.tmpExtent_ = null;\n        return _this;\n    }\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n        // we should not keep track of loaded extents\n        setTimeout(function () {\n            source.removeLoadedExtent(extent);\n        }, 0);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = resolution * resolution / 4;\n        var updateProjectionInfo = !this.projection_ ||\n            !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridiansLabels_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallelsLabels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        var labelData;\n        if (this.meridiansLabels_) {\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n                labelData = this.meridiansLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.lonLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n        if (this.parallelsLabels_) {\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n                labelData = this.parallelsLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.latLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\n                this.meridiansLabels_[index] = {\n                    geom: textPoint,\n                    text: this.lonLabelFormatter_(lon)\n                };\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\n                this.parallelsLabels_[index] = {\n                    geom: textPoint,\n                    text: this.latLabelFormatter_(lat)\n                };\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var centerLonLat = this.toLonLatTransform_(center);\n        var centerLon = centerLonLat[0];\n        var centerLat = centerLonLat[1];\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        var validExtent = [\n            Math.max(extent[0], this.minLonP_),\n            Math.max(extent[1], this.minLatP_),\n            Math.min(extent[2], this.maxLonP_),\n            Math.min(extent[3], this.maxLatP_)\n        ];\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lon != this.minLon_ && cnt++ < maxLines) {\n            lon = Math.max(lon - interval, this.minLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\n            lon = Math.min(lon + interval, this.maxLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = this.intervals_[i] / 2;\n            p1[0] = centerLon - delta;\n            p1[1] = centerLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = centerLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate = [flatCoordinates[0], lat];\n        var point;\n        if (index in this.meridiansLabels_) {\n            point = this.meridiansLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate = [lon, flatCoordinates[1]];\n        var point;\n        if (index in this.parallelsLabels_) {\n            point = this.parallelsLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        this.maxLatP_ = worldExtentP[3];\n        this.maxLonP_ = worldExtentP[2];\n        this.minLatP_ = worldExtentP[1];\n        this.minLonP_ = worldExtentP[0];\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport { listen } from '../events.js';\nimport { getChangeEventType } from '../Object.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius'\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * @inheritDoc\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n                }.bind(this),\n                u_resolution: function (frameState) {\n                    return frameState.viewState.resolution;\n                }\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: this.gradient_\n                    }\n                }\n            ],\n            opacityCallback: this.weightFunction_\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport { assign } from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /** @class */ (function (_super) {\n    __extends(VectorImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.imageRatio;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n        return _this;\n    }\n    /**\n     * @return {number} Ratio between rendered extent size and viewport extent size.\n     */\n    VectorImageLayer.prototype.getImageRatio = function () {\n        return this.imageRatio_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorImageLayer.prototype.createRenderer = function () {\n        return new CanvasVectorImageLayerRenderer(this);\n    };\n    return VectorImageLayer;\n}(BaseVectorLayer));\nexport default VectorImageLayer;\n//# sourceMappingURL=VectorImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport { assert } from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\n *    cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\n        /**\n         * @private\n         * @type {VectorTileRenderType}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * @return {VectorTileRenderType} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotation(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolution(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = /** @type {LineString} */ (geometry);\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b);\n        };\n        var extent = this.getExtent();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex = squaredDist1 > squaredDist2 ?\n                        closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixel(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtent();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixel(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtent();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        var featureOverlay = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                features: options.features,\n                wrapX: options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @private\n         * @type {VectorLayer}\n         */\n        _this.featureOverlay_ = featureOverlay;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.featureOverlay_.getSource().getFeaturesCollection();\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {VectorLayer} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Get the overlay layer that this interaction renders selected features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Select.prototype.getOverlay = function () {\n        return this.featureOverlay_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var selectedFeatures = this.getFeatures();\n        if (currentMap) {\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n        }\n        _super.prototype.setMap.call(this, map);\n        this.featureOverlay_.setMap(map);\n        if (map) {\n            selectedFeatures.forEach(map.skipFeature.bind(map));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature, resolution) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     */\n    function TranslateEvent(type, features, coordinate) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                return feature;\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent } from '../extent.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /** @class */ (function (_super) {\n    __extends(EsriJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function EsriJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        feature.setGeometry(geometry);\n        if (opt_options && opt_options.idField &&\n            esriJSONFeature.attributes[opt_options.idField]) {\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\n        }\n        if (esriJSONFeature.attributes) {\n            feature.setProperties(esriJSONFeature.attributes, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var options = opt_options ? opt_options : {};\n        if (object['features']) {\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            var features = [];\n            var esriJSONFeatures = esriJSONFeatureSet.features;\n            options.idField = object.objectIdFieldName;\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n            }\n            return features;\n        }\n        else {\n            return [this.readFeatureFromObject(object, options)];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n            var crs = spatialReference.wkid;\n            return getProjection('EPSG:' + crs);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Encode a geometry as a EsriJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONGeometry} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * Encode a feature as a esriJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var object = {};\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object['geometry'] = writeGeometry(geometry, opt_options);\n            if (opt_options && opt_options.featureProjection) {\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n                });\n            }\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object['attributes'] = properties;\n        }\n        else {\n            object['attributes'] = {};\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a EsriJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            'features': objects\n        };\n    };\n    return EsriJSON;\n}(JSONFeature));\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var type;\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n        type = GeometryType.POINT;\n    }\n    else if (object['points']) {\n        type = GeometryType.MULTI_POINT;\n    }\n    else if (object['paths']) {\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n        if (esriJSONPolyline.paths.length === 1) {\n            type = GeometryType.LINE_STRING;\n        }\n        else {\n            type = GeometryType.MULTI_LINE_STRING;\n        }\n    }\n    else if (object['rings']) {\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n        var layout = getGeometryLayout(esriJSONPolygon);\n        var rings = convertRings(esriJSONPolygon.rings, layout);\n        if (rings.length === 1) {\n            type = GeometryType.POLYGON;\n            object['rings'] = rings[0];\n        }\n        else {\n            type = GeometryType.MULTI_POLYGON;\n            object['rings'] = rings;\n        }\n    }\n    var geometryReader = GEOMETRY_READERS[type];\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n    var flatRing = [];\n    var outerRings = [];\n    var holes = [];\n    var i, ii;\n    for (i = 0, ii = rings.length; i < ii; ++i) {\n        flatRing.length = 0;\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\n        // is this ring an outer ring? is it clockwise?\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\n        if (clockwise) {\n            outerRings.push([rings[i]]);\n        }\n        else {\n            holes.push(rings[i]);\n        }\n    }\n    while (holes.length) {\n        var hole = holes.shift();\n        var matched = false;\n        // loop over all outer rings and see if they contain our hole.\n        for (i = outerRings.length - 1; i >= 0; i--) {\n            var outerRing = outerRings[i][0];\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\n            if (containsHole) {\n                // the hole is contained push it into our polygon\n                outerRings[i].push(hole);\n                matched = true;\n                break;\n            }\n        }\n        if (!matched) {\n            // no outer rings contain this hole turn it into and outer\n            // ring (reverse it)\n            outerRings.push([hole.reverse()]);\n        }\n    }\n    return outerRings;\n}\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n    var point;\n    if (object.m !== undefined && object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\n    }\n    else if (object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\n    }\n    else if (object.m !== undefined) {\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\n    }\n    else {\n        point = new Point([object.x, object.y]);\n    }\n    return point;\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new LineString(object.paths[0], layout);\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiLineString(object.paths, layout);\n}\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n    var layout = GeometryLayout.XY;\n    if (object.hasZ === true && object.hasM === true) {\n        layout = GeometryLayout.XYZM;\n    }\n    else if (object.hasZ === true) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (object.hasM === true) {\n        layout = GeometryLayout.XYM;\n    }\n    return layout;\n}\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPoint(object.points, layout);\n}\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPolygon(object.rings, layout);\n}\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new Polygon(object.rings, layout);\n}\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {EsriJSONPoint} */\n    var esriJSON;\n    var layout = geometry.getLayout();\n    if (layout === GeometryLayout.XYZ) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            m: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYZM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2],\n            m: coordinates[3]\n        };\n    }\n    else if (layout === GeometryLayout.XY) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1]\n        };\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    return esriJSON;\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n    var layout = geometry.getLayout();\n    return {\n        hasZ: (layout === GeometryLayout.XYZ ||\n            layout === GeometryLayout.XYZM),\n        hasM: (layout === GeometryLayout.XYM ||\n            layout === GeometryLayout.XYZM)\n    };\n}\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, opt_options) {\n    var hasZM = getHasZM(lineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: [\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n        ]\n    };\n}\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, opt_options) {\n    // Esri geometries use the left-hand rule\n    var hasZM = getHasZM(polygon);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    };\n}\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, opt_options) {\n    var hasZM = getHasZM(multiLineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, opt_options) {\n    var hasZM = getHasZM(multiPoint);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var hasZM = getHasZM(geometry);\n    var coordinates = geometry.getCoordinates(false);\n    var output = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\n            output.push(coordinates[i][x]);\n        }\n    }\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n    };\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\nexport default EsriJSON;\n//# sourceMappingURL=EsriJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = new XMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /** @class */ (function (_super) {\n    __extends(GMLBase, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function GMLBase(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\n        /**\n         * @protected\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType = options.featureType;\n        /**\n         * @protected\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS = options.featureNS;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.srsName = options.srsName;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.schemaLocation = '';\n        /**\n         * @type {Object<string, Object<string, Object>>}\n         */\n        _this.FEATURE_COLLECTION_PARSERS = {};\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\n        };\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<Feature> | undefined} Features.\n     */\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\n        var localName = node.localName;\n        var features = null;\n        if (localName == 'FeatureCollection') {\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\n        }\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\n            var context = objectStack[0];\n            var featureType = context['featureType'];\n            var featureNS = context['featureNS'];\n            var prefix = 'p';\n            var defaultPrefix = 'p0';\n            if (!featureType && node.childNodes) {\n                featureType = [], featureNS = {};\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n                    var child = node.childNodes[i];\n                    if (child.nodeType === 1) {\n                        var ft = child.nodeName.split(':').pop();\n                        if (featureType.indexOf(ft) === -1) {\n                            var key = '';\n                            var count = 0;\n                            var uri = child.namespaceURI;\n                            for (var candidate in featureNS) {\n                                if (featureNS[candidate] === uri) {\n                                    key = candidate;\n                                    break;\n                                }\n                                ++count;\n                            }\n                            if (!key) {\n                                key = prefix + count;\n                                featureNS[key] = uri;\n                            }\n                            featureType.push(key + ':' + ft);\n                        }\n                    }\n                }\n                if (localName != 'featureMember') {\n                    // recheck featureType for each featureMember\n                    context['featureType'] = featureType;\n                    context['featureNS'] = featureNS;\n                }\n            }\n            if (typeof featureNS === 'string') {\n                var ns = featureNS;\n                featureNS = {};\n                featureNS[defaultPrefix] = ns;\n            }\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n            var parsersNS = {};\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n            for (var p in featureNS) {\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n                        defaultPrefix : featureTypes[i].split(':')[0];\n                    if (featurePrefix === p) {\n                        parsers[featureTypes[i].split(':').pop()] =\n                            (localName == 'featureMembers') ?\n                                makeArrayPusher(this.readFeatureElement, this) :\n                                makeReplacer(this.readFeatureElement, this);\n                    }\n                }\n                parsersNS[featureNS[p]] = parsers;\n            }\n            if (localName == 'featureMember') {\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n            }\n            else {\n                features = pushParseAndPop([], parsersNS, node, objectStack);\n            }\n        }\n        if (features === null) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n     */\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\n        var context = /** @type {Object} */ (objectStack[0]);\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n        if (geometry) {\n            if (Array.isArray(geometry)) {\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n            }\n            else {\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\n     * @return {Feature|Object} Feature\n     */\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\n        var geometryName;\n        var values = {};\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var value = void 0;\n            var localName = n.localName;\n            // first, check if it is simple attribute\n            if (n.childNodes.length === 0\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n                value = getAllTextContent(n, false);\n                if (ONLY_WHITESPACE_RE.test(value)) {\n                    value = undefined;\n                }\n            }\n            else {\n                if (asFeature) {\n                    //if feature, try it as a geometry\n                    value = this.readGeometryElement(n, objectStack);\n                }\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n                    value = this.readFeatureElementInternal(n, objectStack, false);\n                }\n                else if (localName !== 'boundedBy') {\n                    // boundedBy is an extent and must not be considered as a geometry\n                    geometryName = localName;\n                }\n            }\n            if (values[localName]) {\n                if (!(values[localName] instanceof Array)) {\n                    values[localName] = [values[localName]];\n                }\n                values[localName].push(value);\n            }\n            else {\n                values[localName] = value;\n            }\n            var len = n.attributes.length;\n            if (len > 0) {\n                values[localName] = { _content_: values[localName] };\n                for (var i = 0; i < len; i++) {\n                    var attName = n.attributes[i].name;\n                    values[localName][attName] = n.attributes[i].value;\n                }\n            }\n        }\n        if (!asFeature) {\n            return values;\n        }\n        else {\n            var feature = new Feature(values);\n            if (geometryName) {\n                feature.setGeometryName(geometryName);\n            }\n            var fid = node.getAttribute('fid') ||\n                getAttributeNS(node, this.namespace, 'id');\n            if (fid) {\n                feature.setId(fid);\n            }\n            return feature;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Feature} Feature.\n     */\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\n        return this.readFeatureElementInternal(node, objectStack, true);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Point|undefined} Point.\n     */\n    GMLBase.prototype.readPoint = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPoint|undefined} MultiPoint.\n     */\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\n        if (coordinates) {\n            return new MultiPoint(coordinates);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            return new MultiLineString(lineStrings);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LineString|undefined} LineString.\n     */\n    GMLBase.prototype.readLineString = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\n     */\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n        if (ring) {\n            return ring;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LinearRing|undefined} LinearRing.\n     */\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Polygon|undefined} Polygon.\n     */\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>} Flat coordinates.\n     */\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\n        return geometry ? geometry : null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {\n            featureType: this.featureType,\n            featureNS: this.featureNS\n        };\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        var features = this.readFeaturesInternal(node, [options]);\n        return features || [];\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readProjectionFromNode = function (node) {\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n    };\n    return GMLBase;\n}(XMLFeature));\nGMLBase.prototype.namespace = GMLNS;\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\nexport default GMLBase;\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, (bool) ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(DOCUMENT.createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() + '-' +\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\n        padNumber(date.getUTCDate(), 2) + 'T' +\n        padNumber(date.getUTCHours(), 2) + ':' +\n        padNumber(date.getUTCMinutes(), 2) + ':' +\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML3\n */\nimport { extend } from '../array.js';\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /** @class */ (function (_super) {\n    __extends(GML3, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML3(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiCurve_ = options.multiCurve !== undefined ?\n            options.multiCurve : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiSurface_ = options.multiSurface !== undefined ?\n            options.multiSurface : true;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hasZ = options.hasZ !== undefined ?\n            options.hasZ : false;\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            var multiLineString = new MultiLineString(lineStrings);\n            return multiLineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Polygon|undefined} Polygon.\n     */\n    GML3.prototype.readSurface_ = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {LineString|undefined} LineString.\n     */\n    GML3.prototype.readCurve_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false);\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        var m;\n        while ((m = re.exec(s))) {\n            flatCoordinates.push(parseFloat(m[1]));\n            s = s.substr(m[0].length);\n        }\n        if (s !== '') {\n            return undefined;\n        }\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        if (axisOrientation === 'neu') {\n            var i = void 0, ii = void 0;\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n                var y = flatCoordinates[i];\n                var x = flatCoordinates[i + 1];\n                flatCoordinates[i] = x;\n                flatCoordinates[i + 1] = y;\n            }\n        }\n        var len = flatCoordinates.length;\n        if (len == 2) {\n            flatCoordinates.push(0);\n        }\n        if (len === 0) {\n            return undefined;\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var contextDimension = context['srsDimension'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        var coords = s.split(/\\s+/);\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\n        var dim = 2;\n        if (node.getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n        }\n        else if (node.getAttribute('dimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n        }\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n        }\n        else if (contextDimension) {\n            dim = readNonNegativeIntegerString(contextDimension);\n        }\n        var x, y, z;\n        var flatCoordinates = [];\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\n            x = parseFloat(coords[i]);\n            y = parseFloat(coords[i + 1]);\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        var axisOrientation = 'enu';\n        if (srsName) {\n            axisOrientation = getProjection(srsName).getAxisOrientation();\n        }\n        var point = value.getCoordinates();\n        var coords;\n        // only 2d for simple features profile\n        if (axisOrientation.substr(0, 2) === 'en') {\n            coords = (point[0] + ' ' + point[1]);\n        }\n        else {\n            coords = (point[1] + ' ' + point[0]);\n        }\n        if (hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        writeStringTextNode(node, coords);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ' ' + point[1] :\n            point[1] + ' ' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        var point;\n        for (var i = 0; i < len; ++i) {\n            point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var pos = createElementNS(node.namespaceURI, 'pos');\n        node.appendChild(pos);\n        this.writePos_(pos, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var posList = createElementNS(node.namespaceURI, 'posList');\n        node.appendChild(posList);\n        this.writePosList_(posList, geometry, objectStack);\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Polygon} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var posList = createElementNS(node.namespaceURI, 'posList');\n            node.appendChild(posList);\n            this.writePosList_(posList, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        var hasZ = context['hasZ'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiLineString} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureType = context['featureType'];\n        var featureNS = context['featureNS'];\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n        var serializers = {};\n        serializers[featureNS] = {};\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var curve = context['curve'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'LineString' && curve === true) {\n                nodeName = 'Curve';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS(this.namespace, nodeName);\n    };\n    /**\n     * Encode a geometry in GML 3.1.1 Simple Features.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var geom = createElementNS(this.namespace, 'geom');\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\n            curve: this.curve_, surface: this.surface_,\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeGeometryElement(geom, geometry, [context]);\n        return geom;\n    };\n    /**\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Element} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var node = createElementNS(this.namespace, 'featureMembers');\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n        var context = {\n            srsName: this.srsName,\n            hasZ: this.hasZ,\n            curve: this.curve_,\n            surface: this.surface_,\n            multiSurface: this.multiSurface_,\n            multiCurve: this.multiCurve_,\n            featureNS: this.featureNS,\n            featureType: this.featureType\n        };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeFeatureMembers_(node, features, [context]);\n        return node;\n    };\n    return GML3;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML3;\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\nexport default GML;\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML2\n */\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /** @class */ (function (_super) {\n    __extends(GML2, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML2(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(_this.readFeaturesInternal);\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            if (proj) {\n                axisOrientation = proj.getAxisOrientation();\n            }\n        }\n        var coordsGroups = s.trim().split(/\\s+/);\n        var flatCoordinates = [];\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n            var coords = coordsGroups[i].split(/,+/);\n            var x = parseFloat(coords[0]);\n            var y = parseFloat(coords[1]);\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML2.prototype.readBox_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS('http://www.opengis.net/gml', nodeName);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n            node.appendChild(coordinates);\n            this.writeCoordinates_(coordinates, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {string} namespaceURI XML namespace.\n     * @returns {Element} coordinates node.\n     * @private\n     */\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\n        coordinates.setAttribute('decimal', '.');\n        coordinates.setAttribute('cs', ',');\n        coordinates.setAttribute('ts', ' ');\n        return coordinates;\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ',' + point[1] :\n            point[1] + ',' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ',' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        var point = geometry.getCoordinates();\n        var coord = this.getCoords_(point, srsName, hasZ);\n        writeStringTextNode(coordinates, coord);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        this.writeCoordinates_(coordinates, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    return GML2;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Box': makeReplacer(GML2.prototype.readBox_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\nexport default GML2;\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML32;\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TextFeature.prototype.getType = function () {\n        return FormatType.TEXT;\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle(node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue(node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textStyle = null;\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    if (foundStyle.getImage()) {\n        var imageSize = foundStyle.getImage().getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = foundStyle.getImage().getScale();\n            // Offset the label to be centered to the right of the icon, if there is\n            // one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    if (foundStyle.getText() !== null) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        var foundText = foundStyle.getText();\n        textStyle = foundText.clone();\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        /** @type {Style|undefined} */\n        var nameStyle;\n        var name = '';\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                drawName = geometry.getType() === GeometryType.POINT;\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n        }\n        if (style) {\n            if (drawName) {\n                nameStyle = createNameStyleFunction(style[0], name);\n                return style.concat(nameStyle);\n            }\n            return style;\n        }\n        if (styleUrl) {\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n            if (drawName) {\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\n                return foundStyle.concat(nameStyle);\n            }\n            return foundStyle;\n        }\n        if (drawName) {\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\n            return defaultStyle.concat(nameStyle);\n        }\n        return defaultStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: 'anonymous',\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        strokeStyle = null;\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': style.getWidth()\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n    BAROMETRIC: 'barometric',\n    GPS: 'gps',\n    NONE: 'none'\n};\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /** @class */ (function (_super) {\n    __extends(IGC, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function IGC(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {IGCZ}\n         */\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\n        var altitudeMode = this.altitudeMode_;\n        var lines = text.split(NEWLINE_RE);\n        /** @type {Object<string, string>} */\n        var properties = {};\n        var flatCoordinates = [];\n        var year = 2000;\n        var month = 0;\n        var day = 1;\n        var lastDateTime = -1;\n        var i, ii;\n        for (i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            var m = void 0;\n            if (line.charAt(0) == 'B') {\n                m = B_RECORD_RE.exec(line);\n                if (m) {\n                    var hour = parseInt(m[1], 10);\n                    var minute = parseInt(m[2], 10);\n                    var second = parseInt(m[3], 10);\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (m[6] == 'S') {\n                        y = -y;\n                    }\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (m[9] == 'W') {\n                        x = -x;\n                    }\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != IGCZ.NONE) {\n                        var z = void 0;\n                        if (altitudeMode == IGCZ.GPS) {\n                            z = parseInt(m[11], 10);\n                        }\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\n                            z = parseInt(m[12], 10);\n                        }\n                        else {\n                            z = 0;\n                        }\n                        flatCoordinates.push(z);\n                    }\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) {\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    }\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            }\n            else if (line.charAt(0) == 'H') {\n                m = HFDTE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                }\n                else {\n                    m = H_RECORD_RE.exec(line);\n                    if (m) {\n                        properties[m[1]] = m[2].trim();\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) {\n            return null;\n        }\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n        var lineString = new LineString(flatCoordinates, layout);\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n        feature.setProperties(properties, true);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        if (feature) {\n            return [feature];\n        }\n        else {\n            return [];\n        }\n    };\n    return IGC;\n}(TextFeature));\nexport default IGC;\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport { extend } from '../array.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { get as getProjection } from '../proj.js';\nimport { transform2D } from '../geom/flat/transform.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {GeometryType} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {GeometryType}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ = this.type_ === GeometryType.POINT ?\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {GeometryType} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     * The SRS of the source and destination are expected to be the same.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n     */\n    RenderFeature.prototype.transform = function (source, destination) {\n        source = getProjection(source);\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    };\n    return RenderFeature;\n}());\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\n    RenderFeature.prototype.getEndss = function () {\n        return this.ends_;\n    };\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\nimport { get } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) { // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var id = rawFeature.id;\n        var values = rawFeature.properties;\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection, options.featureProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i));\n                        prevEndIndex = i;\n                    }\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                                    null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: []\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value = tag === 1 ? pbf.readString() :\n                tag === 2 ? pbf.readFloat() :\n                    tag === 3 ? pbf.readDouble() :\n                        tag === 4 ? pbf.readVarint64() :\n                            tag === 5 ? pbf.readVarint() :\n                                tag === 6 ? pbf.readSVarint() :\n                                    tag === 7 ? pbf.readBoolean() : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {}\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {GeometryType} */\n    var geometryType;\n    if (type === 1) {\n        geometryType = numEnds === 1 ?\n            GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType = numEnds === 1 ?\n            GeometryType.LINE_STRING :\n            GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n});\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /** @class */ (function (_super) {\n    __extends(OSMXML, _super);\n    function OSMXML() {\n        var _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = this.getReadOptions(node, opt_options);\n        if (node.localName == 'osm') {\n            var state = pushParseAndPop({\n                nodes: {},\n                ways: [],\n                features: []\n            }, PARSERS, node, [options]);\n            // parse nodes in ways\n            for (var j = 0; j < state.ways.length; j++) {\n                var values = /** @type {Object} */ (state.ways[j]);\n                /** @type {Array<number>} */\n                var flatCoordinates = [];\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n                    var point = state.nodes[values.ndrefs[i]];\n                    extend(flatCoordinates, point);\n                }\n                var geometry = void 0;\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n                    // closed way\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n                }\n                else {\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n                }\n                transformGeometryWithOptions(geometry, false, options);\n                var feature = new Feature(geometry);\n                feature.setId(values.id);\n                feature.setProperties(values.tags, true);\n                state.features.push(feature);\n            }\n            if (state.features) {\n                return state.features;\n            }\n        }\n        return [];\n    };\n    return OSMXML;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'tag': readTag\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var id = node.getAttribute('id');\n    /** @type {import(\"../coordinate.js\").Coordinate} */\n    var coordinates = [\n        parseFloat(node.getAttribute('lon')),\n        parseFloat(node.getAttribute('lat'))\n    ];\n    state.nodes[id] = coordinates;\n    var values = pushParseAndPop({\n        tags: {}\n    }, NODE_PARSERS, node, objectStack);\n    if (!isEmpty(values.tags)) {\n        var geometry = new Point(coordinates);\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n    var id = node.getAttribute('id');\n    var values = pushParseAndPop({\n        id: id,\n        ndrefs: [],\n        tags: {}\n    }, WAY_PARSERS, node, objectStack);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    state.ways.push(values);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.ndrefs.push(node.getAttribute('ref'));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\nexport default OSMXML;\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {GeometryLayout}\n         */\n        _this.geometryLayout_ = options.geometryLayout ?\n            options.geometryLayout : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry = /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /** @class */ (function (_super) {\n    __extends(TopoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function TopoJSON(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.layerName_ = options.layerName;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        if (object.type == 'Topology') {\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n            var transform = void 0, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            var arcs = topoJSONTopology['arcs'];\n            if (transform) {\n                transformArcs(arcs, scale, translate);\n            }\n            /** @type {Array<Feature>} */\n            var features = [];\n            var topoJSONFeatures = topoJSONTopology['objects'];\n            var property = this.layerName_;\n            var feature = void 0;\n            for (var objectName in topoJSONFeatures) {\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n                    continue;\n                }\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n                else {\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\n        return this.dataProjection;\n    };\n    return TopoJSON;\n}(JSONFeature));\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n    'Point': readPointGeometry,\n    'LineString': readLineStringGeometry,\n    'Polygon': readPolygonGeometry,\n    'MultiPoint': readMultiPointGeometry,\n    'MultiLineString': readMultiLineStringGeometry,\n    'MultiPolygon': readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n    var coordinates = [];\n    var index, arc;\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\n        index = indices[i];\n        if (i > 0) {\n            // splicing together arcs, discard last point\n            coordinates.pop();\n        }\n        if (index >= 0) {\n            // forward arc\n            arc = arcs[index];\n        }\n        else {\n            // reverse arc\n            arc = arcs[~index].slice().reverse();\n        }\n        coordinates.push.apply(coordinates, arc);\n    }\n    // provide fresh copies of coordinate arrays\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n        coordinates[j] = coordinates[j].slice();\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        transformVertex(coordinates, scale, translate);\n    }\n    return new Point(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            transformVertex(coordinates[i], scale, translate);\n        }\n    }\n    return new MultiPoint(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n    var coordinates = concatenateArcs(object['arcs'], arcs);\n    return new LineString(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new MultiLineString(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new Polygon(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        // for each polygon\n        var polyArray = object['arcs'][i];\n        var ringCoords = [];\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n            // for each ring\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n        }\n        coordinates[i] = ringCoords;\n    }\n    return new MultiPolygon(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n    var geometries = collection['geometries'];\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\n    }\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n    var geometry;\n    var type = object.type;\n    var geometryReader = GEOMETRY_READERS[type];\n    if ((type === 'Point') || (type === 'MultiPoint')) {\n        geometry = geometryReader(object, scale, translate);\n    }\n    else {\n        geometry = geometryReader(object, arcs);\n    }\n    var feature = new Feature();\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n    if (object.id !== undefined) {\n        feature.setId(object.id);\n    }\n    var properties = object.properties;\n    if (property) {\n        if (!properties) {\n            properties = {};\n        }\n        properties[property] = name;\n    }\n    if (properties) {\n        feature.setProperties(properties, true);\n    }\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\n        transformArc(arcs[i], scale, translate);\n    }\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\n        var vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nexport default TopoJSON;\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     */\n    function Filter(tagName) {\n        /**\n         * @private\n         * @type {!string}\n         */\n        this.tagName_ = tagName;\n    }\n    /**\n     * The XML tag name for a filter.\n     * @returns {!string} Name.\n     */\n    Filter.prototype.getTagName = function () {\n        return this.tagName_;\n    };\n    return Filter;\n}());\nexport default Filter;\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /** @class */ (function (_super) {\n    __extends(LogicalNary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n     */\n    function LogicalNary(tagName, conditions) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {Array<import(\"./Filter.js\").default>}\n         */\n        _this.conditions = conditions;\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n        return _this;\n    }\n    return LogicalNary;\n}(Filter));\nexport default LogicalNary;\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /** @class */ (function (_super) {\n    __extends(And, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function And(conditions) {\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n    }\n    return And;\n}(LogicalNary));\nexport default And;\n//# sourceMappingURL=And.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /** @class */ (function (_super) {\n    __extends(Bbox, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n     * on geometries when this is not provided.\n     */\n    function Bbox(geometryName, extent, opt_srsName) {\n        var _this = _super.call(this, 'BBOX') || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName;\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Bbox;\n}(Filter));\nexport default Bbox;\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /** @class */ (function (_super) {\n    __extends(Spatial, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName || 'the_geom';\n        /**\n         * @type {import(\"../../geom/Geometry.js\").default}\n         */\n        _this.geometry = geometry;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Spatial;\n}(Filter));\nexport default Spatial;\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /** @class */ (function (_super) {\n    __extends(Contains, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Contains(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n    }\n    return Contains;\n}(Spatial));\nexport default Contains;\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /** @class */ (function (_super) {\n    __extends(Comparison, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function Comparison(tagName, propertyName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.propertyName = propertyName;\n        return _this;\n    }\n    return Comparison;\n}(Filter));\nexport default Comparison;\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /** @class */ (function (_super) {\n    __extends(During, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} begin The begin date in ISO-8601 format.\n     * @param {!string} end The end date in ISO-8601 format.\n     */\n    function During(propertyName, begin, end) {\n        var _this = _super.call(this, 'During', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.begin = begin;\n        /**\n         * @type {!string}\n         */\n        _this.end = end;\n        return _this;\n    }\n    return During;\n}(Comparison));\nexport default During;\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /** @class */ (function (_super) {\n    __extends(ComparisonBinary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n        var _this = _super.call(this, tagName, propertyName) || this;\n        /**\n         * @type {!(string|number)}\n         */\n        _this.expression = expression;\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return ComparisonBinary;\n}(Comparison));\nexport default ComparisonBinary;\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /** @class */ (function (_super) {\n    __extends(EqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function EqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return EqualTo;\n}(ComparisonBinary));\nexport default EqualTo;\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    __extends(GreaterThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\n    }\n    return GreaterThan;\n}(ComparisonBinary));\nexport default GreaterThan;\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(GreaterThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\n    }\n    return GreaterThanOrEqualTo;\n}(ComparisonBinary));\nexport default GreaterThanOrEqualTo;\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /** @class */ (function (_super) {\n    __extends(Intersects, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Intersects(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\n    }\n    return Intersects;\n}(Spatial));\nexport default Intersects;\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /** @class */ (function (_super) {\n    __extends(IsBetween, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} lowerBoundary The lower bound of the range.\n     * @param {!number} upperBoundary The upper bound of the range.\n     */\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n        /**\n         * @type {!number}\n         */\n        _this.lowerBoundary = lowerBoundary;\n        /**\n         * @type {!number}\n         */\n        _this.upperBoundary = upperBoundary;\n        return _this;\n    }\n    return IsBetween;\n}(Comparison));\nexport default IsBetween;\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string=} opt_singleChar pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /** @class */ (function (_super) {\n    __extends(IsNull, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function IsNull(propertyName) {\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\n    }\n    return IsNull;\n}(Comparison));\nexport default IsNull;\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /** @class */ (function (_super) {\n    __extends(LessThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\n    }\n    return LessThan;\n}(ComparisonBinary));\nexport default LessThan;\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(LessThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\n    }\n    return LessThanOrEqualTo;\n}(ComparisonBinary));\nexport default LessThanOrEqualTo;\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /** @class */ (function (_super) {\n    __extends(Not, _super);\n    /**\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\n     */\n    function Not(condition) {\n        var _this = _super.call(this, 'Not') || this;\n        /**\n         * @type {!import(\"./Filter.js\").default}\n         */\n        _this.condition = condition;\n        return _this;\n    }\n    return Not;\n}(Filter));\nexport default Not;\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /** @class */ (function (_super) {\n    __extends(NotEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return NotEqualTo;\n}(ComparisonBinary));\nexport default NotEqualTo;\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /** @class */ (function (_super) {\n    __extends(Or, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function Or(conditions) {\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n    }\n    return Or;\n}(LogicalNary));\nexport default Or;\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /** @class */ (function (_super) {\n    __extends(Within, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Within(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\n    }\n    return Within;\n}(Spatial));\nexport default Within;\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(And, params));\n}\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(Or, params));\n}\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n    return new Not(condition);\n}\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n    return new Bbox(geometryName, extent, opt_srsName);\n}\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n    return new Contains(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n    return new Intersects(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n    return new Within(geometryName, geometry, opt_srsName);\n}\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n    return new EqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n    return new LessThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n    return new LessThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n    return new GreaterThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n    return new GreaterThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n    return new IsNull(propertyName);\n}\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n    return new During(propertyName, begin, end);\n}\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport { assert } from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative)\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat ?\n            options.gmlFormat : new GML3();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation ?\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var node = createElementNS(WFSNS, 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', '1.1.0');\n        var filter;\n        if (options) {\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n            if (options.outputFormat) {\n                node.setAttribute('outputFormat', options.outputFormat);\n            }\n            if (options.maxFeatures !== undefined) {\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\n            }\n            if (options.resultType) {\n                node.setAttribute('resultType', options.resultType);\n            }\n            if (options.startIndex !== undefined) {\n                node.setAttribute('startIndex', String(options.startIndex));\n            }\n            if (options.count !== undefined) {\n                node.setAttribute('count', String(options.count));\n            }\n            if (options.viewParams !== undefined) {\n                node.setAttribute('viewParams ', options.viewParams);\n            }\n            filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                var bbox = bboxFilter(\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n                if (filter) {\n                    // if bbox and filter are both set, combine the two into a single filter\n                    filter = andFilter(filter, bbox);\n                }\n                else {\n                    filter = bbox;\n                }\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'geometryName': options.geometryName,\n            'filter': filter,\n            'propertyNames': options.propertyNames ? options.propertyNames : []\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        return node;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var node = createElementNS(WFSNS, 'Transaction');\n        var version = options.version ? options.version : DEFAULT_VERSION;\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var obj;\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        var schemaLocation = SCHEMA_LOCATIONS[version];\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n        if (inserts) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\n        }\n        if (updates) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\n        }\n        if (deletes) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\n        }\n        if (options.nativeElements) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\n        }\n        return node;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild &&\n            node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 &&\n                        n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        })\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var filter = createElementNS(OGCNS, 'Filter');\n    var child = createElementNS(OGCNS, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var name = createElementNS(WFSNS, 'Name');\n    var context = objectStack[objectStack.length - 1];\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(WFSNS, 'Value');\n        node.appendChild(value);\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery)\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeContainsFilter),\n        'Intersects': makeChildAppender(writeIntersectsFilter),\n        'Within': makeChildAppender(writeWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    node.setAttribute('typeName', typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(OGCNS, 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var valueReference = createElementNS(FESNS, 'ValueReference');\n    writeStringTextNode(valueReference, filter.propertyName);\n    node.appendChild(valueReference);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.pattern);\n}\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n    var property = createElementNS(OGCNS, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n    writeOgcExpression('PropertyName', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n    writeOgcExpression('Literal', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    writeFilterCondition(child, filter, []);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nexport default WFS;\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n    'POINT': Point,\n    'LINESTRING': LineString,\n    'POLYGON': Polygon,\n    'MULTIPOINT': MultiPoint,\n    'MULTILINESTRING': MultiLineString,\n    'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n    TEXT: 1,\n    LEFT_PAREN: 2,\n    RIGHT_PAREN: 3,\n    NUMBER: 4,\n    COMMA: 5,\n    EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = /** @class */ (function () {\n    /**\n     * @param {string} wkt WKT string.\n     */\n    function Lexer(wkt) {\n        /**\n         * @type {string}\n         */\n        this.wkt = wkt;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.index_ = -1;\n    }\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is alphabetic.\n     * @private\n     */\n    Lexer.prototype.isAlpha_ = function (c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n    };\n    /**\n     * @param {string} c Character.\n     * @param {boolean=} opt_decimal Whether the string number\n     *     contains a dot, i.e. is a decimal number.\n     * @return {boolean} Whether the character is numeric.\n     * @private\n     */\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\n    };\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is whitespace.\n     * @private\n     */\n    Lexer.prototype.isWhiteSpace_ = function (c) {\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n    };\n    /**\n     * @return {string} Next string character.\n     * @private\n     */\n    Lexer.prototype.nextChar_ = function () {\n        return this.wkt.charAt(++this.index_);\n    };\n    /**\n     * Fetch and return the next token.\n     * @return {!Token} Next string token.\n     */\n    Lexer.prototype.nextToken = function () {\n        var c = this.nextChar_();\n        var position = this.index_;\n        /** @type {number|string} */\n        var value = c;\n        var type;\n        if (c == '(') {\n            type = TokenType.LEFT_PAREN;\n        }\n        else if (c == ',') {\n            type = TokenType.COMMA;\n        }\n        else if (c == ')') {\n            type = TokenType.RIGHT_PAREN;\n        }\n        else if (this.isNumeric_(c) || c == '-') {\n            type = TokenType.NUMBER;\n            value = this.readNumber_();\n        }\n        else if (this.isAlpha_(c)) {\n            type = TokenType.TEXT;\n            value = this.readText_();\n        }\n        else if (this.isWhiteSpace_(c)) {\n            return this.nextToken();\n        }\n        else if (c === '') {\n            type = TokenType.EOF;\n        }\n        else {\n            throw new Error('Unexpected character: ' + c);\n        }\n        return { position: position, value: value, type: type };\n    };\n    /**\n     * @return {number} Numeric token value.\n     * @private\n     */\n    Lexer.prototype.readNumber_ = function () {\n        var c;\n        var index = this.index_;\n        var decimal = false;\n        var scientificNotation = false;\n        do {\n            if (c == '.') {\n                decimal = true;\n            }\n            else if (c == 'e' || c == 'E') {\n                scientificNotation = true;\n            }\n            c = this.nextChar_();\n        } while (this.isNumeric_(c, decimal) ||\n            // if we haven't detected a scientific number before, 'e' or 'E'\n            // hint that we should continue to read\n            !scientificNotation && (c == 'e' || c == 'E') ||\n            // once we know that we have a scientific number, both '-' and '+'\n            // are allowed\n            scientificNotation && (c == '-' || c == '+'));\n        return parseFloat(this.wkt.substring(index, this.index_--));\n    };\n    /**\n     * @return {string} String token value.\n     * @private\n     */\n    Lexer.prototype.readText_ = function () {\n        var c;\n        var index = this.index_;\n        do {\n            c = this.nextChar_();\n        } while (this.isAlpha_(c));\n        return this.wkt.substring(index, this.index_--).toUpperCase();\n    };\n    return Lexer;\n}());\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param {Lexer} lexer The lexer.\n     */\n    function Parser(lexer) {\n        /**\n         * @type {Lexer}\n         * @private\n         */\n        this.lexer_ = lexer;\n        /**\n         * @type {Token}\n         * @private\n         */\n        this.token_;\n        /**\n         * @type {GeometryLayout}\n         * @private\n         */\n        this.layout_ = GeometryLayout.XY;\n    }\n    /**\n     * Fetch the next token form the lexer and replace the active token.\n     * @private\n     */\n    Parser.prototype.consume_ = function () {\n        this.token_ = this.lexer_.nextToken();\n    };\n    /**\n     * Tests if the given type matches the type of the current token.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.isTokenType = function (type) {\n        var isMatch = this.token_.type == type;\n        return isMatch;\n    };\n    /**\n     * If the given type matches the current token, consume it.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.match = function (type) {\n        var isMatch = this.isTokenType(type);\n        if (isMatch) {\n            this.consume_();\n        }\n        return isMatch;\n    };\n    /**\n     * Try to parse the tokens provided by the lexer.\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\n     */\n    Parser.prototype.parse = function () {\n        this.consume_();\n        var geometry = this.parseGeometry_();\n        return geometry;\n    };\n    /**\n     * Try to parse the dimensional info.\n     * @return {GeometryLayout} The layout.\n     * @private\n     */\n    Parser.prototype.parseGeometryLayout_ = function () {\n        var layout = GeometryLayout.XY;\n        var dimToken = this.token_;\n        if (this.isTokenType(TokenType.TEXT)) {\n            var dimInfo = dimToken.value;\n            if (dimInfo === Z) {\n                layout = GeometryLayout.XYZ;\n            }\n            else if (dimInfo === M) {\n                layout = GeometryLayout.XYM;\n            }\n            else if (dimInfo === ZM) {\n                layout = GeometryLayout.XYZM;\n            }\n            if (layout !== GeometryLayout.XY) {\n                this.consume_();\n            }\n        }\n        return layout;\n    };\n    /**\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n     * @private\n     */\n    Parser.prototype.parseGeometryCollectionText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var geometries = [];\n            do {\n                geometries.push(this.parseGeometry_());\n            } while (this.match(TokenType.COMMA));\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return geometries;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {Array<number>} All values in a point.\n     * @private\n     */\n    Parser.prototype.parsePointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePoint_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return null;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a linestring.\n     * @private\n     */\n    Parser.prototype.parseLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePointList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n     * @private\n     */\n    Parser.prototype.parsePolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a multipoint.\n     * @private\n     */\n    Parser.prototype.parseMultiPointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = void 0;\n            if (this.token_.type == TokenType.LEFT_PAREN) {\n                coordinates = this.parsePointTextList_();\n            }\n            else {\n                coordinates = this.parsePointList_();\n            }\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\n     *                                          in a multilinestring.\n     * @private\n     */\n    Parser.prototype.parseMultiLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n     * @private\n     */\n    Parser.prototype.parseMultiPolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePolygonTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<number>} A point.\n     * @private\n     */\n    Parser.prototype.parsePoint_ = function () {\n        var coordinates = [];\n        var dimensions = this.layout_.length;\n        for (var i = 0; i < dimensions; ++i) {\n            var token = this.token_;\n            if (this.match(TokenType.NUMBER)) {\n                coordinates.push(/** @type {number} */ (token.value));\n            }\n            else {\n                break;\n            }\n        }\n        if (coordinates.length == dimensions) {\n            return coordinates;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointList_ = function () {\n        var coordinates = [this.parsePoint_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePoint_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointTextList_ = function () {\n        var coordinates = [this.parsePointText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePointText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parseLineStringTextList_ = function () {\n        var coordinates = [this.parseLineStringText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parseLineStringText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePolygonTextList_ = function () {\n        var coordinates = [this.parsePolygonText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePolygonText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {boolean} Whether the token implies an empty geometry.\n     * @private\n     */\n    Parser.prototype.isEmptyGeometry_ = function () {\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\n            this.token_.value == EMPTY;\n        if (isEmpty) {\n            this.consume_();\n        }\n        return isEmpty;\n    };\n    /**\n     * Create an error message for an unexpected token error.\n     * @return {string} Error message.\n     * @private\n     */\n    Parser.prototype.formatErrorMessage_ = function () {\n        return 'Unexpected `' + this.token_.value + '` at position ' +\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\n    };\n    /**\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n     * @private\n     */\n    Parser.prototype.parseGeometry_ = function () {\n        var token = this.token_;\n        if (this.match(TokenType.TEXT)) {\n            var geomType = token.value;\n            this.layout_ = this.parseGeometryLayout_();\n            if (geomType == 'GEOMETRYCOLLECTION') {\n                var geometries = this.parseGeometryCollectionText_();\n                return new GeometryCollection(geometries);\n            }\n            else {\n                var ctor = GeometryConstructor[geomType];\n                if (!ctor) {\n                    throw new Error('Invalid geometry type: ' + geomType);\n                }\n                var coordinates = void 0;\n                switch (geomType) {\n                    case 'POINT': {\n                        coordinates = this.parsePointText_();\n                        break;\n                    }\n                    case 'LINESTRING': {\n                        coordinates = this.parseLineStringText_();\n                        break;\n                    }\n                    case 'POLYGON': {\n                        coordinates = this.parsePolygonText_();\n                        break;\n                    }\n                    case 'MULTIPOINT': {\n                        coordinates = this.parseMultiPointText_();\n                        break;\n                    }\n                    case 'MULTILINESTRING': {\n                        coordinates = this.parseMultiLineStringText_();\n                        break;\n                    }\n                    case 'MULTIPOLYGON': {\n                        coordinates = this.parseMultiPolygonText_();\n                        break;\n                    }\n                    default: {\n                        throw new Error('Invalid geometry type: ' + geomType);\n                    }\n                }\n                if (!coordinates) {\n                    if (ctor === GeometryConstructor['POINT']) {\n                        coordinates = [NaN, NaN];\n                    }\n                    else {\n                        coordinates = [];\n                    }\n                }\n                return new ctor(coordinates, this.layout_);\n            }\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    return Parser;\n}());\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /** @class */ (function (_super) {\n    __extends(WKT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WKT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * Split GeometryCollection into multiple features.\n         * @type {boolean}\n         * @private\n         */\n        _this.splitCollection_ = options.splitCollection !== undefined ?\n            options.splitCollection : false;\n        return _this;\n    }\n    /**\n     * Parse a WKT string.\n     * @param {string} wkt WKT string.\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\n     *     The geometry created.\n     * @private\n     */\n    WKT.prototype.parse_ = function (wkt) {\n        var lexer = new Lexer(wkt);\n        var parser = new Parser(lexer);\n        return parser.parse();\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\n        var geom = this.readGeometryFromText(text, opt_options);\n        if (geom) {\n            var feature = new Feature();\n            feature.setGeometry(geom);\n            return feature;\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n        var geometries = [];\n        var geometry = this.readGeometryFromText(text, opt_options);\n        if (this.splitCollection_ &&\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            geometries = ( /** @type {GeometryCollection} */(geometry))\n                .getGeometriesArray();\n        }\n        else {\n            geometries = [geometry];\n        }\n        var features = [];\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var feature = new Feature();\n            feature.setGeometry(geometries[i]);\n            features.push(feature);\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\n        var geometry = this.parse_(text);\n        if (geometry) {\n            return transformGeometryWithOptions(geometry, false, opt_options);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        return '';\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\n        if (features.length == 1) {\n            return this.writeFeatureText(features[0], opt_options);\n        }\n        var geometries = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            geometries.push(features[i].getGeometry());\n        }\n        var collection = new GeometryCollection(geometries);\n        return this.writeGeometryText(collection, opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n        return encode(transformGeometryWithOptions(geometry, true, opt_options));\n    };\n    return WKT;\n}(TextFeature));\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    if (coordinates.length === 0) {\n        return '';\n    }\n    return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n    var array = [];\n    var components = geom.getPoints();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePointGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n    var array = [];\n    var geoms = geom.getGeometries();\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\n        array.push(encode(geoms[i]));\n    }\n    return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    var array = [];\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        array.push(coordinates[i].join(' '));\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n    var array = [];\n    var components = geom.getLineStrings();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n    var array = [];\n    var rings = geom.getLinearRings();\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n    var array = [];\n    var components = geom.getPolygons();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n    var layout = geom.getLayout();\n    var dimInfo = '';\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n        dimInfo += Z;\n    }\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n        dimInfo += M;\n    }\n    return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n    'Point': encodePointGeometry,\n    'LineString': encodeLineStringGeometry,\n    'Polygon': encodePolygonGeometry,\n    'MultiPoint': encodeMultiPointGeometry,\n    'MultiLineString': encodeMultiLineStringGeometry,\n    'MultiPolygon': encodeMultiPolygonGeometry,\n    'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n    var type = geom.getType();\n    var geometryEncoder = GeometryEncoder[type];\n    var enc = geometryEncoder(geom);\n    type = type.toUpperCase();\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n        if (dimInfo.length > 0) {\n            type += ' ' + dimInfo;\n        }\n    }\n    if (enc.length === 0) {\n        return type + ' ' + EMPTY;\n    }\n    return type + '(' + enc + ')';\n}\nexport default WKT;\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @abstract\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) { };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSCapabilities\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wms'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n});\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /** @class */ (function (_super) {\n    __extends(WMSCapabilities, _super);\n    function WMSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {string|undefined}\n         */\n        _this.version = undefined;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromNode = function (node) {\n        this.version = node.getAttribute('version').trim();\n        var wmsCapabilityObject = pushParseAndPop({\n            'version': this.version\n        }, PARSERS, node, []);\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\n    };\n    return WMSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var extent = [\n        readDecimalString(node.getAttribute('minx')),\n        readDecimalString(node.getAttribute('miny')),\n        readDecimalString(node.getAttribute('maxx')),\n        readDecimalString(node.getAttribute('maxy'))\n    ];\n    var resolutions = [\n        readDecimalString(node.getAttribute('resx')),\n        readDecimalString(node.getAttribute('resy'))\n    ];\n    return {\n        'crs': node.getAttribute('CRS'),\n        'extent': extent,\n        'res': resolutions\n    };\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\n    if (!geographicBoundingBox) {\n        return undefined;\n    }\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n        return undefined;\n    }\n    return [\n        westBoundLongitude, southBoundLatitude,\n        eastBoundLongitude, northBoundLatitude\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n    if (!layerObject) {\n        return undefined;\n    }\n    var queryable = readBooleanString(node.getAttribute('queryable'));\n    if (queryable === undefined) {\n        queryable = parentLayerObject['queryable'];\n    }\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n    if (cascaded === undefined) {\n        cascaded = parentLayerObject['cascaded'];\n    }\n    layerObject['cascaded'] = cascaded;\n    var opaque = readBooleanString(node.getAttribute('opaque'));\n    if (opaque === undefined) {\n        opaque = parentLayerObject['opaque'];\n    }\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n    if (noSubsets === undefined) {\n        noSubsets = parentLayerObject['noSubsets'];\n    }\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n    if (!fixedWidth) {\n        fixedWidth = parentLayerObject['fixedWidth'];\n    }\n    layerObject['fixedWidth'] = fixedWidth;\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n    if (!fixedHeight) {\n        fixedHeight = parentLayerObject['fixedHeight'];\n    }\n    layerObject['fixedHeight'] = fixedHeight;\n    // See 7.2.4.8\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n    addKeys.forEach(function (key) {\n        if (key in parentLayerObject) {\n            var childValue = layerObject[key] || [];\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\n        }\n    });\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n    replaceKeys.forEach(function (key) {\n        if (!(key in layerObject)) {\n            var parentValue = parentLayerObject[key];\n            layerObject[key] = parentValue;\n        }\n    });\n    return layerObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n    var dimensionObject = {\n        'name': node.getAttribute('name'),\n        'units': node.getAttribute('units'),\n        'unitSymbol': node.getAttribute('unitSymbol'),\n        'default': node.getAttribute('default'),\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n        'current': readBooleanString(node.getAttribute('current')),\n        'values': readString(node)\n    };\n    return dimensionObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n    if (formatOnlineresource) {\n        var size = [\n            readNonNegativeIntegerString(node.getAttribute('width')),\n            readNonNegativeIntegerString(node.getAttribute('height'))\n        ];\n        formatOnlineresource['size'] = size;\n        return formatOnlineresource;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n    var authorityObject = readFormatOnlineresource(node, objectStack);\n    if (authorityObject) {\n        authorityObject['name'] = node.getAttribute('name');\n        return authorityObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n    var metadataObject = readFormatOnlineresource(node, objectStack);\n    if (metadataObject) {\n        metadataObject['type'] = node.getAttribute('type');\n        return metadataObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\nexport default WMSCapabilities;\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport { extend, includes } from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName +\n                    featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString } from './xsd.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version').trim();\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastMouseMovePixel_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\n        this.updateHTML_(this.lastMouseMovePixel_);\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n        this.lastMouseMovePixel_ = null;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixel(pixel);\n            if (coordinate) {\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen, listenOnce, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\n * Layers for the overview map (mandatory).\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */ (function (_super) {\n    __extends(OverviewMap, _super);\n    /**\n     * @param {Options=} opt_options OverviewMap options.\n     */\n    function OverviewMap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : '\\u00BB';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.ovmapDiv_ = document.createElement('div');\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\n        /**\n         * @type {import(\"../Map.js\").default}\n         * @private\n         */\n        _this.ovmap_ = new Map({\n            controls: new Collection(),\n            interactions: new Collection(),\n            view: options.view\n        });\n        var ovmap = _this.ovmap_;\n        if (options.layers) {\n            /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n            /**\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             */\n            (function (layer) {\n                ovmap.addLayer(layer);\n            }).bind(_this));\n        }\n        var box = document.createElement('div');\n        box.className = 'ol-overviewmap-box';\n        box.style.boxSizing = 'border-box';\n        /**\n         * @type {import(\"../Overlay.js\").default}\n         * @private\n         */\n        _this.boxOverlay_ = new Overlay({\n            position: [0, 0],\n            positioning: OverlayPositioning.BOTTOM_LEFT,\n            element: box\n        });\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ovmapDiv_);\n        element.appendChild(button);\n        /* Interactive map */\n        var scope = _this;\n        var overlay = _this.boxOverlay_;\n        var overlayBox = _this.boxOverlay_.getElement();\n        /* Functions definition */\n        var computeDesiredMousePosition = function (mousePosition) {\n            return {\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n            };\n        };\n        var move = function (event) {\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n            overlay.setPosition(coordinates);\n        };\n        var endMoving = function (event) {\n            var coordinates = ovmap.getEventCoordinate(event);\n            scope.getMap().getView().setCenter(coordinates);\n            window.removeEventListener('mousemove', move);\n            window.removeEventListener('mouseup', endMoving);\n        };\n        /* Binding */\n        overlayBox.addEventListener('mousedown', function () {\n            window.addEventListener('mousemove', move);\n            window.addEventListener('mouseup', endMoving);\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    OverviewMap.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (map === oldMap) {\n            return;\n        }\n        if (oldMap) {\n            var oldView = oldMap.getView();\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            this.ovmap_.setTarget(null);\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.ovmap_.setTarget(this.ovmapDiv_);\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n            var view = map.getView();\n            if (view) {\n                this.bindView_(view);\n                if (view.isDef()) {\n                    this.ovmap_.updateSize();\n                    this.resetExtent_();\n                }\n            }\n        }\n    };\n    /**\n     * Handle map property changes.  This only deals with changes to the map's view.\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n     * @private\n     */\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n        if (event.key === MapProperty.VIEW) {\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            var newView = this.getMap().getView();\n            this.bindView_(newView);\n        }\n    };\n    /**\n     * Register listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.bindView_ = function (view) {\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Unregister listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.unbindView_ = function (view) {\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Handle rotation changes to the main map.\n     * TODO: This should rotate the extent rectrangle instead of the\n     * overview map's view.\n     * @private\n     */\n    OverviewMap.prototype.handleRotationChanged_ = function () {\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    };\n    /**\n     * Reset the overview map extent if the box size (width or\n     * height) is less than the size of the overview map size times minRatio\n     * or is greater than the size of the overview size times maxRatio.\n     *\n     * If the map extent was not reset, the box size can fits in the defined\n     * ratio sizes. This method then checks if is contained inside the overview\n     * map current extent. If not, recenter the overview map to the current\n     * main map center location.\n     * @private\n     */\n    OverviewMap.prototype.validateExtent_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n        var ovview = ovmap.getView();\n        var ovextent = ovview.calculateExtent(ovmapSize);\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n        var ovmapWidth = ovmapSize[0];\n        var ovmapHeight = ovmapSize[1];\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\n            boxHeight < ovmapHeight * MIN_RATIO ||\n            boxWidth > ovmapWidth * MAX_RATIO ||\n            boxHeight > ovmapHeight * MAX_RATIO) {\n            this.resetExtent_();\n        }\n        else if (!containsExtent(ovextent, extent)) {\n            this.recenter_();\n        }\n    };\n    /**\n     * Reset the overview map extent to half calculated min and max ratio times\n     * the extent of the main map.\n     * @private\n     */\n    OverviewMap.prototype.resetExtent_ = function () {\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n            return;\n        }\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovview = ovmap.getView();\n        // get how many times the current map overview could hold different\n        // box sizes using the min and max ratio, pick the step in the middle used\n        // to calculate the extent from the main map to set it to the overview map,\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n        scaleFromCenter(extent, ratio);\n        ovview.fit(extent);\n    };\n    /**\n     * Set the center of the overview map to the map center without changing its\n     * resolution.\n     * @private\n     */\n    OverviewMap.prototype.recenter_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        ovview.setCenter(view.getCenter());\n    };\n    /**\n     * Update the box using the main map extent\n     * @private\n     */\n    OverviewMap.prototype.updateBox_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        var rotation = view.getRotation();\n        var overlay = this.boxOverlay_;\n        var box = this.boxOverlay_.getElement();\n        var extent = view.calculateExtent(mapSize);\n        var ovresolution = ovview.getResolution();\n        var bottomLeft = getBottomLeft(extent);\n        var topRight = getTopRight(extent);\n        // set position using bottom left coordinates\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n        overlay.setPosition(rotateBottomLeft);\n        // set box size calculated from map extent size and overview map resolution\n        if (box) {\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n     * @private\n     */\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\n        var coordinateRotate;\n        var map = this.getMap();\n        var view = map.getView();\n        var currentCenter = view.getCenter();\n        if (currentCenter) {\n            coordinateRotate = [\n                coordinate[0] - currentCenter[0],\n                coordinate[1] - currentCenter[1]\n            ];\n            rotateCoordinate(coordinateRotate, rotation);\n            addCoordinate(coordinateRotate, currentCenter);\n        }\n        return coordinateRotate;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    OverviewMap.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    OverviewMap.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        // manage overview map if it had not been rendered before and control\n        // is expanded\n        var ovmap = this.ovmap_;\n        if (!this.collapsed_ && !ovmap.isRendered()) {\n            ovmap.updateSize();\n            this.resetExtent_();\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n                this.updateBox_();\n            }, this);\n        }\n    };\n    /**\n     * Return `true` if the overview map is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the overview map should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the overview map according to the passed parameter. Will\n     * not do anything if the overview map isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Determine if the overview map is collapsed.\n     * @return {boolean} The overview map is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Return the overview map.\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\n     * @api\n     */\n    OverviewMap.prototype.getOverviewMap = function () {\n        return this.ovmap_;\n    };\n    return OverviewMap;\n}(Control));\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n}\nexport default OverviewMap;\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport { getChangeEventType } from '../Object.js';\nimport { assert } from '../asserts.js';\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { listen } from '../events.js';\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined ? options.className :\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ?\n            ProjUnits.DEGREES :\n            ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var nominalCount = this.minWidth_ * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= this.minWidth_) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' + stepWidth + 'px;' +\n                'background-color: ' + backgroundColor + ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n                    this.createStepText(i, width, false, scale, suffix) :\n                    '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                { /*render text at the end */ }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText = '<div ' +\n                'class=\"ol-scale-text\" ' +\n                'style=\"width: ' + width + 'px;\">' +\n                mapScale +\n                '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return '<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' + position + ';' +\n            'top: ' + top + 'px;\"' +\n            '></div>';\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n        return '<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' + margin + 'px;' +\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n            'min-width: ' + minWidth + 'px;' +\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n            '>' +\n            lengthString +\n            '</div>';\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = this.getMap().getView().getResolution();\n        var dpi = 25.4 / 0.28;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    return ScaleLine;\n}(Control));\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.viewState_ = null;\n    }\n    else {\n        this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n}\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomSlider\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { clamp } from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options=} opt_options Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render\n        }) || this;\n        /**\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\n          * @private\n          */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        /**\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.dragger_ = new PointerEventHandler(containerElement);\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\n        listen(thumbElement, EventType.CLICK, stopPropagation);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.disposeInternal = function () {\n        this.dragger_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerSize = {\n            width: container.offsetWidth, height: container.offsetHeight\n        };\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var computedStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(computedStyle['marginRight']) +\n            parseFloat(computedStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(computedStyle['marginTop']) +\n            parseFloat(computedStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerSize.width > containerSize.height) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerSize.width - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerSize.height - thumbHeight;\n        }\n        this.sliderInitialized_ = true;\n    };\n    /**\n     * @param {MouseEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animate({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    return ZoomSlider;\n}(Control));\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n    if (!mapEvent.frameState) {\n        return;\n    }\n    if (!this.sliderInitialized_) {\n        this.initSlider_();\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n}\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n        view.fit(extent);\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol$getUid} from './ol';\nimport {ARRAY_BUFFER as _ol_webgl$ARRAY_BUFFER} from './ol/webgl';\nimport {ELEMENT_ARRAY_BUFFER as _ol_webgl$ELEMENT_ARRAY_BUFFER} from './ol/webgl';\nimport {STREAM_DRAW as _ol_webgl$STREAM_DRAW} from './ol/webgl';\nimport {STATIC_DRAW as _ol_webgl$STATIC_DRAW} from './ol/webgl';\nimport {DYNAMIC_DRAW as _ol_webgl$DYNAMIC_DRAW} from './ol/webgl';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$IIIF from './ol/source/IIIF';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Layer from './ol/layer/Layer';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.ARRAY_BUFFER = _ol_webgl$ARRAY_BUFFER;\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.DYNAMIC_DRAW = _ol_webgl$DYNAMIC_DRAW;\nol.webgl.ELEMENT_ARRAY_BUFFER = _ol_webgl$ELEMENT_ARRAY_BUFFER;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.STATIC_DRAW = _ol_webgl$STATIC_DRAW;\nol.webgl.STREAM_DRAW = _ol_webgl$STREAM_DRAW;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\nimport Projection from './Projection.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map"],"sourceRoot":""}