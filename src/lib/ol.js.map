{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","floor","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","transform_rotate","angle","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_scale","transform_translate","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","animationCount","isDef","series","complete","easing","getResolutionForZoom","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","baseLevel","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerStates","getLayerRenderer","callback_1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","reduce","acc","_loop_1","this_1","Composite_extends","Composite","CompositeMapRenderer","insertBefore","firstChild","children_","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","offsetX","pageXOffset","offsetY","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","asColorLike","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","Immediate","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","arrayBuffer","bufferKey","bufferCache","Uint32Array","Uint16Array","getUsage","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","IconAnchorUnits","FRACTION","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","Image","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad_1","sourceListenKey_1","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Cluster_extends","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image_extends","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","version","OSM_extends","ATTRIBUTION","source_OSM","OSM","BaseImage_extends","BaseImage","BaseImageLayer","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","canvasTransform","layer_Image_extends","layer_Image","ImageLayer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","wantedResolution","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile_extends","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","sourceTileGrid_1","covered_1","empty_1","sourceZ_1","loadedZ_1","sourceTileCoord","sourceTile","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext_1","TileMatrix","TileCol","TileRow","Zoomify_extends","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","TileGroup","ZoomifyTileClass","BufferUsage","STREAM_DRAW","Buffer","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","PointsLayer_extends","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","getDefaultTexture","helper_","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorCallback_","colorCallback","component","rotateWithViewCallback_","rotateWithViewCallback","vectorSource","v0_r","v0_g","v0_b","v0_a","v1_r","v1_g","v1_b","v1_a","v2_r","v2_g","v2_b","v2_a","v3_r","v3_g","v3_b","v3_a","baseIndex","bytesPerFloat","BYTES_PER_ELEMENT","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","LineString","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatOffset","flatEnd","oo","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","canvas_BuilderGroup","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","declutterTree","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","getDeclutter","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","clipExtent","world","transform_2","layer_1","features_1","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","features_2","replayGroupInstructions","executorGroup","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","found","getReplayTransform_","renderResolution","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","zz","executorData","replayDeclutter","renderPixelRatio","renderTileImage_","replayState","renderScale","pixelScale","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","toFunction","layer_Vector_extends","layer_Vector","VectorLayer","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","imageFrameState_1","newSkippedFeatures_1","image_1","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","layer_VectorTile_extends","layer_VectorTile","VectorTileLayer","renderMode_","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","MultiLineString_extends","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","oldMap","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","GeoJSON_extends","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","TextFeature_extends","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","format_TopoJSON","filter_Filter","Filter","tagName_","getTagName","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","And_extends","filter_And","And","Bbox_extends","filter_Bbox","Bbox","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","and","filter_bbox","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_extends","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","penOnly","pointerEvt","platformModifierKeyOnly","touchOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.4';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n    var val;\n    val = callback.call(opt_this, getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback.call(opt_this, getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback.call(opt_this, getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback.call(opt_this, getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Geolocation\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport { listen } from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { circular as circularPolygon } from './geom/Polygon.js';\nimport { GEOLOCATION } from './has.js';\nimport { toRadians } from './math.js';\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\n/**\n * @enum {string}\n */\nvar Property = {\n    ACCURACY: 'accuracy',\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\n    ALTITUDE: 'altitude',\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\n    HEADING: 'heading',\n    POSITION: 'position',\n    PROJECTION: 'projection',\n    SPEED: 'speed',\n    TRACKING: 'tracking',\n    TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */ (function (_super) {\n    __extends(GeolocationError, _super);\n    /**\n     * @param {PositionError} error error object.\n     */\n    function GeolocationError(error) {\n        var _this = _super.call(this, EventType.ERROR) || this;\n        /**\n         * @type {number}\n         */\n        _this.code = error.code;\n        /**\n         * @type {string}\n         */\n        _this.message = error.message;\n        return _this;\n    }\n    return GeolocationError;\n}(Event));\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Geolocation(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * The unprojected (EPSG:4326) device position.\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.position_ = null;\n        /**\n         * @private\n         * @type {import(\"./proj.js\").TransformFunction}\n         */\n        _this.transform_ = identityTransform;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.watchId_ = undefined;\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\n        if (options.projection !== undefined) {\n            _this.setProjection(options.projection);\n        }\n        if (options.trackingOptions !== undefined) {\n            _this.setTrackingOptions(options.trackingOptions);\n        }\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Geolocation.prototype.disposeInternal = function () {\n        this.setTracking(false);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleProjectionChanged_ = function () {\n        var projection = this.getProjection();\n        if (projection) {\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\n            if (this.position_) {\n                this.set(Property.POSITION, this.transform_(this.position_));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleTrackingChanged_ = function () {\n        if (GEOLOCATION) {\n            var tracking = this.getTracking();\n            if (tracking && this.watchId_ === undefined) {\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n            }\n            else if (!tracking && this.watchId_ !== undefined) {\n                navigator.geolocation.clearWatch(this.watchId_);\n                this.watchId_ = undefined;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Position} position position event.\n     */\n    Geolocation.prototype.positionChange_ = function (position) {\n        var coords = position.coords;\n        this.set(Property.ACCURACY, coords.accuracy);\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\n            undefined : coords.altitudeAccuracy);\n        this.set(Property.HEADING, coords.heading === null ?\n            undefined : toRadians(coords.heading));\n        if (!this.position_) {\n            this.position_ = [coords.longitude, coords.latitude];\n        }\n        else {\n            this.position_[0] = coords.longitude;\n            this.position_[1] = coords.latitude;\n        }\n        var projectedPosition = this.transform_(this.position_);\n        this.set(Property.POSITION, projectedPosition);\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n        var geometry = circularPolygon(this.position_, coords.accuracy);\n        geometry.applyTransform(this.transform_);\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\n        this.changed();\n    };\n    /**\n     * Triggered when the Geolocation returns an error.\n     * @event error\n     * @api\n     */\n    /**\n     * @private\n     * @param {PositionError} error error object.\n     */\n    Geolocation.prototype.positionError_ = function (error) {\n        this.setTracking(false);\n        this.dispatchEvent(new GeolocationError(error));\n    };\n    /**\n     * Get the accuracy of the position in meters.\n     * @return {number|undefined} The accuracy of the position measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n    };\n    /**\n     * Get a geometry of the position accuracy.\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracyGeometry = function () {\n        return (\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\n    };\n    /**\n     * Get the altitude associated with the position.\n     * @return {number|undefined} The altitude of the position in meters above mean\n     *     sea level.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitude = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n    };\n    /**\n     * Get the altitude accuracy of the position.\n     * @return {number|undefined} The accuracy of the altitude measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitudeAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n    };\n    /**\n     * Get the heading as radians clockwise from North.\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n     * is set to `true` in the tracking options.\n     * @return {number|undefined} The heading of the device in radians from north.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getHeading = function () {\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\n    };\n    /**\n     * Get the position of the device.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n     *     in the current projection.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the projection associated with the position.\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\n    };\n    /**\n     * Get the speed in meters per second.\n     * @return {number|undefined} The instantaneous speed of the device in meters\n     *     per second.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getSpeed = function () {\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\n    };\n    /**\n     * Determine if the device location is being tracked.\n     * @return {boolean} The device location is being tracked.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTracking = function () {\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\n    };\n    /**\n     * Get the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @return {PositionOptions|undefined} PositionOptions as defined by\n     *     the [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTrackingOptions = function () {\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n    };\n    /**\n     * Set the projection to use for transforming the coordinates.\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setProjection = function (projection) {\n        this.set(Property.PROJECTION, getProjection(projection));\n    };\n    /**\n     * Enable or disable tracking.\n     * @param {boolean} tracking Enable tracking.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTracking = function (tracking) {\n        this.set(Property.TRACKING, tracking);\n    };\n    /**\n     * Set the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @param {PositionOptions} options PositionOptions as defined by the\n     *     [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTrackingOptions = function (options) {\n        this.set(Property.TRACKING_OPTIONS, options);\n    };\n    return Geolocation;\n}(BaseObject));\nexport default Geolocation;\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        _this.updateAnimations_ = _this.updateAnimations_.bind(_this);\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n        }\n        if (!this.getAnimating()) {\n            setTimeout(this.resolveConstraints.bind(this), 0);\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var pixelResolution = resolution / pixelRatio;\n        var rotation = this.getRotation();\n        return {\n            center: [\n                Math.round(center[0] / pixelResolution) * pixelResolution,\n                Math.round(center[1] / pixelResolution) * pixelResolution\n            ],\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var maxDelta = MAX_DELTA;\n        var delta = clamp(this.totalDelta_, -maxDelta, maxDelta);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(this: S, T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     * @param {S=} opt_this The object to use as `this` in `f`.\n     * @template S\n     */\n    LRUCache.prototype.forEach = function (f, opt_this) {\n        var entry = this.oldest_;\n        while (entry) {\n            f.call(opt_this, entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = object[property] = [];\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName]\n                    .call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n    'experimental-webgl',\n    'webgl',\n    'webkit-3d',\n    'moz-webgl'\n];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n    try {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            HAS = true;\n            MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n            EXTENSIONS = gl.getSupportedExtensions();\n        }\n    }\n    catch (e) {\n        // pass\n    }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored'\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options=} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, -1,\n            1, 1,\n            -1, 1\n        ];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                value: options.uniforms[name],\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\n            });\n        }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        var size = frameState.size;\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n            this.renderTargetTextureSize_ = size;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default: return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport { getUid } from '../util.js';\nimport { EXTENSIONS as WEBGL_EXTENSIONS } from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport { includes } from '../array.js';\nimport { listen, unlistenAll } from '../events.js';\nimport { clear } from '../obj.js';\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T } from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport { create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../transform';\nimport { create, fromTransform } from '../vec/mat4';\nimport WebGLPostProcessingPass from './PostProcessingPass';\nimport { getContext } from '../webgl';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buf\n * @property {WebGLBuffer} buffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8B30,\n    VERTEX_SHADER: 0x8B31\n};\n/**\n * Uniform names used in the default shaders.\n * @const\n * @type {Object.<string,string>}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n/**\n * Attribute names used in the default shaders.\n * @const\n * @type {Object.<string,string>}\n */\nexport var DefaultAttrib = {\n    POSITION: 'a_position',\n    TEX_COORD: 'a_texCoord',\n    OPACITY: 'a_opacity',\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\n    OFFSETS: 'a_offsets',\n    COLOR: 'a_color'\n};\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property namesmust math the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformLiteralValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels rawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them:\n *\n *   Data that must be passed to the GPU has to be transferred using `WebGLArrayBuffer` objects.\n *   A buffer has to be created only once, but must be bound everytime the data it holds is changed. Using `WebGLHelper.bindBuffer`\n *   will bind the buffer and flush the new data to the GPU.\n *\n *   For now, the `WebGLHelper` class expects {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use `WebGLHelper.enableAttributeArray` and either\n *   the default attribute names in {@link module:ol/webgl/Helper~DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using `WebGLHelper.prepareDraw` `drawElements` and `finalizeDraw`.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {!Array<WebGLShader>}\n         */\n        _this.shaderCache_ = [];\n        /**\n         * @private\n         * @type {!Array<WebGLProgram>}\n         */\n        _this.programCache_ = [];\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        /**\n         * @type {boolean}\n         */\n        _this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n        // use the OES_element_index_uint extension if available\n        if (_this.hasOESElementIndexUint) {\n            gl.getExtension('OES_element_index_uint');\n        }\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.projectionMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                name: name,\n                value: options.uniforms[name]\n            });\n        }.bind(_this));\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n            return new WebGLPostProcessingPass({\n                webGlContext: gl,\n                scaleRatio: options.scaleRatio,\n                vertexShader: options.vertexShader,\n                fragmentShader: options.fragmentShader,\n                uniforms: options.uniforms\n            });\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * TODO: improve this, the logic is unclear: we want A/ to bind a buffer and B/ to flush data in it\n     * @param {number} target Target.\n     * @param {import(\"./Buffer\").default} buf Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (target, buf) {\n        var gl = this.getGL();\n        var arr = buf.getArray();\n        var bufferKey = getUid(buf);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var buffer = gl.createBuffer();\n            bufferCache = this.bufferCache_[bufferKey] = {\n                buf: buf,\n                buffer: buffer\n            };\n        }\n        gl.bindBuffer(target, bufferCache.buffer);\n        var /** @type {ArrayBufferView} */ arrayBuffer;\n        if (target == ARRAY_BUFFER) {\n            arrayBuffer = new Float32Array(arr);\n        }\n        else if (target == ELEMENT_ARRAY_BUFFER) {\n            arrayBuffer = this.hasOESElementIndexUint ?\n                new Uint32Array(arr) : new Uint16Array(arr);\n        }\n        gl.bufferData(target, arrayBuffer, buf.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        unlistenAll(this.canvas_);\n        var gl = this.getGL();\n        if (!gl.isContextLost()) {\n            for (var key in this.bufferCache_) {\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\n            }\n            for (var key in this.programCache_) {\n                gl.deleteProgram(this.programCache_[key]);\n            }\n            for (var key in this.shaderCache_) {\n                gl.deleteShader(this.shaderCache_[key]);\n            }\n        }\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = this.hasOESElementIndexUint ?\n            gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        var elementSize = this.hasOESElementIndexUint ? 4 : 2;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        // set the \"uniform\" values (coordinates 0,0 are the center of the view)\n        var projectionMatrix = resetTransform(this.projectionMatrix_);\n        scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n        rotateTransform(projectionMatrix, -rotation);\n        translateTransform(projectionMatrix, -center[0], -center[1]);\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.PROJECTION_MATRIX, fromTransform(this.tmpMat4_, projectionMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        this.shaderCache_.push(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ =\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        this.programCache_.push(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        clear(this.shaderCache_);\n        clear(this.programCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\n    };\n    // TODO: shutdown program\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        if (opt_wrapS !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n        }\n        if (opt_wrapT !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n        }\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport { listenOnce, unlistenByKey } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }, this);\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(this: S, T): *} callback Callback.\n     * @param {S=} opt_this The object to use as `this` in `callback`.\n     * @return {*} Callback return value.\n     * @template S\n     */\n    RBush.prototype.forEach = function (callback, opt_this) {\n        return this.forEach_(this.getAll(), callback, opt_this);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(this: S, T): *} callback Callback.\n     * @param {S=} opt_this The object to use as `this` in `callback`.\n     * @return {*} Callback return value.\n     * @template S\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback, opt_this) {\n        return this.forEach_(this.getInExtent(extent), callback, opt_this);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(this: S, T): *} callback Callback.\n     * @param {S=} opt_this The object to use as `this` in `callback`.\n     * @private\n     * @return {*} Callback return value.\n     * @template S\n     */\n    RBush.prototype.forEach_ = function (values, callback, opt_this) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback.call(opt_this, values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = /** @type {Point} */ (feature.getGeometry());\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.imageLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageWrapper;\n}(ImageBase));\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    CARMENTA_SERVER: 'carmentaserver',\n    GEOSERVER: 'geoserver',\n    MAPSERVER: 'mapserver',\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {}\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Date.now();\n        frameState.animate = false;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState, layerState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var element = renderer.renderFrame(frameState, layerState);\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See http://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.IDLE && opt_request === true) {\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.EMPTY;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get an source tiles for this tile.\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\n     * source tiles's consumer count.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles_ = getSourceTiles;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n         */\n        _this.removeSourceTiles_ = removeSourceTiles;\n        /**\n         * @private\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.disposeInternal = function () {\n        this.removeSourceTiles_(this);\n        for (var key in this.context_) {\n            var canvas = this.context_[key].canvas;\n            canvas.width = canvas.height = 0;\n        }\n        for (var key in this.executorGroups) {\n            var executorGroups = this.executorGroups[key];\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].disposeInternal();\n            }\n        }\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D();\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles_(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @type {number}\n         */\n        _this.consumers = 0;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.disposeInternal = function () {\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            this.loader_(this.extent, this.resolution, this.projection);\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, getKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { isEmpty } from '../obj.js';\nimport { equals } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxZoom: options.maxZoom || 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\n         */\n        _this.sourceTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n         */\n        _this.sourceTilesByTileKey_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTiles_ = {};\n        this.sourceTilesByTileKey_ = {};\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var sourceTiles = [];\n        var urlTileCoord = tile.wrappedTileCoord;\n        if (urlTileCoord) {\n            var tileGrid = this.getTileGridForProjection(projection);\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            var z = urlTileCoord[0];\n            var resolution = tileGrid.getResolution(z);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(extent, -1 / resolution, extent);\n            var sourceTileGrid_1 = this.tileGrid;\n            var sourceExtent = sourceTileGrid_1.getExtent();\n            if (sourceExtent) {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            var sourceZ_1 = sourceTileGrid_1.getZForResolution(resolution, 1);\n            var minZoom = sourceTileGrid_1.getMinZoom();\n            var loadedZ_1 = sourceZ_1 + 1;\n            var covered_1, empty_1;\n            do {\n                --loadedZ_1;\n                covered_1 = true;\n                empty_1 = true;\n                sourceTileGrid_1.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\n                    var tileKey = getKey(sourceTileCoord);\n                    var sourceTile;\n                    if (tileKey in this.sourceTiles_) {\n                        sourceTile = this.sourceTiles_[tileKey];\n                        var state = sourceTile.getState();\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                            empty_1 = empty_1 && state === TileState.EMPTY;\n                            sourceTiles.push(sourceTile);\n                            return;\n                        }\n                    }\n                    else if (loadedZ_1 === sourceZ_1) {\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\n                        sourceTile.extent = sourceTileGrid_1.getTileCoordExtent(sourceTileCoord);\n                        sourceTile.projection = projection;\n                        sourceTile.resolution = sourceTileGrid_1.getResolution(sourceTileCoord[0]);\n                        this.sourceTiles_[tileKey] = sourceTile;\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n                        sourceTile.load();\n                    }\n                    else {\n                        empty_1 = false;\n                    }\n                    covered_1 = false;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    unlistenByKey(key_1);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                                    tile.hifi = true;\n                                    tile.sourceZ = sourceZ_1;\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered_1) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered_1 && loadedZ_1 > minZoom);\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\n                tile.setState(TileState.LOADING);\n            }\n            if (covered_1 || empty_1) {\n                tile.hifi = sourceZ_1 === loadedZ_1;\n                tile.sourceZ = loadedZ_1;\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n                if (tile.getState() < TileState.LOADED) {\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\n                }\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                    this.removeSourceTiles(tile);\n                    this.addSourceTiles(tile, sourceTiles);\n                }\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n     */\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n            sourceTiles[i].consumers++;\n        }\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     */\n    VectorTile.prototype.removeSourceTiles = function (tile) {\n        var tileKey = getKey(tile.tileCoord);\n        if (tileKey in this.sourceTilesByTileKey_) {\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                sourceTile.consumers--;\n                if (sourceTile.consumers === 0) {\n                    sourceTile.dispose();\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n                }\n            }\n        }\n        delete this.sourceTilesByTileKey_[tileKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\n            tile.key = this.getRevision().toString();\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { containsExtent } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\n    var extent, wrapX;\n    if (wgs84BoundingBox !== undefined) {\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\n        var projectionExtent = projection.getExtent();\n        if (projectionExtent) {\n            // If possible, do a sanity check on the extent - it should never be\n            // bigger than the validity extent of the projection of a matrix set.\n            if (!containsExtent(projectionExtent, extent)) {\n                extent = undefined;\n            }\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getTopLeft } from '../extent.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var extent = options.extent || [0, -size[1], size[0], 0];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tileSizeForTierSizeCalculation = tileSize;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [1];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(1 << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: options.tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW\n};\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {Array<number>=} opt_arr Array.\n     * @param {number=} opt_usage Usage.\n     */\n    function WebGLArrayBuffer(opt_arr, opt_usage) {\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.arr_ = opt_arr !== undefined ? opt_arr : [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * @return {Array<number>} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.arr_;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage_;\n    };\n    return WebGLArrayBuffer;\n}());\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport LayerRenderer from '../Layer';\nimport WebGLArrayBuffer from '../../webgl/Buffer';\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl';\nimport WebGLHelper, { DefaultAttrib } from '../../webgl/Helper';\nimport GeometryType from '../../geom/GeometryType';\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, number, number):number} [colorCallback] Will be called on every feature in the\n * source to compute the color of each corner of the quad. This is only done on source change.\n * The second argument is 0 for bottom left, 1 for bottom right, 2 for top right and 3 for top left\n * The third argument is 0 for red, 1 for green, 2 for blue and 3 for alpha\n * The return value should be between 0 and 1.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise the colors will be blended\n * additively.\n *\n * Points are rendered as quads with the following structure:\n *\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n        var _this = _super.call(this, vectorLayer) || this;\n        var options = opt_options || {};\n        var uniforms = options.uniforms || {};\n        uniforms.u_texture = options.texture || _this.getDefaultTexture();\n        _this.helper_ = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: uniforms\n        });\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.program_ = _this.helper_.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\n        _this.helper_.useProgram(_this.program_);\n        _this.sizeCallback_ = options.sizeCallback || function () {\n            return 1;\n        };\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\n            var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\n            return geom.getCoordinates()[index];\n        };\n        _this.opacityCallback_ = options.opacityCallback || function () {\n            return 1;\n        };\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\n            return index < 2 ? 0 : 1;\n        };\n        _this.colorCallback_ = options.colorCallback || function (feature, index, component) {\n            return 1;\n        };\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\n            return false;\n        };\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\n        this.helper_.finalizeDraw(frameState);\n        var canvas = this.helper_.getCanvas();\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var _this = this;\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var stride = 12;\n        this.helper_.prepareDraw(frameState);\n        if (this.sourceRevision_ < vectorSource.getRevision()) {\n            this.sourceRevision_ = vectorSource.getRevision();\n            this.verticesBuffer_.getArray().length = 0;\n            this.indicesBuffer_.getArray().length = 0;\n            var viewState = frameState.viewState;\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            // loop on features to fill the buffer\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n            vectorSource.forEachFeature(function (feature) {\n                if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n                    return;\n                }\n                var x = _this.coordCallback_(feature, 0);\n                var y = _this.coordCallback_(feature, 1);\n                var u0 = _this.texCoordCallback_(feature, 0);\n                var v0 = _this.texCoordCallback_(feature, 1);\n                var u1 = _this.texCoordCallback_(feature, 2);\n                var v1 = _this.texCoordCallback_(feature, 3);\n                var size = _this.sizeCallback_(feature);\n                var opacity = _this.opacityCallback_(feature);\n                var rotateWithView = _this.rotateWithViewCallback_(feature) ? 1 : 0;\n                var v0_r = _this.colorCallback_(feature, 0, 0);\n                var v0_g = _this.colorCallback_(feature, 0, 1);\n                var v0_b = _this.colorCallback_(feature, 0, 2);\n                var v0_a = _this.colorCallback_(feature, 0, 3);\n                var v1_r = _this.colorCallback_(feature, 1, 0);\n                var v1_g = _this.colorCallback_(feature, 1, 1);\n                var v1_b = _this.colorCallback_(feature, 1, 2);\n                var v1_a = _this.colorCallback_(feature, 1, 3);\n                var v2_r = _this.colorCallback_(feature, 2, 0);\n                var v2_g = _this.colorCallback_(feature, 2, 1);\n                var v2_b = _this.colorCallback_(feature, 2, 2);\n                var v2_a = _this.colorCallback_(feature, 2, 3);\n                var v3_r = _this.colorCallback_(feature, 3, 0);\n                var v3_g = _this.colorCallback_(feature, 3, 1);\n                var v3_b = _this.colorCallback_(feature, 3, 2);\n                var v3_a = _this.colorCallback_(feature, 3, 3);\n                var baseIndex = _this.verticesBuffer_.getArray().length / stride;\n                _this.verticesBuffer_.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, v0_r, v0_g, v0_b, v0_a, x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, v1_r, v1_g, v1_b, v1_a, x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, v2_r, v2_g, v2_b, v2_a, x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, v3_r, v3_g, v3_b, v3_a);\n                _this.indicesBuffer_.getArray().push(baseIndex, baseIndex + 1, baseIndex + 3, baseIndex + 1, baseIndex + 2, baseIndex + 3);\n            });\n        }\n        // write new data\n        this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n        this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n        this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n        this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n        this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n        this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n        this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n        return true;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLPointsLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper_.getShaderCompileErrors();\n    };\n    /**\n     * Returns a texture of 1x1 pixel, white\n     * @private\n     * @return {ImageData} Image data.\n     */\n    WebGLPointsLayerRenderer.prototype.getDefaultTexture = function () {\n        var canvas = document.createElement('canvas');\n        var image = canvas.getContext('2d').createImageData(1, 1);\n        image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n        return image;\n    };\n    return WebGLPointsLayerRenderer;\n}(LayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid'\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten, unlistenByKey } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { apply as applyTransform, create as createTransform, compose as composeTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport { clear, isEmpty } from '../../obj.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        var baseCanvas = _this.context.canvas;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.overlayContext_ = createCanvasContext2D();\n        var overlayCanvas = _this.overlayContext_.canvas;\n        overlayCanvas.style.position = 'absolute';\n        overlayCanvas.style.transformOrigin = 'top left';\n        var container = document.createElement('div');\n        var style = container.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        container.appendChild(baseCanvas);\n        container.appendChild(overlayCanvas);\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.container_ = container;\n        /**\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.overlayPixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inverseOverlayPixelTransform_ = createTransform();\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        // Use closest resolution.\n        _this.zDirection = 0;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        this.overlayContext_.canvas.width = this.overlayContext_.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR || state === TileState.ABORT) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                this.renderTileImageQueue_[tileUid] = tile;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, frameState));\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            this.prepareTile(tile, pixelRatio, projection);\n        }\n        return tile;\n    };\n    /**\n     * @inheritdoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState, layerState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty && builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        var executorGroups = tile.executorGroups[layerUid];\n        if (executorGroups) {\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].dispose();\n            }\n        }\n        tile.executorGroups[layerUid] = [];\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, !!this_1.declutterTree_);\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n                null :\n                sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), this_1.declutterTree_, executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        /** @type {!Object<string, boolean>} */\n        var features = {};\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var i, ii;\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n            var tile = renderedTiles[i];\n            if (!this.declutterTree_) {\n                // When not decluttering, we only need to consider the tile that contains the given\n                // coordinate, because each feature will be rendered for each tile that contains it.\n                var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n                if (!containsCoordinate(tileExtent, coordinate)) {\n                    continue;\n                }\n            }\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n                /**\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n                 * @return {?} Callback result.\n                 */\n                function (feature) {\n                    var key = feature.getId();\n                    if (key === undefined) {\n                        key = getUid(feature);\n                    }\n                    if (!(key in features)) {\n                        features[key] = true;\n                        return callback.call(thisArg, feature, layer);\n                    }\n                }, null);\n            }\n        }\n        return found;\n    };\n    /**\n     * @param {import(\"../../VectorTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {import(\"../../transform.js\").Transform} transform Transform.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function (tile, frameState) {\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGrid();\n        var tileCoord = tile.tileCoord;\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var renderResolution = viewState.resolution / pixelRatio;\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var center = viewState.center;\n        var origin = getTopLeft(tileExtent);\n        var size = frameState.size;\n        var offsetX = Math.round(pixelRatio * size[0] / 2);\n        var offsetY = Math.round(pixelRatio * size[1] / 2);\n        return composeTransform(this.tmpTransform_, offsetX, offsetY, tileResolution / renderResolution, tileResolution / renderResolution, viewState.rotation, (origin[0] - center[0]) / tileResolution, (center[1] - origin[1]) / tileResolution);\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        _super.prototype.renderFrame.call(this, frameState, layerState);\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        if (!isEmpty(this.renderTileImageQueue_) && !this.extentChanged) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        var context = this.overlayContext_;\n        var declutterReplays = layer.getDeclutter() ? {} : null;\n        var source = layer.getSource();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var pixelRatio = frameState.pixelRatio;\n        var rotation = frameState.viewState.rotation;\n        var size = frameState.size;\n        // set forward and inverse pixel transforms\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n        // resize and clear\n        var canvas = context.canvas;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (declutterReplays) {\n            this.declutterTree_.clear();\n        }\n        var tiles = this.renderedTiles;\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var clips = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            if (tile.getState() == TileState.ABORT) {\n                continue;\n            }\n            var tileCoord = tile.tileCoord;\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var zs = void 0, currentClip = void 0;\n                if (!declutterReplays) {\n                    zs = [];\n                    currentClip = executorGroup.getClipCoords(transform);\n                    context.save();\n                    // Create a clip mask for regions in this low resolution tile that are\n                    // already filled by a higher resolution tile\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\n                        var clip = clips[j];\n                        if (currentZ < zs[j]) {\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher resolution tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n                if (!declutterReplays) {\n                    context.restore();\n                    clips.push(currentClip);\n                    zs.push(currentZ);\n                }\n            }\n        }\n        if (declutterReplays) {\n            replayDeclutter(declutterReplays, context, rotation, hifi);\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        // Now that we have rendered the tiles we have already, let's prepare new tile images\n        // for the next frame\n        this.renderTileImages_(hifi, frameState);\n        return this.container_;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            frameState.animate = true;\n            delete this.renderTileImageQueue_[uid];\n            var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            if (this.declutterTree_ && layer.getRenderMode() === VectorTileRenderType.IMAGE) {\n                this.declutterTree_.clear();\n            }\n            var viewState = frameState.viewState;\n            var tileGrid = layer.getSource().getTileGridForProjection(viewState.projection);\n            var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n            var renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\n            this.renderTileImage_(tile, frameState.pixelRatio, renderPixelRatio, viewState.projection);\n        }\n        clear(this.renderTileImageQueue_);\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} renderPixelRatio Render pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, pixelRatio, renderPixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var canvasTransform = resetTransform(this.tmpTransform_);\n        var renderScale = pixelRatio / renderPixelRatio;\n        scaleTransform(canvasTransform, renderScale, renderScale);\n        context.setTransform.apply(context, canvasTransform);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            var pixelScale = renderPixelRatio / resolution;\n            var transform = resetTransform(this.tmpTransform_);\n            scaleTransform(transform, pixelScale, -pixelScale);\n            translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n        if (data) {\n            return data;\n        }\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n        var context = this.overlayContext_;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\nimport { get as getProjection, getTransform } from '../../proj.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + ((lon2 - lon1) * frac), lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport { degreesToStringHDMS } from '../coordinate';\nimport Text from '../style/Text';\nimport Fill from '../style/Fill';\nimport Stroke from '../style/Stroke';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj';\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent';\nimport { clamp } from '../math';\nimport Style from '../style/Style';\nimport Feature from '../Feature';\nimport { bbox } from '../loadingstrategy';\nimport { meridian, parallel } from '../geom/flat/geodesic';\nimport GeometryLayout from '../geom/GeometryLayout';\nimport Point from '../geom/Point';\nimport Collection from '../Collection';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)'\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLatP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLonP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLatP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLonP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n                options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n                options.latLabelPosition;\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.lonLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.lonLabelStyleCache_[label]) {\n                    this.lonLabelStyleCache_[label] = new Style({\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textBaseline: 'bottom',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.lonLabelStyleCache_[label];\n            }.bind(_this);\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.latLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.latLabelStyleCache_[label]) {\n                    this.latLabelStyleCache_[label] = new Style({\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textAlign: 'right',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.latLabelStyleCache_[label];\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: bbox,\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_\n        });\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        _this.tmpExtent_ = null;\n        return _this;\n    }\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n        // we should not keep track of loaded extents\n        setTimeout(function () {\n            source.removeLoadedExtent(extent);\n        }, 0);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = resolution * resolution / 4;\n        var updateProjectionInfo = !this.projection_ ||\n            !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridiansLabels_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallelsLabels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        var labelData;\n        if (this.meridiansLabels_) {\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n                labelData = this.meridiansLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.lonLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n        if (this.parallelsLabels_) {\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n                labelData = this.parallelsLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.latLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\n                this.meridiansLabels_[index] = {\n                    geom: textPoint,\n                    text: this.lonLabelFormatter_(lon)\n                };\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\n                this.parallelsLabels_[index] = {\n                    geom: textPoint,\n                    text: this.latLabelFormatter_(lat)\n                };\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var centerLonLat = this.toLonLatTransform_(center);\n        var centerLon = centerLonLat[0];\n        var centerLat = centerLonLat[1];\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        var validExtent = [\n            Math.max(extent[0], this.minLonP_),\n            Math.max(extent[1], this.minLatP_),\n            Math.min(extent[2], this.maxLonP_),\n            Math.min(extent[3], this.maxLatP_)\n        ];\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lon != this.minLon_ && cnt++ < maxLines) {\n            lon = Math.max(lon - interval, this.minLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\n            lon = Math.min(lon + interval, this.maxLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = this.intervals_[i] / 2;\n            p1[0] = centerLon - delta;\n            p1[1] = centerLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = centerLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate = [flatCoordinates[0], lat];\n        var point;\n        if (index in this.meridiansLabels_) {\n            point = this.meridiansLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate = [lon, flatCoordinates[1]];\n        var point;\n        if (index in this.parallelsLabels_) {\n            point = this.parallelsLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        this.maxLatP_ = worldExtentP[3];\n        this.maxLonP_ = worldExtentP[2];\n        this.minLatP_ = worldExtentP[1];\n        this.minLonP_ = worldExtentP[0];\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport { listen } from '../events.js';\nimport { getChangeEventType } from '../Object.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius'\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.shadow;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.circleImage_ = undefined;\n        /**\n         * @private\n         * @type {Array<Array<import(\"../style/Style.js\").default>>}\n         */\n        _this.styleCache_ = null;\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * @inheritDoc\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n        \\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(1.0, 1.0, 1.0, alpha);\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n                }.bind(this),\n                u_resolution: function (frameState) {\n                    return frameState.viewState.resolution;\n                }\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: this.gradient_\n                    }\n                }\n            ],\n            opacityCallback: function (feature) {\n                return this.weightFunction_(feature);\n            }.bind(this)\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\nimport { assign } from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport { listen } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport ImageState from '../../ImageState.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n     */\n    function CanvasVectorImageLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @type {!Array<string>}\n         */\n        _this.skippedFeatures_ = [];\n        /**\n         * @private\n         * @type {import(\"./VectorLayer.js\").default}\n         */\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.layerImageRatio_ = layer.getImageRatio();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\n        this.vectorRenderer_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var hints = frameState.viewHints;\n        var vectorRenderer = this.vectorRenderer_;\n        var renderedExtent = frameState.extent;\n        if (this.layerImageRatio_ !== 1) {\n            renderedExtent = renderedExtent.slice(0);\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var skippedFeatures_1 = this.skippedFeatures_;\n            var context = vectorRenderer.context;\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n                size: [\n                    getWidth(renderedExtent) / viewResolution,\n                    getHeight(renderedExtent) / viewResolution\n                ],\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n                    rotation: 0\n                }))\n            }));\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\n            var image_1 = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n                if (vectorRenderer.prepareFrame(imageFrameState_1, layerState) &&\n                    (vectorRenderer.replayGroupChanged ||\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\n                    vectorRenderer.renderFrame(imageFrameState_1, layerState);\n                    skippedFeatures_1 = newSkippedFeatures_1;\n                    callback();\n                }\n            });\n            listen(image_1, EventType.CHANGE, function () {\n                if (image_1.getState() === ImageState.LOADED) {\n                    this.image_ = image_1;\n                    this.skippedFeatures_ = skippedFeatures_1;\n                }\n            }, this);\n            image_1.load();\n        }\n        if (this.image_) {\n            var image = this.image_;\n            var imageResolution = image.getResolution();\n            var imagePixelRatio = image.getPixelRatio();\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        }\n        return !!this.image_;\n    };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) {\n        if (this.vectorRenderer_) {\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n        }\n        else {\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n        }\n    };\n    return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\nexport default CanvasVectorImageLayerRenderer;\n//# sourceMappingURL=VectorImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport { assign } from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /** @class */ (function (_super) {\n    __extends(VectorImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.imageRatio;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n        return _this;\n    }\n    /**\n     * @return {number} Ratio between rendered extent size and viewport extent size.\n     */\n    VectorImageLayer.prototype.getImageRatio = function () {\n        return this.imageRatio_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorImageLayer.prototype.createRenderer = function () {\n        return new CanvasVectorImageLayerRenderer(this);\n    };\n    return VectorImageLayer;\n}(BaseVectorLayer));\nexport default VectorImageLayer;\n//# sourceMappingURL=VectorImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport { assert } from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\n *    cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\n        /**\n         * @private\n         * @type {VectorTileRenderType}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * @return {VectorTileRenderType} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotation(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolution(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate, this);\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = /** @type {LineString} */ (geometry);\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEventType#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = /** @class */ (function (_super) {\n    __extends(ExtentInteractionEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentInteractionEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentInteractionEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires Event\n * @api\n */\nvar ExtentInteraction = /** @class */ (function (_super) {\n    __extends(ExtentInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ExtentInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    ExtentInteraction.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b);\n        };\n        var extent = this.getExtent();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex = squaredDist1 > squaredDist2 ?\n                        closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    ExtentInteraction.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixel(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtentInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtentInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtent();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixel(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtentInteraction.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtentInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtent();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    ExtentInteraction.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    ExtentInteraction.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    ExtentInteraction.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n    };\n    return ExtentInteraction;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\n    ];\n}\nexport default ExtentInteraction;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        var featureOverlay = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                features: options.features,\n                wrapX: options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @private\n         * @type {VectorLayer}\n         */\n        _this.featureOverlay_ = featureOverlay;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.featureOverlay_.getSource().getFeaturesCollection();\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {VectorLayer} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Get the overlay layer that this interaction renders selected features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Select.prototype.getOverlay = function () {\n        return this.featureOverlay_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var selectedFeatures = this.getFeatures();\n        if (currentMap) {\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n        }\n        _super.prototype.setMap.call(this, map);\n        this.featureOverlay_.setMap(map);\n        if (map) {\n            selectedFeatures.forEach(map.skipFeature.bind(map));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature, resolution) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     */\n    function TranslateEvent(type, features, coordinate) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                return feature;\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent } from '../extent.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /** @class */ (function (_super) {\n    __extends(EsriJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function EsriJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        feature.setGeometry(geometry);\n        if (opt_options && opt_options.idField &&\n            esriJSONFeature.attributes[opt_options.idField]) {\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\n        }\n        if (esriJSONFeature.attributes) {\n            feature.setProperties(esriJSONFeature.attributes, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var options = opt_options ? opt_options : {};\n        if (object['features']) {\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            var features = [];\n            var esriJSONFeatures = esriJSONFeatureSet.features;\n            options.idField = object.objectIdFieldName;\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n            }\n            return features;\n        }\n        else {\n            return [this.readFeatureFromObject(object, options)];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n            var crs = spatialReference.wkid;\n            return getProjection('EPSG:' + crs);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Encode a geometry as a EsriJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONGeometry} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * Encode a feature as a esriJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var object = {};\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object['geometry'] = writeGeometry(geometry, opt_options);\n            if (opt_options && opt_options.featureProjection) {\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n                });\n            }\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object['attributes'] = properties;\n        }\n        else {\n            object['attributes'] = {};\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a EsriJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            'features': objects\n        };\n    };\n    return EsriJSON;\n}(JSONFeature));\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var type;\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n        type = GeometryType.POINT;\n    }\n    else if (object['points']) {\n        type = GeometryType.MULTI_POINT;\n    }\n    else if (object['paths']) {\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n        if (esriJSONPolyline.paths.length === 1) {\n            type = GeometryType.LINE_STRING;\n        }\n        else {\n            type = GeometryType.MULTI_LINE_STRING;\n        }\n    }\n    else if (object['rings']) {\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n        var layout = getGeometryLayout(esriJSONPolygon);\n        var rings = convertRings(esriJSONPolygon.rings, layout);\n        if (rings.length === 1) {\n            type = GeometryType.POLYGON;\n            object['rings'] = rings[0];\n        }\n        else {\n            type = GeometryType.MULTI_POLYGON;\n            object['rings'] = rings;\n        }\n    }\n    var geometryReader = GEOMETRY_READERS[type];\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n    var flatRing = [];\n    var outerRings = [];\n    var holes = [];\n    var i, ii;\n    for (i = 0, ii = rings.length; i < ii; ++i) {\n        flatRing.length = 0;\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\n        // is this ring an outer ring? is it clockwise?\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\n        if (clockwise) {\n            outerRings.push([rings[i]]);\n        }\n        else {\n            holes.push(rings[i]);\n        }\n    }\n    while (holes.length) {\n        var hole = holes.shift();\n        var matched = false;\n        // loop over all outer rings and see if they contain our hole.\n        for (i = outerRings.length - 1; i >= 0; i--) {\n            var outerRing = outerRings[i][0];\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\n            if (containsHole) {\n                // the hole is contained push it into our polygon\n                outerRings[i].push(hole);\n                matched = true;\n                break;\n            }\n        }\n        if (!matched) {\n            // no outer rings contain this hole turn it into and outer\n            // ring (reverse it)\n            outerRings.push([hole.reverse()]);\n        }\n    }\n    return outerRings;\n}\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n    var point;\n    if (object.m !== undefined && object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\n    }\n    else if (object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\n    }\n    else if (object.m !== undefined) {\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\n    }\n    else {\n        point = new Point([object.x, object.y]);\n    }\n    return point;\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new LineString(object.paths[0], layout);\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiLineString(object.paths, layout);\n}\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n    var layout = GeometryLayout.XY;\n    if (object.hasZ === true && object.hasM === true) {\n        layout = GeometryLayout.XYZM;\n    }\n    else if (object.hasZ === true) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (object.hasM === true) {\n        layout = GeometryLayout.XYM;\n    }\n    return layout;\n}\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPoint(object.points, layout);\n}\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPolygon(object.rings, layout);\n}\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new Polygon(object.rings, layout);\n}\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {EsriJSONPoint} */\n    var esriJSON;\n    var layout = geometry.getLayout();\n    if (layout === GeometryLayout.XYZ) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            m: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYZM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2],\n            m: coordinates[3]\n        };\n    }\n    else if (layout === GeometryLayout.XY) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1]\n        };\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    return esriJSON;\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n    var layout = geometry.getLayout();\n    return {\n        hasZ: (layout === GeometryLayout.XYZ ||\n            layout === GeometryLayout.XYZM),\n        hasM: (layout === GeometryLayout.XYM ||\n            layout === GeometryLayout.XYZM)\n    };\n}\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, opt_options) {\n    var hasZM = getHasZM(lineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: [\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n        ]\n    };\n}\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, opt_options) {\n    // Esri geometries use the left-hand rule\n    var hasZM = getHasZM(polygon);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    };\n}\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, opt_options) {\n    var hasZM = getHasZM(multiLineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, opt_options) {\n    var hasZM = getHasZM(multiPoint);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var hasZM = getHasZM(geometry);\n    var coordinates = geometry.getCoordinates(false);\n    var output = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\n            output.push(coordinates[i][x]);\n        }\n    }\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n    };\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\nexport default EsriJSON;\n//# sourceMappingURL=EsriJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = new XMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /** @class */ (function (_super) {\n    __extends(GMLBase, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function GMLBase(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\n        /**\n         * @protected\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType = options.featureType;\n        /**\n         * @protected\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS = options.featureNS;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.srsName = options.srsName;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.schemaLocation = '';\n        /**\n         * @type {Object<string, Object<string, Object>>}\n         */\n        _this.FEATURE_COLLECTION_PARSERS = {};\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\n        };\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<Feature> | undefined} Features.\n     */\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\n        var localName = node.localName;\n        var features = null;\n        if (localName == 'FeatureCollection') {\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\n        }\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\n            var context = objectStack[0];\n            var featureType = context['featureType'];\n            var featureNS = context['featureNS'];\n            var prefix = 'p';\n            var defaultPrefix = 'p0';\n            if (!featureType && node.childNodes) {\n                featureType = [], featureNS = {};\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n                    var child = node.childNodes[i];\n                    if (child.nodeType === 1) {\n                        var ft = child.nodeName.split(':').pop();\n                        if (featureType.indexOf(ft) === -1) {\n                            var key = '';\n                            var count = 0;\n                            var uri = child.namespaceURI;\n                            for (var candidate in featureNS) {\n                                if (featureNS[candidate] === uri) {\n                                    key = candidate;\n                                    break;\n                                }\n                                ++count;\n                            }\n                            if (!key) {\n                                key = prefix + count;\n                                featureNS[key] = uri;\n                            }\n                            featureType.push(key + ':' + ft);\n                        }\n                    }\n                }\n                if (localName != 'featureMember') {\n                    // recheck featureType for each featureMember\n                    context['featureType'] = featureType;\n                    context['featureNS'] = featureNS;\n                }\n            }\n            if (typeof featureNS === 'string') {\n                var ns = featureNS;\n                featureNS = {};\n                featureNS[defaultPrefix] = ns;\n            }\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n            var parsersNS = {};\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n            for (var p in featureNS) {\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n                        defaultPrefix : featureTypes[i].split(':')[0];\n                    if (featurePrefix === p) {\n                        parsers[featureTypes[i].split(':').pop()] =\n                            (localName == 'featureMembers') ?\n                                makeArrayPusher(this.readFeatureElement, this) :\n                                makeReplacer(this.readFeatureElement, this);\n                    }\n                }\n                parsersNS[featureNS[p]] = parsers;\n            }\n            if (localName == 'featureMember') {\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n            }\n            else {\n                features = pushParseAndPop([], parsersNS, node, objectStack);\n            }\n        }\n        if (features === null) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n     */\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\n        var context = /** @type {Object} */ (objectStack[0]);\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n        if (geometry) {\n            if (Array.isArray(geometry)) {\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n            }\n            else {\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\n     * @return {Feature|Object} Feature\n     */\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\n        var geometryName;\n        var values = {};\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var value = void 0;\n            var localName = n.localName;\n            // first, check if it is simple attribute\n            if (n.childNodes.length === 0\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n                value = getAllTextContent(n, false);\n                if (ONLY_WHITESPACE_RE.test(value)) {\n                    value = undefined;\n                }\n            }\n            else {\n                if (asFeature) {\n                    //if feature, try it as a geometry\n                    value = this.readGeometryElement(n, objectStack);\n                }\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n                    value = this.readFeatureElementInternal(n, objectStack, false);\n                }\n                else if (localName !== 'boundedBy') {\n                    // boundedBy is an extent and must not be considered as a geometry\n                    geometryName = localName;\n                }\n            }\n            if (values[localName]) {\n                if (!(values[localName] instanceof Array)) {\n                    values[localName] = [values[localName]];\n                }\n                values[localName].push(value);\n            }\n            else {\n                values[localName] = value;\n            }\n            var len = n.attributes.length;\n            if (len > 0) {\n                values[localName] = { _content_: values[localName] };\n                for (var i = 0; i < len; i++) {\n                    var attName = n.attributes[i].name;\n                    values[localName][attName] = n.attributes[i].value;\n                }\n            }\n        }\n        if (!asFeature) {\n            return values;\n        }\n        else {\n            var feature = new Feature(values);\n            if (geometryName) {\n                feature.setGeometryName(geometryName);\n            }\n            var fid = node.getAttribute('fid') ||\n                getAttributeNS(node, this.namespace, 'id');\n            if (fid) {\n                feature.setId(fid);\n            }\n            return feature;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Feature} Feature.\n     */\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\n        return this.readFeatureElementInternal(node, objectStack, true);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Point|undefined} Point.\n     */\n    GMLBase.prototype.readPoint = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPoint|undefined} MultiPoint.\n     */\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\n        if (coordinates) {\n            return new MultiPoint(coordinates);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            return new MultiLineString(lineStrings);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LineString|undefined} LineString.\n     */\n    GMLBase.prototype.readLineString = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\n     */\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n        if (ring) {\n            return ring;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LinearRing|undefined} LinearRing.\n     */\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Polygon|undefined} Polygon.\n     */\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>} Flat coordinates.\n     */\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\n        return geometry ? geometry : null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {\n            featureType: this.featureType,\n            featureNS: this.featureNS\n        };\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        var features = this.readFeaturesInternal(node, [options]);\n        return features || [];\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readProjectionFromNode = function (node) {\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n    };\n    return GMLBase;\n}(XMLFeature));\nGMLBase.prototype.namespace = GMLNS;\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\nexport default GMLBase;\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, (bool) ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(DOCUMENT.createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() + '-' +\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\n        padNumber(date.getUTCDate(), 2) + 'T' +\n        padNumber(date.getUTCHours(), 2) + ':' +\n        padNumber(date.getUTCMinutes(), 2) + ':' +\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML3\n */\nimport { extend } from '../array.js';\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /** @class */ (function (_super) {\n    __extends(GML3, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML3(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiCurve_ = options.multiCurve !== undefined ?\n            options.multiCurve : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiSurface_ = options.multiSurface !== undefined ?\n            options.multiSurface : true;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hasZ = options.hasZ !== undefined ?\n            options.hasZ : false;\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            var multiLineString = new MultiLineString(lineStrings);\n            return multiLineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Polygon|undefined} Polygon.\n     */\n    GML3.prototype.readSurface_ = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {LineString|undefined} LineString.\n     */\n    GML3.prototype.readCurve_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false);\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        var m;\n        while ((m = re.exec(s))) {\n            flatCoordinates.push(parseFloat(m[1]));\n            s = s.substr(m[0].length);\n        }\n        if (s !== '') {\n            return undefined;\n        }\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        if (axisOrientation === 'neu') {\n            var i = void 0, ii = void 0;\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n                var y = flatCoordinates[i];\n                var x = flatCoordinates[i + 1];\n                flatCoordinates[i] = x;\n                flatCoordinates[i + 1] = y;\n            }\n        }\n        var len = flatCoordinates.length;\n        if (len == 2) {\n            flatCoordinates.push(0);\n        }\n        if (len === 0) {\n            return undefined;\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var contextDimension = context['srsDimension'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        var coords = s.split(/\\s+/);\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\n        var dim = 2;\n        if (node.getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n        }\n        else if (node.getAttribute('dimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n        }\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n        }\n        else if (contextDimension) {\n            dim = readNonNegativeIntegerString(contextDimension);\n        }\n        var x, y, z;\n        var flatCoordinates = [];\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\n            x = parseFloat(coords[i]);\n            y = parseFloat(coords[i + 1]);\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        var axisOrientation = 'enu';\n        if (srsName) {\n            axisOrientation = getProjection(srsName).getAxisOrientation();\n        }\n        var point = value.getCoordinates();\n        var coords;\n        // only 2d for simple features profile\n        if (axisOrientation.substr(0, 2) === 'en') {\n            coords = (point[0] + ' ' + point[1]);\n        }\n        else {\n            coords = (point[1] + ' ' + point[0]);\n        }\n        if (hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        writeStringTextNode(node, coords);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ' ' + point[1] :\n            point[1] + ' ' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        var point;\n        for (var i = 0; i < len; ++i) {\n            point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var pos = createElementNS(node.namespaceURI, 'pos');\n        node.appendChild(pos);\n        this.writePos_(pos, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var posList = createElementNS(node.namespaceURI, 'posList');\n        node.appendChild(posList);\n        this.writePosList_(posList, geometry, objectStack);\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Polygon} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var posList = createElementNS(node.namespaceURI, 'posList');\n            node.appendChild(posList);\n            this.writePosList_(posList, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        var hasZ = context['hasZ'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiLineString} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureType = context['featureType'];\n        var featureNS = context['featureNS'];\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n        var serializers = {};\n        serializers[featureNS] = {};\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var curve = context['curve'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'LineString' && curve === true) {\n                nodeName = 'Curve';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS(this.namespace, nodeName);\n    };\n    /**\n     * Encode a geometry in GML 3.1.1 Simple Features.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var geom = createElementNS(this.namespace, 'geom');\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\n            curve: this.curve_, surface: this.surface_,\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeGeometryElement(geom, geometry, [context]);\n        return geom;\n    };\n    /**\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Element} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var node = createElementNS(this.namespace, 'featureMembers');\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n        var context = {\n            srsName: this.srsName,\n            hasZ: this.hasZ,\n            curve: this.curve_,\n            surface: this.surface_,\n            multiSurface: this.multiSurface_,\n            multiCurve: this.multiCurve_,\n            featureNS: this.featureNS,\n            featureType: this.featureType\n        };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeFeatureMembers_(node, features, [context]);\n        return node;\n    };\n    return GML3;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML3;\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\nexport default GML;\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML2\n */\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /** @class */ (function (_super) {\n    __extends(GML2, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML2(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(_this.readFeaturesInternal);\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            if (proj) {\n                axisOrientation = proj.getAxisOrientation();\n            }\n        }\n        var coordsGroups = s.trim().split(/\\s+/);\n        var flatCoordinates = [];\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n            var coords = coordsGroups[i].split(/,+/);\n            var x = parseFloat(coords[0]);\n            var y = parseFloat(coords[1]);\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML2.prototype.readBox_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS('http://www.opengis.net/gml', nodeName);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n            node.appendChild(coordinates);\n            this.writeCoordinates_(coordinates, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {string} namespaceURI XML namespace.\n     * @returns {Element} coordinates node.\n     * @private\n     */\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\n        coordinates.setAttribute('decimal', '.');\n        coordinates.setAttribute('cs', ',');\n        coordinates.setAttribute('ts', ' ');\n        return coordinates;\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ',' + point[1] :\n            point[1] + ',' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ',' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        var point = geometry.getCoordinates();\n        var coord = this.getCoords_(point, srsName, hasZ);\n        writeStringTextNode(coordinates, coord);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        this.writeCoordinates_(coordinates, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    return GML2;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Box': makeReplacer(GML2.prototype.readBox_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\nexport default GML2;\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML32;\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TextFeature.prototype.getType = function () {\n        return FormatType.TEXT;\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle(node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue(node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textStyle = null;\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    if (foundStyle.getImage()) {\n        var imageSize = foundStyle.getImage().getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = foundStyle.getImage().getScale();\n            // Offset the label to be centered to the right of the icon, if there is\n            // one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    if (foundStyle.getText() !== null) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        var foundText = foundStyle.getText();\n        textStyle = foundText.clone();\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        /** @type {Style|undefined} */\n        var nameStyle;\n        var name = '';\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                drawName = geometry.getType() === GeometryType.POINT;\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n        }\n        if (style) {\n            if (drawName) {\n                nameStyle = createNameStyleFunction(style[0], name);\n                return style.concat(nameStyle);\n            }\n            return style;\n        }\n        if (styleUrl) {\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n            if (drawName) {\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\n                return foundStyle.concat(nameStyle);\n            }\n            return foundStyle;\n        }\n        if (drawName) {\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\n            return defaultStyle.concat(nameStyle);\n        }\n        return defaultStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: 'anonymous',\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        strokeStyle = null;\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': style.getWidth()\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n    BAROMETRIC: 'barometric',\n    GPS: 'gps',\n    NONE: 'none'\n};\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /** @class */ (function (_super) {\n    __extends(IGC, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function IGC(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {IGCZ}\n         */\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\n        var altitudeMode = this.altitudeMode_;\n        var lines = text.split(NEWLINE_RE);\n        /** @type {Object<string, string>} */\n        var properties = {};\n        var flatCoordinates = [];\n        var year = 2000;\n        var month = 0;\n        var day = 1;\n        var lastDateTime = -1;\n        var i, ii;\n        for (i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            var m = void 0;\n            if (line.charAt(0) == 'B') {\n                m = B_RECORD_RE.exec(line);\n                if (m) {\n                    var hour = parseInt(m[1], 10);\n                    var minute = parseInt(m[2], 10);\n                    var second = parseInt(m[3], 10);\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (m[6] == 'S') {\n                        y = -y;\n                    }\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (m[9] == 'W') {\n                        x = -x;\n                    }\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != IGCZ.NONE) {\n                        var z = void 0;\n                        if (altitudeMode == IGCZ.GPS) {\n                            z = parseInt(m[11], 10);\n                        }\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\n                            z = parseInt(m[12], 10);\n                        }\n                        else {\n                            z = 0;\n                        }\n                        flatCoordinates.push(z);\n                    }\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) {\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    }\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            }\n            else if (line.charAt(0) == 'H') {\n                m = HFDTE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                }\n                else {\n                    m = H_RECORD_RE.exec(line);\n                    if (m) {\n                        properties[m[1]] = m[2].trim();\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) {\n            return null;\n        }\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n        var lineString = new LineString(flatCoordinates, layout);\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n        feature.setProperties(properties, true);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        if (feature) {\n            return [feature];\n        }\n        else {\n            return [];\n        }\n    };\n    return IGC;\n}(TextFeature));\nexport default IGC;\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport { extend } from '../array.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { get as getProjection } from '../proj.js';\nimport { transform2D } from '../geom/flat/transform.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {GeometryType} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {GeometryType}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ = this.type_ === GeometryType.POINT ?\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {GeometryType} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     * The SRS of the source and destination are expected to be the same.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n     */\n    RenderFeature.prototype.transform = function (source, destination) {\n        source = getProjection(source);\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    };\n    return RenderFeature;\n}());\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\n    RenderFeature.prototype.getEndss = function () {\n        return this.ends_;\n    };\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\nimport { get } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) { // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var id = rawFeature.id;\n        var values = rawFeature.properties;\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection, options.featureProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i));\n                        prevEndIndex = i;\n                    }\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                                    null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: []\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value = tag === 1 ? pbf.readString() :\n                tag === 2 ? pbf.readFloat() :\n                    tag === 3 ? pbf.readDouble() :\n                        tag === 4 ? pbf.readVarint64() :\n                            tag === 5 ? pbf.readVarint() :\n                                tag === 6 ? pbf.readSVarint() :\n                                    tag === 7 ? pbf.readBoolean() : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {}\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {GeometryType} */\n    var geometryType;\n    if (type === 1) {\n        geometryType = numEnds === 1 ?\n            GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType = numEnds === 1 ?\n            GeometryType.LINE_STRING :\n            GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n});\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /** @class */ (function (_super) {\n    __extends(OSMXML, _super);\n    function OSMXML() {\n        var _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = this.getReadOptions(node, opt_options);\n        if (node.localName == 'osm') {\n            var state = pushParseAndPop({\n                nodes: {},\n                ways: [],\n                features: []\n            }, PARSERS, node, [options]);\n            // parse nodes in ways\n            for (var j = 0; j < state.ways.length; j++) {\n                var values = /** @type {Object} */ (state.ways[j]);\n                /** @type {Array<number>} */\n                var flatCoordinates = [];\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n                    var point = state.nodes[values.ndrefs[i]];\n                    extend(flatCoordinates, point);\n                }\n                var geometry = void 0;\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n                    // closed way\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n                }\n                else {\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n                }\n                transformGeometryWithOptions(geometry, false, options);\n                var feature = new Feature(geometry);\n                feature.setId(values.id);\n                feature.setProperties(values.tags, true);\n                state.features.push(feature);\n            }\n            if (state.features) {\n                return state.features;\n            }\n        }\n        return [];\n    };\n    return OSMXML;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'tag': readTag\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var id = node.getAttribute('id');\n    /** @type {import(\"../coordinate.js\").Coordinate} */\n    var coordinates = [\n        parseFloat(node.getAttribute('lon')),\n        parseFloat(node.getAttribute('lat'))\n    ];\n    state.nodes[id] = coordinates;\n    var values = pushParseAndPop({\n        tags: {}\n    }, NODE_PARSERS, node, objectStack);\n    if (!isEmpty(values.tags)) {\n        var geometry = new Point(coordinates);\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n    var id = node.getAttribute('id');\n    var values = pushParseAndPop({\n        id: id,\n        ndrefs: [],\n        tags: {}\n    }, WAY_PARSERS, node, objectStack);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    state.ways.push(values);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.ndrefs.push(node.getAttribute('ref'));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\nexport default OSMXML;\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {GeometryLayout}\n         */\n        _this.geometryLayout_ = options.geometryLayout ?\n            options.geometryLayout : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry = /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /** @class */ (function (_super) {\n    __extends(TopoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function TopoJSON(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.layerName_ = options.layerName;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        if (object.type == 'Topology') {\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n            var transform = void 0, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            var arcs = topoJSONTopology['arcs'];\n            if (transform) {\n                transformArcs(arcs, scale, translate);\n            }\n            /** @type {Array<Feature>} */\n            var features = [];\n            var topoJSONFeatures = topoJSONTopology['objects'];\n            var property = this.layerName_;\n            var feature = void 0;\n            for (var objectName in topoJSONFeatures) {\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n                    continue;\n                }\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n                else {\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\n        return this.dataProjection;\n    };\n    return TopoJSON;\n}(JSONFeature));\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n    'Point': readPointGeometry,\n    'LineString': readLineStringGeometry,\n    'Polygon': readPolygonGeometry,\n    'MultiPoint': readMultiPointGeometry,\n    'MultiLineString': readMultiLineStringGeometry,\n    'MultiPolygon': readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n    var coordinates = [];\n    var index, arc;\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\n        index = indices[i];\n        if (i > 0) {\n            // splicing together arcs, discard last point\n            coordinates.pop();\n        }\n        if (index >= 0) {\n            // forward arc\n            arc = arcs[index];\n        }\n        else {\n            // reverse arc\n            arc = arcs[~index].slice().reverse();\n        }\n        coordinates.push.apply(coordinates, arc);\n    }\n    // provide fresh copies of coordinate arrays\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n        coordinates[j] = coordinates[j].slice();\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        transformVertex(coordinates, scale, translate);\n    }\n    return new Point(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            transformVertex(coordinates[i], scale, translate);\n        }\n    }\n    return new MultiPoint(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n    var coordinates = concatenateArcs(object['arcs'], arcs);\n    return new LineString(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new MultiLineString(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new Polygon(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        // for each polygon\n        var polyArray = object['arcs'][i];\n        var ringCoords = [];\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n            // for each ring\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n        }\n        coordinates[i] = ringCoords;\n    }\n    return new MultiPolygon(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n    var geometries = collection['geometries'];\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\n    }\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n    var geometry;\n    var type = object.type;\n    var geometryReader = GEOMETRY_READERS[type];\n    if ((type === 'Point') || (type === 'MultiPoint')) {\n        geometry = geometryReader(object, scale, translate);\n    }\n    else {\n        geometry = geometryReader(object, arcs);\n    }\n    var feature = new Feature();\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n    if (object.id !== undefined) {\n        feature.setId(object.id);\n    }\n    var properties = object.properties;\n    if (property) {\n        if (!properties) {\n            properties = {};\n        }\n        properties[property] = name;\n    }\n    if (properties) {\n        feature.setProperties(properties, true);\n    }\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\n        transformArc(arcs[i], scale, translate);\n    }\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\n        var vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nexport default TopoJSON;\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     */\n    function Filter(tagName) {\n        /**\n         * @private\n         * @type {!string}\n         */\n        this.tagName_ = tagName;\n    }\n    /**\n     * The XML tag name for a filter.\n     * @returns {!string} Name.\n     */\n    Filter.prototype.getTagName = function () {\n        return this.tagName_;\n    };\n    return Filter;\n}());\nexport default Filter;\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /** @class */ (function (_super) {\n    __extends(LogicalNary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n     */\n    function LogicalNary(tagName, conditions) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {Array<import(\"./Filter.js\").default>}\n         */\n        _this.conditions = conditions;\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n        return _this;\n    }\n    return LogicalNary;\n}(Filter));\nexport default LogicalNary;\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /** @class */ (function (_super) {\n    __extends(And, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function And(conditions) {\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n    }\n    return And;\n}(LogicalNary));\nexport default And;\n//# sourceMappingURL=And.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /** @class */ (function (_super) {\n    __extends(Bbox, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n     * on geometries when this is not provided.\n     */\n    function Bbox(geometryName, extent, opt_srsName) {\n        var _this = _super.call(this, 'BBOX') || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName;\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Bbox;\n}(Filter));\nexport default Bbox;\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /** @class */ (function (_super) {\n    __extends(Spatial, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName || 'the_geom';\n        /**\n         * @type {import(\"../../geom/Geometry.js\").default}\n         */\n        _this.geometry = geometry;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Spatial;\n}(Filter));\nexport default Spatial;\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /** @class */ (function (_super) {\n    __extends(Contains, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Contains(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n    }\n    return Contains;\n}(Spatial));\nexport default Contains;\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /** @class */ (function (_super) {\n    __extends(Comparison, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function Comparison(tagName, propertyName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.propertyName = propertyName;\n        return _this;\n    }\n    return Comparison;\n}(Filter));\nexport default Comparison;\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /** @class */ (function (_super) {\n    __extends(During, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} begin The begin date in ISO-8601 format.\n     * @param {!string} end The end date in ISO-8601 format.\n     */\n    function During(propertyName, begin, end) {\n        var _this = _super.call(this, 'During', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.begin = begin;\n        /**\n         * @type {!string}\n         */\n        _this.end = end;\n        return _this;\n    }\n    return During;\n}(Comparison));\nexport default During;\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /** @class */ (function (_super) {\n    __extends(ComparisonBinary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n        var _this = _super.call(this, tagName, propertyName) || this;\n        /**\n         * @type {!(string|number)}\n         */\n        _this.expression = expression;\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return ComparisonBinary;\n}(Comparison));\nexport default ComparisonBinary;\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /** @class */ (function (_super) {\n    __extends(EqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function EqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return EqualTo;\n}(ComparisonBinary));\nexport default EqualTo;\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    __extends(GreaterThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\n    }\n    return GreaterThan;\n}(ComparisonBinary));\nexport default GreaterThan;\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(GreaterThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\n    }\n    return GreaterThanOrEqualTo;\n}(ComparisonBinary));\nexport default GreaterThanOrEqualTo;\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /** @class */ (function (_super) {\n    __extends(Intersects, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Intersects(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\n    }\n    return Intersects;\n}(Spatial));\nexport default Intersects;\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /** @class */ (function (_super) {\n    __extends(IsBetween, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} lowerBoundary The lower bound of the range.\n     * @param {!number} upperBoundary The upper bound of the range.\n     */\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n        /**\n         * @type {!number}\n         */\n        _this.lowerBoundary = lowerBoundary;\n        /**\n         * @type {!number}\n         */\n        _this.upperBoundary = upperBoundary;\n        return _this;\n    }\n    return IsBetween;\n}(Comparison));\nexport default IsBetween;\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string=} opt_singleChar pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /** @class */ (function (_super) {\n    __extends(IsNull, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function IsNull(propertyName) {\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\n    }\n    return IsNull;\n}(Comparison));\nexport default IsNull;\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /** @class */ (function (_super) {\n    __extends(LessThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\n    }\n    return LessThan;\n}(ComparisonBinary));\nexport default LessThan;\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(LessThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\n    }\n    return LessThanOrEqualTo;\n}(ComparisonBinary));\nexport default LessThanOrEqualTo;\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /** @class */ (function (_super) {\n    __extends(Not, _super);\n    /**\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\n     */\n    function Not(condition) {\n        var _this = _super.call(this, 'Not') || this;\n        /**\n         * @type {!import(\"./Filter.js\").default}\n         */\n        _this.condition = condition;\n        return _this;\n    }\n    return Not;\n}(Filter));\nexport default Not;\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /** @class */ (function (_super) {\n    __extends(NotEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return NotEqualTo;\n}(ComparisonBinary));\nexport default NotEqualTo;\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /** @class */ (function (_super) {\n    __extends(Or, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function Or(conditions) {\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n    }\n    return Or;\n}(LogicalNary));\nexport default Or;\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /** @class */ (function (_super) {\n    __extends(Within, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Within(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\n    }\n    return Within;\n}(Spatial));\nexport default Within;\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(And, params));\n}\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(Or, params));\n}\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n    return new Not(condition);\n}\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n    return new Bbox(geometryName, extent, opt_srsName);\n}\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n    return new Contains(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n    return new Intersects(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n    return new Within(geometryName, geometry, opt_srsName);\n}\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n    return new EqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n    return new LessThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n    return new LessThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n    return new GreaterThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n    return new GreaterThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n    return new IsNull(propertyName);\n}\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n    return new During(propertyName, begin, end);\n}\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport { assert } from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative)\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat ?\n            options.gmlFormat : new GML3();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation ?\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var node = createElementNS(WFSNS, 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', '1.1.0');\n        var filter;\n        if (options) {\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n            if (options.outputFormat) {\n                node.setAttribute('outputFormat', options.outputFormat);\n            }\n            if (options.maxFeatures !== undefined) {\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\n            }\n            if (options.resultType) {\n                node.setAttribute('resultType', options.resultType);\n            }\n            if (options.startIndex !== undefined) {\n                node.setAttribute('startIndex', String(options.startIndex));\n            }\n            if (options.count !== undefined) {\n                node.setAttribute('count', String(options.count));\n            }\n            if (options.viewParams !== undefined) {\n                node.setAttribute('viewParams ', options.viewParams);\n            }\n            filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                var bbox = bboxFilter(\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n                if (filter) {\n                    // if bbox and filter are both set, combine the two into a single filter\n                    filter = andFilter(filter, bbox);\n                }\n                else {\n                    filter = bbox;\n                }\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'geometryName': options.geometryName,\n            'filter': filter,\n            'propertyNames': options.propertyNames ? options.propertyNames : []\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        return node;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var node = createElementNS(WFSNS, 'Transaction');\n        var version = options.version ? options.version : DEFAULT_VERSION;\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var obj;\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        var schemaLocation = SCHEMA_LOCATIONS[version];\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n        if (inserts) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\n        }\n        if (updates) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\n        }\n        if (deletes) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\n        }\n        if (options.nativeElements) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\n        }\n        return node;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild &&\n            node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 &&\n                        n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        })\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var filter = createElementNS(OGCNS, 'Filter');\n    var child = createElementNS(OGCNS, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var name = createElementNS(WFSNS, 'Name');\n    var context = objectStack[objectStack.length - 1];\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(WFSNS, 'Value');\n        node.appendChild(value);\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery)\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeContainsFilter),\n        'Intersects': makeChildAppender(writeIntersectsFilter),\n        'Within': makeChildAppender(writeWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    node.setAttribute('typeName', typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(OGCNS, 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var valueReference = createElementNS(FESNS, 'ValueReference');\n    writeStringTextNode(valueReference, filter.propertyName);\n    node.appendChild(valueReference);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.pattern);\n}\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n    var property = createElementNS(OGCNS, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n    writeOgcExpression('PropertyName', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n    writeOgcExpression('Literal', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    writeFilterCondition(child, filter, []);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nexport default WFS;\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n    'POINT': Point,\n    'LINESTRING': LineString,\n    'POLYGON': Polygon,\n    'MULTIPOINT': MultiPoint,\n    'MULTILINESTRING': MultiLineString,\n    'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n    TEXT: 1,\n    LEFT_PAREN: 2,\n    RIGHT_PAREN: 3,\n    NUMBER: 4,\n    COMMA: 5,\n    EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = /** @class */ (function () {\n    /**\n     * @param {string} wkt WKT string.\n     */\n    function Lexer(wkt) {\n        /**\n         * @type {string}\n         */\n        this.wkt = wkt;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.index_ = -1;\n    }\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is alphabetic.\n     * @private\n     */\n    Lexer.prototype.isAlpha_ = function (c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n    };\n    /**\n     * @param {string} c Character.\n     * @param {boolean=} opt_decimal Whether the string number\n     *     contains a dot, i.e. is a decimal number.\n     * @return {boolean} Whether the character is numeric.\n     * @private\n     */\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\n    };\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is whitespace.\n     * @private\n     */\n    Lexer.prototype.isWhiteSpace_ = function (c) {\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n    };\n    /**\n     * @return {string} Next string character.\n     * @private\n     */\n    Lexer.prototype.nextChar_ = function () {\n        return this.wkt.charAt(++this.index_);\n    };\n    /**\n     * Fetch and return the next token.\n     * @return {!Token} Next string token.\n     */\n    Lexer.prototype.nextToken = function () {\n        var c = this.nextChar_();\n        var position = this.index_;\n        /** @type {number|string} */\n        var value = c;\n        var type;\n        if (c == '(') {\n            type = TokenType.LEFT_PAREN;\n        }\n        else if (c == ',') {\n            type = TokenType.COMMA;\n        }\n        else if (c == ')') {\n            type = TokenType.RIGHT_PAREN;\n        }\n        else if (this.isNumeric_(c) || c == '-') {\n            type = TokenType.NUMBER;\n            value = this.readNumber_();\n        }\n        else if (this.isAlpha_(c)) {\n            type = TokenType.TEXT;\n            value = this.readText_();\n        }\n        else if (this.isWhiteSpace_(c)) {\n            return this.nextToken();\n        }\n        else if (c === '') {\n            type = TokenType.EOF;\n        }\n        else {\n            throw new Error('Unexpected character: ' + c);\n        }\n        return { position: position, value: value, type: type };\n    };\n    /**\n     * @return {number} Numeric token value.\n     * @private\n     */\n    Lexer.prototype.readNumber_ = function () {\n        var c;\n        var index = this.index_;\n        var decimal = false;\n        var scientificNotation = false;\n        do {\n            if (c == '.') {\n                decimal = true;\n            }\n            else if (c == 'e' || c == 'E') {\n                scientificNotation = true;\n            }\n            c = this.nextChar_();\n        } while (this.isNumeric_(c, decimal) ||\n            // if we haven't detected a scientific number before, 'e' or 'E'\n            // hint that we should continue to read\n            !scientificNotation && (c == 'e' || c == 'E') ||\n            // once we know that we have a scientific number, both '-' and '+'\n            // are allowed\n            scientificNotation && (c == '-' || c == '+'));\n        return parseFloat(this.wkt.substring(index, this.index_--));\n    };\n    /**\n     * @return {string} String token value.\n     * @private\n     */\n    Lexer.prototype.readText_ = function () {\n        var c;\n        var index = this.index_;\n        do {\n            c = this.nextChar_();\n        } while (this.isAlpha_(c));\n        return this.wkt.substring(index, this.index_--).toUpperCase();\n    };\n    return Lexer;\n}());\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param {Lexer} lexer The lexer.\n     */\n    function Parser(lexer) {\n        /**\n         * @type {Lexer}\n         * @private\n         */\n        this.lexer_ = lexer;\n        /**\n         * @type {Token}\n         * @private\n         */\n        this.token_;\n        /**\n         * @type {GeometryLayout}\n         * @private\n         */\n        this.layout_ = GeometryLayout.XY;\n    }\n    /**\n     * Fetch the next token form the lexer and replace the active token.\n     * @private\n     */\n    Parser.prototype.consume_ = function () {\n        this.token_ = this.lexer_.nextToken();\n    };\n    /**\n     * Tests if the given type matches the type of the current token.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.isTokenType = function (type) {\n        var isMatch = this.token_.type == type;\n        return isMatch;\n    };\n    /**\n     * If the given type matches the current token, consume it.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.match = function (type) {\n        var isMatch = this.isTokenType(type);\n        if (isMatch) {\n            this.consume_();\n        }\n        return isMatch;\n    };\n    /**\n     * Try to parse the tokens provided by the lexer.\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\n     */\n    Parser.prototype.parse = function () {\n        this.consume_();\n        var geometry = this.parseGeometry_();\n        return geometry;\n    };\n    /**\n     * Try to parse the dimensional info.\n     * @return {GeometryLayout} The layout.\n     * @private\n     */\n    Parser.prototype.parseGeometryLayout_ = function () {\n        var layout = GeometryLayout.XY;\n        var dimToken = this.token_;\n        if (this.isTokenType(TokenType.TEXT)) {\n            var dimInfo = dimToken.value;\n            if (dimInfo === Z) {\n                layout = GeometryLayout.XYZ;\n            }\n            else if (dimInfo === M) {\n                layout = GeometryLayout.XYM;\n            }\n            else if (dimInfo === ZM) {\n                layout = GeometryLayout.XYZM;\n            }\n            if (layout !== GeometryLayout.XY) {\n                this.consume_();\n            }\n        }\n        return layout;\n    };\n    /**\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n     * @private\n     */\n    Parser.prototype.parseGeometryCollectionText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var geometries = [];\n            do {\n                geometries.push(this.parseGeometry_());\n            } while (this.match(TokenType.COMMA));\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return geometries;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {Array<number>} All values in a point.\n     * @private\n     */\n    Parser.prototype.parsePointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePoint_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return null;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a linestring.\n     * @private\n     */\n    Parser.prototype.parseLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePointList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n     * @private\n     */\n    Parser.prototype.parsePolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a multipoint.\n     * @private\n     */\n    Parser.prototype.parseMultiPointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = void 0;\n            if (this.token_.type == TokenType.LEFT_PAREN) {\n                coordinates = this.parsePointTextList_();\n            }\n            else {\n                coordinates = this.parsePointList_();\n            }\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\n     *                                          in a multilinestring.\n     * @private\n     */\n    Parser.prototype.parseMultiLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n     * @private\n     */\n    Parser.prototype.parseMultiPolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePolygonTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<number>} A point.\n     * @private\n     */\n    Parser.prototype.parsePoint_ = function () {\n        var coordinates = [];\n        var dimensions = this.layout_.length;\n        for (var i = 0; i < dimensions; ++i) {\n            var token = this.token_;\n            if (this.match(TokenType.NUMBER)) {\n                coordinates.push(/** @type {number} */ (token.value));\n            }\n            else {\n                break;\n            }\n        }\n        if (coordinates.length == dimensions) {\n            return coordinates;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointList_ = function () {\n        var coordinates = [this.parsePoint_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePoint_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointTextList_ = function () {\n        var coordinates = [this.parsePointText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePointText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parseLineStringTextList_ = function () {\n        var coordinates = [this.parseLineStringText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parseLineStringText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePolygonTextList_ = function () {\n        var coordinates = [this.parsePolygonText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePolygonText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {boolean} Whether the token implies an empty geometry.\n     * @private\n     */\n    Parser.prototype.isEmptyGeometry_ = function () {\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\n            this.token_.value == EMPTY;\n        if (isEmpty) {\n            this.consume_();\n        }\n        return isEmpty;\n    };\n    /**\n     * Create an error message for an unexpected token error.\n     * @return {string} Error message.\n     * @private\n     */\n    Parser.prototype.formatErrorMessage_ = function () {\n        return 'Unexpected `' + this.token_.value + '` at position ' +\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\n    };\n    /**\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n     * @private\n     */\n    Parser.prototype.parseGeometry_ = function () {\n        var token = this.token_;\n        if (this.match(TokenType.TEXT)) {\n            var geomType = token.value;\n            this.layout_ = this.parseGeometryLayout_();\n            if (geomType == 'GEOMETRYCOLLECTION') {\n                var geometries = this.parseGeometryCollectionText_();\n                return new GeometryCollection(geometries);\n            }\n            else {\n                var ctor = GeometryConstructor[geomType];\n                if (!ctor) {\n                    throw new Error('Invalid geometry type: ' + geomType);\n                }\n                var coordinates = void 0;\n                switch (geomType) {\n                    case 'POINT': {\n                        coordinates = this.parsePointText_();\n                        break;\n                    }\n                    case 'LINESTRING': {\n                        coordinates = this.parseLineStringText_();\n                        break;\n                    }\n                    case 'POLYGON': {\n                        coordinates = this.parsePolygonText_();\n                        break;\n                    }\n                    case 'MULTIPOINT': {\n                        coordinates = this.parseMultiPointText_();\n                        break;\n                    }\n                    case 'MULTILINESTRING': {\n                        coordinates = this.parseMultiLineStringText_();\n                        break;\n                    }\n                    case 'MULTIPOLYGON': {\n                        coordinates = this.parseMultiPolygonText_();\n                        break;\n                    }\n                    default: {\n                        throw new Error('Invalid geometry type: ' + geomType);\n                    }\n                }\n                if (!coordinates) {\n                    if (ctor === GeometryConstructor['POINT']) {\n                        coordinates = [NaN, NaN];\n                    }\n                    else {\n                        coordinates = [];\n                    }\n                }\n                return new ctor(coordinates, this.layout_);\n            }\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    return Parser;\n}());\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /** @class */ (function (_super) {\n    __extends(WKT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WKT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * Split GeometryCollection into multiple features.\n         * @type {boolean}\n         * @private\n         */\n        _this.splitCollection_ = options.splitCollection !== undefined ?\n            options.splitCollection : false;\n        return _this;\n    }\n    /**\n     * Parse a WKT string.\n     * @param {string} wkt WKT string.\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\n     *     The geometry created.\n     * @private\n     */\n    WKT.prototype.parse_ = function (wkt) {\n        var lexer = new Lexer(wkt);\n        var parser = new Parser(lexer);\n        return parser.parse();\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\n        var geom = this.readGeometryFromText(text, opt_options);\n        if (geom) {\n            var feature = new Feature();\n            feature.setGeometry(geom);\n            return feature;\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n        var geometries = [];\n        var geometry = this.readGeometryFromText(text, opt_options);\n        if (this.splitCollection_ &&\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            geometries = ( /** @type {GeometryCollection} */(geometry))\n                .getGeometriesArray();\n        }\n        else {\n            geometries = [geometry];\n        }\n        var features = [];\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var feature = new Feature();\n            feature.setGeometry(geometries[i]);\n            features.push(feature);\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\n        var geometry = this.parse_(text);\n        if (geometry) {\n            return transformGeometryWithOptions(geometry, false, opt_options);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        return '';\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\n        if (features.length == 1) {\n            return this.writeFeatureText(features[0], opt_options);\n        }\n        var geometries = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            geometries.push(features[i].getGeometry());\n        }\n        var collection = new GeometryCollection(geometries);\n        return this.writeGeometryText(collection, opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n        return encode(transformGeometryWithOptions(geometry, true, opt_options));\n    };\n    return WKT;\n}(TextFeature));\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    if (coordinates.length === 0) {\n        return '';\n    }\n    return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n    var array = [];\n    var components = geom.getPoints();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePointGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n    var array = [];\n    var geoms = geom.getGeometries();\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\n        array.push(encode(geoms[i]));\n    }\n    return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    var array = [];\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        array.push(coordinates[i].join(' '));\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n    var array = [];\n    var components = geom.getLineStrings();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n    var array = [];\n    var rings = geom.getLinearRings();\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n    var array = [];\n    var components = geom.getPolygons();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n    var layout = geom.getLayout();\n    var dimInfo = '';\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n        dimInfo += Z;\n    }\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n        dimInfo += M;\n    }\n    return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n    'Point': encodePointGeometry,\n    'LineString': encodeLineStringGeometry,\n    'Polygon': encodePolygonGeometry,\n    'MultiPoint': encodeMultiPointGeometry,\n    'MultiLineString': encodeMultiLineStringGeometry,\n    'MultiPolygon': encodeMultiPolygonGeometry,\n    'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n    var type = geom.getType();\n    var geometryEncoder = GeometryEncoder[type];\n    var enc = geometryEncoder(geom);\n    type = type.toUpperCase();\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n        if (dimInfo.length > 0) {\n            type += ' ' + dimInfo;\n        }\n    }\n    if (enc.length === 0) {\n        return type + ' ' + EMPTY;\n    }\n    return type + '(' + enc + ')';\n}\nexport default WKT;\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @abstract\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) { };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSCapabilities\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wms'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n});\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /** @class */ (function (_super) {\n    __extends(WMSCapabilities, _super);\n    function WMSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {string|undefined}\n         */\n        _this.version = undefined;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromNode = function (node) {\n        this.version = node.getAttribute('version').trim();\n        var wmsCapabilityObject = pushParseAndPop({\n            'version': this.version\n        }, PARSERS, node, []);\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\n    };\n    return WMSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var extent = [\n        readDecimalString(node.getAttribute('minx')),\n        readDecimalString(node.getAttribute('miny')),\n        readDecimalString(node.getAttribute('maxx')),\n        readDecimalString(node.getAttribute('maxy'))\n    ];\n    var resolutions = [\n        readDecimalString(node.getAttribute('resx')),\n        readDecimalString(node.getAttribute('resy'))\n    ];\n    return {\n        'crs': node.getAttribute('CRS'),\n        'extent': extent,\n        'res': resolutions\n    };\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\n    if (!geographicBoundingBox) {\n        return undefined;\n    }\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n        return undefined;\n    }\n    return [\n        westBoundLongitude, southBoundLatitude,\n        eastBoundLongitude, northBoundLatitude\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n    if (!layerObject) {\n        return undefined;\n    }\n    var queryable = readBooleanString(node.getAttribute('queryable'));\n    if (queryable === undefined) {\n        queryable = parentLayerObject['queryable'];\n    }\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n    if (cascaded === undefined) {\n        cascaded = parentLayerObject['cascaded'];\n    }\n    layerObject['cascaded'] = cascaded;\n    var opaque = readBooleanString(node.getAttribute('opaque'));\n    if (opaque === undefined) {\n        opaque = parentLayerObject['opaque'];\n    }\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n    if (noSubsets === undefined) {\n        noSubsets = parentLayerObject['noSubsets'];\n    }\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n    if (!fixedWidth) {\n        fixedWidth = parentLayerObject['fixedWidth'];\n    }\n    layerObject['fixedWidth'] = fixedWidth;\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n    if (!fixedHeight) {\n        fixedHeight = parentLayerObject['fixedHeight'];\n    }\n    layerObject['fixedHeight'] = fixedHeight;\n    // See 7.2.4.8\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n    addKeys.forEach(function (key) {\n        if (key in parentLayerObject) {\n            var childValue = layerObject[key] || [];\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\n        }\n    });\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n    replaceKeys.forEach(function (key) {\n        if (!(key in layerObject)) {\n            var parentValue = parentLayerObject[key];\n            layerObject[key] = parentValue;\n        }\n    });\n    return layerObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n    var dimensionObject = {\n        'name': node.getAttribute('name'),\n        'units': node.getAttribute('units'),\n        'unitSymbol': node.getAttribute('unitSymbol'),\n        'default': node.getAttribute('default'),\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n        'current': readBooleanString(node.getAttribute('current')),\n        'values': readString(node)\n    };\n    return dimensionObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n    if (formatOnlineresource) {\n        var size = [\n            readNonNegativeIntegerString(node.getAttribute('width')),\n            readNonNegativeIntegerString(node.getAttribute('height'))\n        ];\n        formatOnlineresource['size'] = size;\n        return formatOnlineresource;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n    var authorityObject = readFormatOnlineresource(node, objectStack);\n    if (authorityObject) {\n        authorityObject['name'] = node.getAttribute('name');\n        return authorityObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n    var metadataObject = readFormatOnlineresource(node, objectStack);\n    if (metadataObject) {\n        metadataObject['type'] = node.getAttribute('type');\n        return metadataObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\nexport default WMSCapabilities;\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport { extend, includes } from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName +\n                    featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString } from './xsd.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version').trim();\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastMouseMovePixel_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\n        this.updateHTML_(this.lastMouseMovePixel_);\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n        this.lastMouseMovePixel_ = null;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixel(pixel);\n            if (coordinate) {\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen, listenOnce, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\n * Layers for the overview map (mandatory).\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */ (function (_super) {\n    __extends(OverviewMap, _super);\n    /**\n     * @param {Options=} opt_options OverviewMap options.\n     */\n    function OverviewMap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : '\\u00BB';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.ovmapDiv_ = document.createElement('div');\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\n        /**\n         * @type {import(\"../Map.js\").default}\n         * @private\n         */\n        _this.ovmap_ = new Map({\n            controls: new Collection(),\n            interactions: new Collection(),\n            view: options.view\n        });\n        var ovmap = _this.ovmap_;\n        if (options.layers) {\n            /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n            /**\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             */\n            (function (layer) {\n                ovmap.addLayer(layer);\n            }).bind(_this));\n        }\n        var box = document.createElement('div');\n        box.className = 'ol-overviewmap-box';\n        box.style.boxSizing = 'border-box';\n        /**\n         * @type {import(\"../Overlay.js\").default}\n         * @private\n         */\n        _this.boxOverlay_ = new Overlay({\n            position: [0, 0],\n            positioning: OverlayPositioning.BOTTOM_LEFT,\n            element: box\n        });\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ovmapDiv_);\n        element.appendChild(button);\n        /* Interactive map */\n        var scope = _this;\n        var overlay = _this.boxOverlay_;\n        var overlayBox = _this.boxOverlay_.getElement();\n        /* Functions definition */\n        var computeDesiredMousePosition = function (mousePosition) {\n            return {\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n            };\n        };\n        var move = function (event) {\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n            overlay.setPosition(coordinates);\n        };\n        var endMoving = function (event) {\n            var coordinates = ovmap.getEventCoordinate(event);\n            scope.getMap().getView().setCenter(coordinates);\n            window.removeEventListener('mousemove', move);\n            window.removeEventListener('mouseup', endMoving);\n        };\n        /* Binding */\n        overlayBox.addEventListener('mousedown', function () {\n            window.addEventListener('mousemove', move);\n            window.addEventListener('mouseup', endMoving);\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    OverviewMap.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (map === oldMap) {\n            return;\n        }\n        if (oldMap) {\n            var oldView = oldMap.getView();\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            this.ovmap_.setTarget(null);\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.ovmap_.setTarget(this.ovmapDiv_);\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n            var view = map.getView();\n            if (view) {\n                this.bindView_(view);\n                if (view.isDef()) {\n                    this.ovmap_.updateSize();\n                    this.resetExtent_();\n                }\n            }\n        }\n    };\n    /**\n     * Handle map property changes.  This only deals with changes to the map's view.\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n     * @private\n     */\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n        if (event.key === MapProperty.VIEW) {\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            var newView = this.getMap().getView();\n            this.bindView_(newView);\n        }\n    };\n    /**\n     * Register listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.bindView_ = function (view) {\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Unregister listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.unbindView_ = function (view) {\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Handle rotation changes to the main map.\n     * TODO: This should rotate the extent rectrangle instead of the\n     * overview map's view.\n     * @private\n     */\n    OverviewMap.prototype.handleRotationChanged_ = function () {\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    };\n    /**\n     * Reset the overview map extent if the box size (width or\n     * height) is less than the size of the overview map size times minRatio\n     * or is greater than the size of the overview size times maxRatio.\n     *\n     * If the map extent was not reset, the box size can fits in the defined\n     * ratio sizes. This method then checks if is contained inside the overview\n     * map current extent. If not, recenter the overview map to the current\n     * main map center location.\n     * @private\n     */\n    OverviewMap.prototype.validateExtent_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n        var ovview = ovmap.getView();\n        var ovextent = ovview.calculateExtent(ovmapSize);\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n        var ovmapWidth = ovmapSize[0];\n        var ovmapHeight = ovmapSize[1];\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\n            boxHeight < ovmapHeight * MIN_RATIO ||\n            boxWidth > ovmapWidth * MAX_RATIO ||\n            boxHeight > ovmapHeight * MAX_RATIO) {\n            this.resetExtent_();\n        }\n        else if (!containsExtent(ovextent, extent)) {\n            this.recenter_();\n        }\n    };\n    /**\n     * Reset the overview map extent to half calculated min and max ratio times\n     * the extent of the main map.\n     * @private\n     */\n    OverviewMap.prototype.resetExtent_ = function () {\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n            return;\n        }\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovview = ovmap.getView();\n        // get how many times the current map overview could hold different\n        // box sizes using the min and max ratio, pick the step in the middle used\n        // to calculate the extent from the main map to set it to the overview map,\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n        scaleFromCenter(extent, ratio);\n        ovview.fit(extent);\n    };\n    /**\n     * Set the center of the overview map to the map center without changing its\n     * resolution.\n     * @private\n     */\n    OverviewMap.prototype.recenter_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        ovview.setCenter(view.getCenter());\n    };\n    /**\n     * Update the box using the main map extent\n     * @private\n     */\n    OverviewMap.prototype.updateBox_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        var rotation = view.getRotation();\n        var overlay = this.boxOverlay_;\n        var box = this.boxOverlay_.getElement();\n        var extent = view.calculateExtent(mapSize);\n        var ovresolution = ovview.getResolution();\n        var bottomLeft = getBottomLeft(extent);\n        var topRight = getTopRight(extent);\n        // set position using bottom left coordinates\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n        overlay.setPosition(rotateBottomLeft);\n        // set box size calculated from map extent size and overview map resolution\n        if (box) {\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n     * @private\n     */\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\n        var coordinateRotate;\n        var map = this.getMap();\n        var view = map.getView();\n        var currentCenter = view.getCenter();\n        if (currentCenter) {\n            coordinateRotate = [\n                coordinate[0] - currentCenter[0],\n                coordinate[1] - currentCenter[1]\n            ];\n            rotateCoordinate(coordinateRotate, rotation);\n            addCoordinate(coordinateRotate, currentCenter);\n        }\n        return coordinateRotate;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    OverviewMap.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    OverviewMap.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        // manage overview map if it had not been rendered before and control\n        // is expanded\n        var ovmap = this.ovmap_;\n        if (!this.collapsed_ && !ovmap.isRendered()) {\n            ovmap.updateSize();\n            this.resetExtent_();\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n                this.updateBox_();\n            }, this);\n        }\n    };\n    /**\n     * Return `true` if the overview map is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the overview map should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the overview map according to the passed parameter. Will\n     * not do anything if the overview map isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Determine if the overview map is collapsed.\n     * @return {boolean} The overview map is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Return the overview map.\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\n     * @api\n     */\n    OverviewMap.prototype.getOverviewMap = function () {\n        return this.ovmap_;\n    };\n    return OverviewMap;\n}(Control));\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n}\nexport default OverviewMap;\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport { getChangeEventType } from '../Object.js';\nimport { assert } from '../asserts.js';\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { listen } from '../events.js';\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined ? options.className :\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ?\n            ProjUnits.DEGREES :\n            ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var nominalCount = this.minWidth_ * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= this.minWidth_) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' + stepWidth + 'px;' +\n                'background-color: ' + backgroundColor + ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n                    this.createStepText(i, width, false, scale, suffix) :\n                    '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                { /*render text at the end */ }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText = '<div ' +\n                'class=\"ol-scale-text\" ' +\n                'style=\"width: ' + width + 'px;\">' +\n                mapScale +\n                '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return '<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' + position + ';' +\n            'top: ' + top + 'px;\"' +\n            '></div>';\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n        return '<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' + margin + 'px;' +\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n            'min-width: ' + minWidth + 'px;' +\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n            '>' +\n            lengthString +\n            '</div>';\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = this.getMap().getView().getResolution();\n        var dpi = 25.4 / 0.28;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    return ScaleLine;\n}(Control));\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.viewState_ = null;\n    }\n    else {\n        this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n}\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomSlider\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { clamp } from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options=} opt_options Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render\n        }) || this;\n        /**\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\n          * @private\n          */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        /**\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.dragger_ = new PointerEventHandler(containerElement);\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\n        listen(thumbElement, EventType.CLICK, stopPropagation);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.disposeInternal = function () {\n        this.dragger_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerSize = {\n            width: container.offsetWidth, height: container.offsetHeight\n        };\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var computedStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(computedStyle['marginRight']) +\n            parseFloat(computedStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(computedStyle['marginTop']) +\n            parseFloat(computedStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerSize.width > containerSize.height) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerSize.width - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerSize.height - thumbHeight;\n        }\n        this.sliderInitialized_ = true;\n    };\n    /**\n     * @param {MouseEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animate({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    return ZoomSlider;\n}(Control));\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n    if (!mapEvent.frameState) {\n        return;\n    }\n    if (!this.sliderInitialized_) {\n        this.initSlider_();\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n}\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n        view.fit(extent);\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol$getUid} from './ol';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\nimport Projection from './Projection.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}