{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/rbush.min.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/render.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/format/IIIFInfo.js","webpack://ol/./build/ol/source/IIIF.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/worker/webgl.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","LN2","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","b","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","j","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","index","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","events_unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","tmp","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","closestSquaredDistanceXY","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","k","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","projections2","forwardTransform","inverseTransform","projections_cache","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","ol_transform_scale","makeScale","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","join","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","ua","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","msPointerEnabled","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","resolutions","constrainResolution","capped","z","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","hasOverlay","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","toSize","PluggableMap_extends","cache","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","labelCache_","labelCacheListenerKey_","overlays_","overlayIdIndex_","renderer_","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","declutterItems","layerIndex","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","asColorLike","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","margin","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","Immediate","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","renderDeclutterItems","declutterTree","items","zIndexItems","renderDeclutter","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","declutteredFeatures","numLayers","callback_1","getWrapX","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","labelCacheKey_","insertBefore","firstChild","children_","previousElement","childElementCount","lastElementChild","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","supportedExtensions","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","BufferUsage","STATIC_DRAW","STREAM_DRAW","getArrayClassForType","Float32Array","Uint32Array","Buffer","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","from","fromArrayBuffer","getUsage","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","getSupportedExtensions","getExtension","handleWebGLContextLost","handleWebGLContextRestored","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","IconAnchorUnits","FRACTION","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","listenImage","loadHandler","errorHandler","img","decode","promise","listening_1","then","catch","ol_Image","ImageWrapper","imageLoadFunction","src_","Image","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad_1","sourceListenKey_1","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_min_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","Cluster_extends","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","Zoomify_extends","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","localContext_1","TileGroup","ZoomifyTileClass","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","RegExp","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","tiles","scaleFactors","extraFeatures","extraFormats","extraQualities","maxWidth","maxHeight","maxArea","format_IIIFInfo","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","version","test","getComplianceLevelFromProfile","complianceLevel","level","getTileSourceOptions","opt_preferredOptions","imageOptions","quality","IIIF_extends","formatPercentage","percentage","toLocaleString","maximumFractionDigits","source_IIIF","IIIF","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","OSM_extends","ATTRIBUTION","source_OSM","OSM","BaseImage_extends","BaseImage","BaseImageLayer","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","previousAlpha","canvasTransform","layer_Image_extends","layer_Image","ImageLayer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","wantedResolution","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile_extends","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","sourceTileGrid_1","covered_1","empty_1","sourceZ_1","loadedZ_1","sourceTileCoord","sourceTile","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","webgl_Layer_extends","WebGLWorkerMessageType","GENERATE_BUFFERS","Layer_WebGLLayerRenderer","WebGLLayerRenderer","helper","writePointFeatureInstructions","instructions","elementIndex","POINT_INSTRUCTIONS_COUNT","POINT_VERTEX_STRIDE","webgl_Layer","webgl_url","PointsLayer_extends","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorArray_","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","received","projectionTransform","vertexBuffer","indexBuffer","renderInstructions","renderCount","vectorSource","sourceChanged","geojsonFeatureCache_","viewNotMoving","rebuildBuffers_","bytesPerFloat","BYTES_PER_ELEMENT","totalInstructionsCount","tmpCoords","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","LineString","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatOffset","flatEnd","oo","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","canvas_BuilderGroup","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","interpolate","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","declutterData","currentAlpha","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipExtent","getDeclutter","world","transform_2","viewHints_1","layer_1","features_1","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","features_2","replayGroupInstructions","executorGroup","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","imageFrameState_1","newSkippedFeatures_1","image_1","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","overlayContext_","overlayContextUid_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","overlayContext","overlayContext_1","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","renderTileImage_","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","found","renderQueuedTileImages_","renderMode","getRenderMode","replayTypes","worldOffset","replayState","renderPixelRatio","renderScale","pixelScale","ol_transform_translate","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","toFunction","layer_Vector_extends","layer_Vector","VectorLayer","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","LineString_extends","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","layer_VectorTile_extends","layer_VectorTile","VectorTileLayer","renderMode_","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","MultiLineString_extends","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","interaction_Extent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","Modify_getDefaultStyleFunction","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","oldMap","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","child","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","GeoJSON_extends","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","TextFeature_extends","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","format_TopoJSON","filter_Filter","Filter","tagName_","getTagName","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","And_extends","filter_And","And","Bbox_extends","filter_Bbox","Bbox","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","and","Function","filter_bbox","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","default","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_extends","OverviewMap_ControlledMap","ControlledMap","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","util","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","penOnly","pointerEvt","platformModifierKeyOnly","touchOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.9';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Geolocation\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport { listen } from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { circular as circularPolygon } from './geom/Polygon.js';\nimport { toRadians } from './math.js';\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\n/**\n * @enum {string}\n */\nvar Property = {\n    ACCURACY: 'accuracy',\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\n    ALTITUDE: 'altitude',\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\n    HEADING: 'heading',\n    POSITION: 'position',\n    PROJECTION: 'projection',\n    SPEED: 'speed',\n    TRACKING: 'tracking',\n    TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */ (function (_super) {\n    __extends(GeolocationError, _super);\n    /**\n     * @param {PositionError} error error object.\n     */\n    function GeolocationError(error) {\n        var _this = _super.call(this, EventType.ERROR) || this;\n        /**\n         * @type {number}\n         */\n        _this.code = error.code;\n        /**\n         * @type {string}\n         */\n        _this.message = error.message;\n        return _this;\n    }\n    return GeolocationError;\n}(Event));\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~Event#event:error\n * @api\n */\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Geolocation(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * The unprojected (EPSG:4326) device position.\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.position_ = null;\n        /**\n         * @private\n         * @type {import(\"./proj.js\").TransformFunction}\n         */\n        _this.transform_ = identityTransform;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.watchId_ = undefined;\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\n        if (options.projection !== undefined) {\n            _this.setProjection(options.projection);\n        }\n        if (options.trackingOptions !== undefined) {\n            _this.setTrackingOptions(options.trackingOptions);\n        }\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Geolocation.prototype.disposeInternal = function () {\n        this.setTracking(false);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleProjectionChanged_ = function () {\n        var projection = this.getProjection();\n        if (projection) {\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\n            if (this.position_) {\n                this.set(Property.POSITION, this.transform_(this.position_));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleTrackingChanged_ = function () {\n        if ('geolocation' in navigator) {\n            var tracking = this.getTracking();\n            if (tracking && this.watchId_ === undefined) {\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n            }\n            else if (!tracking && this.watchId_ !== undefined) {\n                navigator.geolocation.clearWatch(this.watchId_);\n                this.watchId_ = undefined;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Position} position position event.\n     */\n    Geolocation.prototype.positionChange_ = function (position) {\n        var coords = position.coords;\n        this.set(Property.ACCURACY, coords.accuracy);\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\n            undefined : coords.altitudeAccuracy);\n        this.set(Property.HEADING, coords.heading === null ?\n            undefined : toRadians(coords.heading));\n        if (!this.position_) {\n            this.position_ = [coords.longitude, coords.latitude];\n        }\n        else {\n            this.position_[0] = coords.longitude;\n            this.position_[1] = coords.latitude;\n        }\n        var projectedPosition = this.transform_(this.position_);\n        this.set(Property.POSITION, projectedPosition);\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n        var geometry = circularPolygon(this.position_, coords.accuracy);\n        geometry.applyTransform(this.transform_);\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\n        this.changed();\n    };\n    /**\n     * @private\n     * @param {PositionError} error error object.\n     */\n    Geolocation.prototype.positionError_ = function (error) {\n        this.setTracking(false);\n        this.dispatchEvent(new GeolocationError(error));\n    };\n    /**\n     * Get the accuracy of the position in meters.\n     * @return {number|undefined} The accuracy of the position measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n    };\n    /**\n     * Get a geometry of the position accuracy.\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracyGeometry = function () {\n        return (\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\n    };\n    /**\n     * Get the altitude associated with the position.\n     * @return {number|undefined} The altitude of the position in meters above mean\n     *     sea level.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitude = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n    };\n    /**\n     * Get the altitude accuracy of the position.\n     * @return {number|undefined} The accuracy of the altitude measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitudeAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n    };\n    /**\n     * Get the heading as radians clockwise from North.\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n     * is set to `true` in the tracking options.\n     * @return {number|undefined} The heading of the device in radians from north.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getHeading = function () {\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\n    };\n    /**\n     * Get the position of the device.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n     *     in the current projection.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the projection associated with the position.\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\n    };\n    /**\n     * Get the speed in meters per second.\n     * @return {number|undefined} The instantaneous speed of the device in meters\n     *     per second.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getSpeed = function () {\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\n    };\n    /**\n     * Determine if the device location is being tracked.\n     * @return {boolean} The device location is being tracked.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTracking = function () {\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\n    };\n    /**\n     * Get the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @return {PositionOptions|undefined} PositionOptions as defined by\n     *     the [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTrackingOptions = function () {\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n    };\n    /**\n     * Set the projection to use for transforming the coordinates.\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setProjection = function (projection) {\n        this.set(Property.PROJECTION, getProjection(projection));\n    };\n    /**\n     * Enable or disable tracking.\n     * @param {boolean} tracking Enable tracking.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTracking = function (tracking) {\n        this.set(Property.TRACKING, tracking);\n    };\n    /**\n     * Set the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @param {PositionOptions} options PositionOptions as defined by the\n     *     [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTrackingOptions = function (options) {\n        this.set(Property.TRACKING_OPTIONS, options);\n    };\n    return Geolocation;\n}(BaseObject));\nexport default Geolocation;\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if ('PointerEvent' in window) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (window.navigator.msPointerEnabled) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if ('ontouchstart' in window) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed,\n            hasOverlay: false\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events/Target.js\").default}\n         */\n        _this.labelCache_ = null;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {boolean} hasOverlay Set by the renderer when an overlay for points and text is used.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (opacity != 1) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = layer.getRenderer();\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1, declutteredFeatures);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\nimport EventType from '../events/EventType.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheKey_ = listen(labelCache, EventType.CLEAR, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.labelCacheKey_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        var hasOverlay = false;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            hasOverlay = hasOverlay || layerState.hasOverlay;\n            frameState.layerIndex = i;\n            if (!visibleAtResolution(layerState, viewResolution) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if ((element !== previousElement || i == ii - 1) && element.childElementCount === 2 && !hasOverlay) {\n                element.removeChild(element.lastElementChild);\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                hasOverlay = false;\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88E0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88E4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n    'experimental-webgl',\n    'webgl',\n    'webkit-3d',\n    'moz-webgl'\n];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = object[property] = [];\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName]\n                    .call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number=} opt_usage Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        this.array = (getArrayClassForType(this.type)).from(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @returns {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored'\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options=} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, -1,\n            1, 1,\n            -1, 1\n        ];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                value: options.uniforms[name],\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\n            });\n        }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        var size = frameState.size;\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n            this.renderTargetTextureSize_ = size;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default: return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport { getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenAll } from '../events.js';\nimport { clear } from '../obj.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { getContext, getSupportedExtensions } from '../webgl.js';\nimport { includes } from '../array.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8B30,\n    VERTEX_SHADER: 0x8B31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n/**\n * Attribute names used in the default shaders: `POSITION`, `TEX_COORD`, `OPACITY`,\n * `ROTATE_WITH_VIEW`, `OFFSETS` and `COLOR`\n * @enum {string}\n */\nexport var DefaultAttrib = {\n    POSITION: 'a_position',\n    TEX_COORD: 'a_texCoord',\n    OPACITY: 'a_opacity',\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\n    OFFSETS: 'a_offsets',\n    COLOR: 'a_color'\n};\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   this.context.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {!Array<WebGLShader>}\n         */\n        _this.shaderCache_ = [];\n        /**\n         * @private\n         * @type {!Array<WebGLProgram>}\n         */\n        _this.programCache_ = [];\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n        gl.getExtension('OES_element_index_uint');\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1]\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n            return new WebGLPostProcessingPass({\n                webGlContext: gl,\n                scaleRatio: options.scaleRatio,\n                vertexShader: options.vertexShader,\n                fragmentShader: options.fragmentShader,\n                uniforms: options.uniforms\n            });\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = this.bufferCache_[bufferKey] = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer\n            };\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        unlistenAll(this.canvas_);\n        var gl = this.getGL();\n        if (!gl.isContextLost()) {\n            for (var key in this.bufferCache_) {\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\n            }\n            for (var key in this.programCache_) {\n                gl.deleteProgram(this.programCache_[key]);\n            }\n            for (var key in this.shaderCache_) {\n                gl.deleteShader(this.shaderCache_[key]);\n            }\n        }\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        this.shaderCache_.push(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ =\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        this.programCache_.push(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        clear(this.shaderCache_);\n        clear(this.programCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\n    };\n    // TODO: shutdown program\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        if (opt_wrapS !== undefined) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, opt_wrapS);\n        }\n        if (opt_wrapT !== undefined) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, opt_wrapT);\n        }\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { SAFARI } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    // The decode function is supported by Safari but not when the image is a svg file.\n    // FIXME: remove `!SAFARI` in the test when this bug is fixed upstream.\n    //        See: https://bugs.webkit.org/show_bug.cgi?id=198527\n    if (!SAFARI && img.decode) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                errorHandler();\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent<Geometry>\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = feature.getGeometry();\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getTopLeft } from '../extent.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {number} tilePixelRatio Tile pixel ratio to display the tile\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tilePixelRatio, tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0])).map(function (x) {\n            return x * tilePixelRatio;\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var extent = options.extent || [0, -size[1], size[0], 0];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var tileSizeForTierSizeCalculation = tileSize;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [1];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(1 << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, tilePixelRatio, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_0\n * @property {string} identifier\n * @property {number} width\n * @property {number} height\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_1\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context URI.\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n/**\n * @typedef {Object} ImageInformationResponse2\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<string|IiifProfile>} profile Additional informations about the image\n * service's capabilities.\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n */\n/**\n * @typedef {Object} ImageInformationResponse3\n * @property {string} id The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {string} profile Compliance level, one of 'level0', 'level1' or 'level2'\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n * @property {Array<string>} [extraQualities] IIIF image qualities supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFormats] Image formats supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFeatures] Additional supported features whose support\n * is not indicated by the compliance level.\n */\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nvar Versions = {\n    VERSION1: 'version1',\n    VERSION2: 'version2',\n    VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nvar IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n    'level0': {\n        supports: [],\n        formats: [],\n        qualities: ['native']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['native']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['native', 'color', 'grey', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionSquare', 'regionByPct',\n            'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES['none'] = {\n    'none': {\n        supports: [],\n        formats: [],\n        qualities: []\n    }\n};\nvar COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nvar COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nvar COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\nfunction generateVersion1Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    // Version 1.0 and 1.1 do not require a profile.\n    if (levelProfile === undefined) {\n        levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n    }\n    return {\n        url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        supports: levelProfile.supports,\n        formats: levelProfile.formats.concat([iiifInfo.imageInfo.formats === undefined ?\n                [] : iiifInfo.imageInfo.formats]),\n        qualities: levelProfile.qualities.concat([iiifInfo.imageInfo.qualities === undefined ?\n                [] : iiifInfo.imageInfo.qualities]),\n        resolutions: iiifInfo.imageInfo.scale_factors,\n        tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n            [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n            (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n    };\n}\nfunction generateVersion2Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1, profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [], profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [], profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n    return {\n        url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height === undefined ? tile.width : tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: levelProfile.supports.concat(profileSupports),\n        formats: levelProfile.formats.concat(profileFormats),\n        qualities: levelProfile.qualities.concat(profileQualities)\n    };\n}\nfunction generateVersion3Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    return {\n        url: iiifInfo.imageInfo['id'],\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : levelProfile.supports.concat(iiifInfo.imageInfo.extraFeatures),\n        formats: iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : levelProfile.formats.concat(iiifInfo.imageInfo.extraFormats),\n        qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : levelProfile.supports.concat(iiifInfo.imageInfo.extraQualities),\n        maxWidth: undefined,\n        maxHeight: undefined,\n        maxArea: undefined\n    };\n}\nvar versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nvar IIIFInfo = /** @class */ (function () {\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     */\n    function IIIFInfo(imageInfo) {\n        this.setImageInfo(imageInfo);\n    }\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     * @api\n     */\n    IIIFInfo.prototype.setImageInfo = function (imageInfo) {\n        if (typeof imageInfo == 'string') {\n            this.imageInfo = JSON.parse(imageInfo);\n        }\n        else {\n            this.imageInfo = imageInfo;\n        }\n    };\n    /**\n     * @returns {Versions} Major IIIF version.\n     * @api\n     */\n    IIIFInfo.prototype.getImageApiVersion = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var context = this.imageInfo['@context'] || 'ol-no-context';\n        if (typeof context == 'string') {\n            context = [context];\n        }\n        for (var i = 0; i < context.length; i++) {\n            switch (context[i]) {\n                case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                case 'http://iiif.io/api/image/1/context.json':\n                    return Versions.VERSION1;\n                case 'http://iiif.io/api/image/2/context.json':\n                    return Versions.VERSION2;\n                case 'http://iiif.io/api/image/3/context.json':\n                    return Versions.VERSION3;\n                case 'ol-no-context':\n                    // Image API 1.0 has no '@context'\n                    if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n                        return Versions.VERSION1;\n                    }\n                    break;\n                default:\n            }\n        }\n        assert(false, 61);\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level as it appears in the IIIF image information\n     * response.\n     */\n    IIIFInfo.prototype.getComplianceLevelEntryFromProfile = function (version) {\n        if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n            return;\n        }\n        if (version === undefined) {\n            version = this.getImageApiVersion();\n        }\n        switch (version) {\n            case Versions.VERSION1:\n                if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION3:\n                if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION2:\n                if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n                    && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n                    return this.imageInfo.profile[0];\n                }\n                break;\n            default:\n        }\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n     */\n    IIIFInfo.prototype.getComplianceLevelFromProfile = function (version) {\n        var complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n        if (complianceLevel === undefined) {\n            return undefined;\n        }\n        var level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n        return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n    };\n    /**\n     * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n     * methods that are supported by the IIIF service.\n     */\n    IIIFInfo.prototype.getComplianceLevelSupportedFeatures = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var version = this.getImageApiVersion();\n        var level = this.getComplianceLevelFromProfile(version);\n        if (level === undefined) {\n            return IIIF_PROFILE_VALUES['none']['none'];\n        }\n        return IIIF_PROFILE_VALUES[version][level];\n    };\n    /**\n     * @param {PreferredOptions} opt_preferredOptions Optional options for preferred format and quality.\n     * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n     * @api\n     */\n    IIIFInfo.prototype.getTileSourceOptions = function (opt_preferredOptions) {\n        var options = opt_preferredOptions || {}, version = this.getImageApiVersion();\n        if (version === undefined) {\n            return;\n        }\n        var imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n        if (imageOptions === undefined) {\n            return;\n        }\n        return {\n            url: imageOptions.url,\n            version: version,\n            size: [this.imageInfo.width, this.imageInfo.height],\n            sizes: imageOptions.sizes,\n            format: imageOptions.formats.includes(options.format) ? options.format : 'jpg',\n            supports: imageOptions.supports,\n            quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n                options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n            resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n                return b - a;\n            }) : undefined,\n            tileSize: imageOptions.tileSize\n        };\n    };\n    return IIIFInfo;\n}());\nexport default IIIFInfo;\nexport { Versions };\n//# sourceMappingURL=IIIFInfo.js.map","/**\n * @module ol/source/IIIF\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport { getTopLeft } from '../extent.js';\nimport { CustomTile } from './Zoomify.js';\nimport { Versions } from '../format/IIIFInfo.js';\nimport { assert } from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {import(\"../size.js\").Size[]} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image @id.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\nfunction formatPercentage(percentage) {\n    return percentage.toLocaleString('en', { maximumFractionDigits: 10 });\n}\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nvar IIIF = /** @class */ (function (_super) {\n    __extends(IIIF, _super);\n    /**\n     * @param {Options} opt_options Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n     * to parse Image API service information responses into constructor options.\n     * @api\n     */\n    function IIIF(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseUrl = options.url || '';\n        baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n        var version = options.version || Versions.VERSION2;\n        var sizes = options.sizes || [];\n        var size = options.size;\n        assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n            !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n        var width = size[0];\n        var height = size[1];\n        var tileSize = options.tileSize;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var format = options.format || 'jpg';\n        var quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n        var resolutions = options.resolutions || [];\n        var supports = options.supports || [];\n        var extent = options.extent || [0, -height, width, 0];\n        var supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n        var supportsListedTiles = tileSize != undefined && (Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n        var supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n            (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n            (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n                supports.includes('sizeByW') || supports.includes('sizeByPct'));\n        var tileWidth, tileHeight, maxZoom;\n        resolutions.sort(function (a, b) {\n            return b - a;\n        });\n        if (supportsListedTiles || supportsArbitraryTiling) {\n            if (tileSize != undefined) {\n                if (Number.isInteger(tileSize) && tileSize > 0) {\n                    tileWidth = tileSize;\n                    tileHeight = tileSize;\n                }\n                else if (Array.isArray(tileSize) && tileSize.length > 0) {\n                    if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n                        tileWidth = tileSize[0];\n                        tileHeight = tileSize[0];\n                    }\n                    if (tileSize.length == 2) {\n                        if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[0];\n                            tileHeight = tileSize[1];\n                        }\n                        else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[1];\n                            tileHeight = tileSize[1];\n                        }\n                    }\n                }\n            }\n            if (tileWidth === undefined || tileHeight === undefined) {\n                tileWidth = DEFAULT_TILE_SIZE;\n                tileHeight = DEFAULT_TILE_SIZE;\n            }\n            if (resolutions.length == 0) {\n                maxZoom = Math.max(Math.ceil(Math.log(width / tileWidth) / Math.LN2), Math.ceil(Math.log(height / tileHeight) / Math.LN2));\n                for (var i = maxZoom; i >= 0; i--) {\n                    resolutions.push(Math.pow(2, i));\n                }\n            }\n            else {\n                var maxScaleFactor = Math.max(resolutions.slice());\n                // TODO maxScaleFactor might not be a power to 2\n                maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n            }\n        }\n        else {\n            // No tile support.\n            tileWidth = width;\n            tileHeight = height;\n            resolutions = [];\n            if (supportsListedSizes) {\n                /*\n                 * 'sizes' provided. Use full region in different resolutions. Every\n                 * resolution has only one tile.\n                 */\n                sizes.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n                maxZoom = -1;\n                var ignoredSizesIndex = [];\n                for (var i = 0; i < sizes.length; i++) {\n                    var resolution = width / sizes[i][0];\n                    if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n                        ignoredSizesIndex.push(i);\n                        continue;\n                    }\n                    resolutions.push(resolution);\n                    maxZoom++;\n                }\n                if (ignoredSizesIndex.length > 0) {\n                    for (var i = 0; i < ignoredSizesIndex.length; i++) {\n                        sizes.splice(ignoredSizesIndex[i] - i, 1);\n                    }\n                }\n            }\n            else {\n                // No useful image information at all. Try pseudo tile with full image.\n                resolutions.push(1);\n                sizes.push([width, height]);\n                maxZoom = 0;\n            }\n        }\n        var tileGrid = new TileGrid({\n            tileSize: [tileWidth, tileHeight],\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n            var regionParam, sizeParam;\n            var zoom = tileCoord[0];\n            if (zoom > maxZoom) {\n                return;\n            }\n            var tileX = tileCoord[1], tileY = tileCoord[2], scale = resolutions[zoom];\n            if (tileX === undefined || tileY === undefined || scale === undefined ||\n                tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n                tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n                return;\n            }\n            if (supportsArbitraryTiling || supportsListedTiles) {\n                var regionX = tileX * tileWidth * scale, regionY = tileY * tileHeight * scale;\n                var regionW = tileWidth * scale, regionH = tileHeight * scale, sizeW = tileWidth, sizeH = tileHeight;\n                if (regionX + regionW > width) {\n                    regionW = width - regionX;\n                }\n                if (regionY + regionH > height) {\n                    regionH = height - regionY;\n                }\n                if (regionX + tileWidth * scale > width) {\n                    sizeW = Math.floor((width - regionX + scale - 1) / scale);\n                }\n                if (regionY + tileHeight * scale > height) {\n                    sizeH = Math.floor((height - regionY + scale - 1) / scale);\n                }\n                if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n                    // canonical full image region parameter is 'full', not 'x,y,w,h'\n                    regionParam = 'full';\n                }\n                else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n                    regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n                }\n                else if (supports.includes('regionByPct')) {\n                    var pctX = formatPercentage(regionX / width * 100), pctY = formatPercentage(regionY / height * 100), pctW = formatPercentage(regionW / width * 100), pctH = formatPercentage(regionH / height * 100);\n                    regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n                }\n                if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n                    sizeParam = sizeW + ',';\n                }\n                else if (supports.includes('sizeByH')) {\n                    sizeParam = ',' + sizeH;\n                }\n                else if (supports.includes('sizeByWh')) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (supports.includes('sizeByPct')) {\n                    sizeParam = 'pct:' + formatPercentage(100 / scale);\n                }\n            }\n            else {\n                regionParam = 'full';\n                if (supportsListedSizes) {\n                    var regionWidth = sizes[zoom][0], regionHeight = sizes[zoom][1];\n                    if (version == Versions.VERSION3) {\n                        if (regionWidth == width && regionHeight == height) {\n                            sizeParam = 'max';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',' + regionHeight;\n                        }\n                    }\n                    else {\n                        if (regionWidth == width) {\n                            sizeParam = 'full';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',';\n                        }\n                    }\n                }\n                else {\n                    sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n                }\n            }\n            return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n        };\n        var IiifTileClass = CustomTile.bind(null, tilePixelRatio, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: options.state,\n            tileClass: IiifTileClass,\n            tileGrid: tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return IIIF;\n}(TileImage));\nexport default IIIF;\n//# sourceMappingURL=IIIF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    CARMENTA_SERVER: 'carmentaserver',\n    GEOSERVER: 'geoserver',\n    MAPSERVER: 'mapserver',\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {import(\"../../transform\").Transform} transform Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transformToString(transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                if (clips && (!transition || tile.getAlpha(getUid(this), frameState.time) === 1)) {\n                    // Clip mask for regions in this tile that already filled by a higher z tile\n                    context.save();\n                    currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                    for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                        if (z !== currentZ && currentZ < clipZs[i_1]) {\n                            var clip = clips[i_1];\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher z tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                    clips.push(currentClip);\n                    clipZs.push(currentZ);\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = opacity * (transition ? tile.getAlpha(uid, frameState.time) : 1);\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index.js';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerIndex: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            frameState.layerIndex = i;\n            var imageData = getImageData(this.layers_[i], frameState);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var container = renderer.renderFrame(frameState, null);\n    var element;\n    if (container) {\n        element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.IDLE && opt_request === true) {\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.EMPTY;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get an source tiles for this tile.\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\n     * source tiles's consumer count.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles_ = getSourceTiles;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n         */\n        _this.removeSourceTiles_ = removeSourceTiles;\n        /**\n         * @private\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.disposeInternal = function () {\n        this.removeSourceTiles_(this);\n        for (var key in this.context_) {\n            var canvas = this.context_[key].canvas;\n            canvas.width = canvas.height = 0;\n        }\n        for (var key in this.executorGroups) {\n            var executorGroups = this.executorGroups[key];\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].disposeInternal();\n            }\n        }\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D();\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles_(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @type {number}\n         */\n        _this.consumers = 0;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.disposeInternal = function () {\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            this.loader_(this.extent, this.resolution, this.projection);\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, getKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { isEmpty } from '../obj.js';\nimport { equals } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxZoom: options.maxZoom || 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\n         */\n        _this.sourceTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n         */\n        _this.sourceTilesByTileKey_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTiles_ = {};\n        this.sourceTilesByTileKey_ = {};\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var sourceTiles = [];\n        var urlTileCoord = tile.wrappedTileCoord;\n        if (urlTileCoord) {\n            var tileGrid = this.getTileGridForProjection(projection);\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            var z = urlTileCoord[0];\n            var resolution = tileGrid.getResolution(z);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(extent, -1 / resolution, extent);\n            var sourceTileGrid_1 = this.tileGrid;\n            var sourceExtent = sourceTileGrid_1.getExtent();\n            if (sourceExtent) {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            var sourceZ_1 = sourceTileGrid_1.getZForResolution(resolution, 1);\n            var minZoom = sourceTileGrid_1.getMinZoom();\n            var loadedZ_1 = sourceZ_1 + 1;\n            var covered_1, empty_1;\n            do {\n                --loadedZ_1;\n                covered_1 = true;\n                empty_1 = true;\n                sourceTileGrid_1.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\n                    var tileKey = getKey(sourceTileCoord);\n                    var sourceTile;\n                    if (tileKey in this.sourceTiles_) {\n                        sourceTile = this.sourceTiles_[tileKey];\n                        var state = sourceTile.getState();\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                            empty_1 = empty_1 && state === TileState.EMPTY;\n                            sourceTiles.push(sourceTile);\n                            return;\n                        }\n                    }\n                    else if (loadedZ_1 === sourceZ_1) {\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\n                        sourceTile.extent = sourceTileGrid_1.getTileCoordExtent(sourceTileCoord);\n                        sourceTile.projection = projection;\n                        sourceTile.resolution = sourceTileGrid_1.getResolution(sourceTileCoord[0]);\n                        this.sourceTiles_[tileKey] = sourceTile;\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n                        sourceTile.load();\n                    }\n                    else {\n                        empty_1 = false;\n                    }\n                    covered_1 = false;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    unlistenByKey(key_1);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                                    tile.hifi = true;\n                                    tile.sourceZ = sourceZ_1;\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered_1) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered_1 && loadedZ_1 > minZoom);\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\n                tile.setState(TileState.LOADING);\n            }\n            if (covered_1 || empty_1) {\n                tile.hifi = sourceZ_1 === loadedZ_1;\n                tile.sourceZ = loadedZ_1;\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n                if (tile.getState() < TileState.LOADED) {\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\n                }\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                    this.removeSourceTiles(tile);\n                    this.addSourceTiles(tile, sourceTiles);\n                }\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n     */\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n            sourceTiles[i].consumers++;\n        }\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     */\n    VectorTile.prototype.removeSourceTiles = function (tile) {\n        var tileKey = getKey(tile.tileCoord);\n        if (tileKey in this.sourceTilesByTileKey_) {\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                sourceTile.consumers--;\n                if (sourceTile.consumers === 0) {\n                    sourceTile.dispose();\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n                }\n            }\n        }\n        delete this.sourceTilesByTileKey_[tileKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\n            tile.key = this.getRevision().toString();\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { containsExtent } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\n    var extent, wrapX;\n    if (wgs84BoundingBox !== undefined) {\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\n        var projectionExtent = projection.getExtent();\n        if (projectionExtent) {\n            // If possible, do a sanity check on the extent - it should never be\n            // bigger than the validity extent of the projection of a matrix set.\n            if (!containsExtent(projectionExtent, extent)) {\n                extent = undefined;\n            }\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n/**\n * @enum {string}\n */\nexport var WebGLWorkerMessageType = {\n    GENERATE_BUFFERS: 'GENERATE_BUFFERS'\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        /**\n         * @type {WebGLHelper}\n         * @protected\n         */\n        _this.helper = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper.getShaderCompileErrors();\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\n/**\n * @param {Float32Array} instructions Instructons array in which to write.\n * @param {number} elementIndex Index from which render instructions will be written.\n * @param {number} x Point center X coordinate\n * @param {number} y Point center Y coordinate\n * @param {number} u0 Left texture coordinate\n * @param {number} v0 Bottom texture coordinate\n * @param {number} u1 Right texture coordinate\n * @param {number} v1 Top texture coordinate\n * @param {number} size Radius of the point\n * @param {number} opacity Opacity\n * @param {boolean} rotateWithView If true, the point will stay aligned with the view\n * @param {Array<number>} color Array holding red, green, blue, alpha values\n * @return {number} Index from which the next element should be written\n * @private\n */\nexport function writePointFeatureInstructions(instructions, elementIndex, x, y, u0, v0, u1, v1, size, opacity, rotateWithView, color) {\n    var i = elementIndex;\n    instructions[i++] = x;\n    instructions[i++] = y;\n    instructions[i++] = u0;\n    instructions[i++] = v0;\n    instructions[i++] = u1;\n    instructions[i++] = v1;\n    instructions[i++] = size;\n    instructions[i++] = opacity;\n    instructions[i++] = rotateWithView ? 1 : 0;\n    instructions[i++] = color[0];\n    instructions[i++] = color[1];\n    instructions[i++] = color[2];\n    instructions[i++] = color[3];\n    return i;\n}\nvar tmpArray_ = [];\nvar bufferPositions_ = { vertexPosition: 0, indexPosition: 0 };\nexport var POINT_INSTRUCTIONS_COUNT = 13;\nexport var POINT_VERTEX_STRIDE = 12;\nfunction writePointVertex(buffer, pos, x, y, offsetX, offsetY, u, v, opacity, rotateWithView, red, green, blue, alpha) {\n    buffer[pos + 0] = x;\n    buffer[pos + 1] = y;\n    buffer[pos + 2] = offsetX;\n    buffer[pos + 3] = offsetY;\n    buffer[pos + 4] = u;\n    buffer[pos + 5] = v;\n    buffer[pos + 6] = opacity;\n    buffer[pos + 7] = rotateWithView;\n    buffer[pos + 8] = red;\n    buffer[pos + 9] = green;\n    buffer[pos + 10] = blue;\n    buffer[pos + 11] = alpha;\n}\nfunction writeCustomAttrs(buffer, pos, customAttrs) {\n    if (customAttrs.length) {\n        buffer.set(customAttrs, pos);\n    }\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @param {number} [count] Amount of render instructions that will be read. Default value is POINT_INSTRUCTIONS_COUNT\n * but a higher value can be provided; all values beyond the default count will be put in the vertices buffer as\n * is, thus allowing specifying custom attributes. Please note: this value should not vary inside the same buffer or\n * rendering will break.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, bufferPositions, count) {\n    var count_ = count > POINT_INSTRUCTIONS_COUNT ? count : POINT_INSTRUCTIONS_COUNT;\n    var x = instructions[elementIndex + 0];\n    var y = instructions[elementIndex + 1];\n    var u0 = instructions[elementIndex + 2];\n    var v0 = instructions[elementIndex + 3];\n    var u1 = instructions[elementIndex + 4];\n    var v1 = instructions[elementIndex + 5];\n    var size = instructions[elementIndex + 6];\n    var opacity = instructions[elementIndex + 7];\n    var rotateWithView = instructions[elementIndex + 8];\n    var red = instructions[elementIndex + 9];\n    var green = instructions[elementIndex + 10];\n    var blue = instructions[elementIndex + 11];\n    var alpha = instructions[elementIndex + 12];\n    // the default vertex buffer stride is 12, plus additional custom values if any\n    var baseStride = POINT_VERTEX_STRIDE;\n    var stride = baseStride + count_ - POINT_INSTRUCTIONS_COUNT;\n    // read custom numerical attributes on the feature\n    var customAttrs = tmpArray_;\n    customAttrs.length = count_ - POINT_INSTRUCTIONS_COUNT;\n    for (var i = 0; i < customAttrs.length; i++) {\n        customAttrs[i] = instructions[elementIndex + POINT_INSTRUCTIONS_COUNT + i];\n    }\n    var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n    var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n    var baseIndex = vPos / stride;\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    writePointVertex(vertexBuffer, vPos, x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, red, green, blue, alpha);\n    writeCustomAttrs(vertexBuffer, vPos + baseStride, customAttrs);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, red, green, blue, alpha);\n    writeCustomAttrs(vertexBuffer, vPos + baseStride, customAttrs);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, red, green, blue, alpha);\n    writeCustomAttrs(vertexBuffer, vPos + baseStride, customAttrs);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, red, green, blue, alpha);\n    writeCustomAttrs(vertexBuffer, vPos + baseStride, customAttrs);\n    vPos += stride;\n    indexBuffer[iPos++] = baseIndex;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 3;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 2;\n    indexBuffer[iPos++] = baseIndex + 3;\n    bufferPositions_.vertexPosition = vPos;\n    bufferPositions_.indexPosition = iPos;\n    return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankTexture() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n    return image;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var source = \"var n=\\\"function\\\"==typeof Object.assign?Object.assign:function(n,e){if(null==n)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var r=Object(n),t=1,o=arguments.length;t<o;++t){var i=arguments[t];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(r[f]=i[f])}return r};var e=\\\"GENERATE_BUFFERS\\\",r=[],t={vertexPosition:0,indexPosition:0},o=13,i=12;function f(n,e,r,t,o,i,f,u,a,s,l,v,c,b){n[e+0]=r,n[e+1]=t,n[e+2]=o,n[e+3]=i,n[e+4]=f,n[e+5]=u,n[e+6]=a,n[e+7]=s,n[e+8]=l,n[e+9]=v,n[e+10]=c,n[e+11]=b}function u(n,e,r){r.length&&n.set(r,e)}function a(n,e,a,s,l,v){var c=v>o?v:o,b=n[e+0],g=n[e+1],d=n[e+2],h=n[e+3],x=n[e+4],y=n[e+5],P=n[e+6],w=n[e+7],p=n[e+8],A=n[e+9],E=n[e+10],j=n[e+11],F=n[e+12],O=i,B=O+c-o,m=r;m.length=c-o;for(var C=0;C<m.length;C++)m[C]=n[e+o+C];var I=l?l.vertexPosition:0,R=l?l.indexPosition:0,T=I/B;return f(a,I,b,g,-P/2,-P/2,d,h,w,p,A,E,j,F),u(a,I+O,m),f(a,I+=B,b,g,+P/2,-P/2,x,h,w,p,A,E,j,F),u(a,I+O,m),f(a,I+=B,b,g,+P/2,+P/2,x,y,w,p,A,E,j,F),u(a,I+O,m),f(a,I+=B,b,g,-P/2,+P/2,d,y,w,p,A,E,j,F),u(a,I+O,m),I+=B,s[R++]=T,s[R++]=T+1,s[R++]=T+3,s[R++]=T+1,s[R++]=T+2,s[R++]=T+3,t.vertexPosition=I,t.indexPosition=R,t}onmessage=function(r){var t=r.data;if(t.type===e){for(var f=new Float32Array(t.renderInstructions),u=t.customAttributesCount||0,s=o+u,l=f.length/s,v=4*l*(i+u),c=new Uint32Array(6*l),b=new Float32Array(v),g=null,d=0;d<f.length;d+=s)g=a(f,d,b,c,g,s);var h=n({vertexBuffer:b.buffer,indexBuffer:c.buffer,renderInstructions:f.buffer},t);postMessage(h,[b.buffer,c.buffer,f.buffer])}};\";\nvar blob = new Blob([source], { type: 'application/javascript' });\nvar url = URL.createObjectURL(blob);\nexport function create() {\n    return new Worker(url);\n}\n//# sourceMappingURL=webgl.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl.js';\nimport { DefaultAttrib, DefaultUniform } from '../../webgl/Helper.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport WebGLLayerRenderer, { getBlankTexture, POINT_INSTRUCTIONS_COUNT, POINT_VERTEX_STRIDE, WebGLWorkerMessageType, writePointFeatureInstructions } from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { createEmpty, equals } from '../../extent.js';\nimport { create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, apply as applyTransform } from '../../transform.js';\nimport { create as createWebGLWorker } from '../../worker/webgl.js';\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n\\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n\\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n\\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n\\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, Array<number>=):Array<number>} [colorCallback] Will be called on every feature in the\n * source to compute the color for use in the fragment shader (available as the `v_color` varying). This is only done on source change.\n * The return value should be between an array of R, G, B, A values between 0 and 1.  To reduce unnecessary\n * allocation, the function is called with a reusable array that can serve as the return value after updating\n * the R, G, B, and A values.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var uniforms = options.uniforms || {};\n        uniforms.u_texture = options.texture || getBlankTexture();\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, vectorLayer, {\n            uniforms: uniforms,\n            postProcesses: options.postProcesses\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.program_ = _this.helper.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\n        _this.helper.useProgram(_this.program_);\n        _this.sizeCallback_ = options.sizeCallback || function () {\n            return 1;\n        };\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\n            var geom = feature.getGeometry();\n            return geom.getCoordinates()[index];\n        };\n        _this.opacityCallback_ = options.opacityCallback || function () {\n            return 1;\n        };\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\n            return index < 2 ? 0 : 1;\n        };\n        _this.colorArray_ = [1, 1, 1, 1];\n        _this.colorCallback_ = options.colorCallback || function (feature, color) {\n            return this.colorArray_;\n        };\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\n            return false;\n        };\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        /**\n         * @type {Float32Array}\n         * @private\n         */\n        _this.renderInstructions_ = new Float32Array(0);\n        _this.worker_ = createWebGLWorker();\n        _this.worker_.addEventListener('message', function (event) {\n            var received = event.data;\n            if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n                var projectionTransform = received.projectionTransform;\n                this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n                this.helper.flushBufferData(this.verticesBuffer_);\n                this.helper.flushBufferData(this.indicesBuffer_);\n                // saves the projection transform for the current frame state\n                this.renderTransform_ = projectionTransform;\n                makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n                this.renderInstructions_ = new Float32Array(event.data.renderInstructions);\n            }\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState) {\n        var renderCount = this.indicesBuffer_.getArray() ? this.indicesBuffer_.getArray().length : 0;\n        this.helper.drawElements(0, renderCount);\n        this.helper.finalizeDraw(frameState);\n        var canvas = this.helper.getCanvas();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var viewState = frameState.viewState;\n        var stride = POINT_VERTEX_STRIDE;\n        // the source has changed: clear the feature cache & reload features\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n            this.geojsonFeatureCache_ = {};\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n        }\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        if ((sourceChanged || extentChanged) && viewNotMoving) {\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper.prepareDraw(frameState);\n        // write new data\n        this.helper.bindBuffer(this.verticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n        this.helper.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n        this.helper.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n        this.helper.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n        this.helper.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n        this.helper.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n        this.helper.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        // saves the projection transform for the current frame state\n        var projectionTransform = createTransform();\n        this.helper.makeProjectionTransform(frameState, projectionTransform);\n        var features = vectorSource.getFeatures();\n        var totalInstructionsCount = POINT_INSTRUCTIONS_COUNT * features.length;\n        if (!this.renderInstructions_ || this.renderInstructions_.length !== totalInstructionsCount) {\n            this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n        }\n        // loop on features to fill the buffer\n        var feature;\n        var tmpCoords = [];\n        var elementIndex = 0;\n        for (var i = 0; i < features.length; i++) {\n            feature = features[i];\n            if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n                continue;\n            }\n            tmpCoords[0] = this.coordCallback_(feature, 0);\n            tmpCoords[1] = this.coordCallback_(feature, 1);\n            applyTransform(projectionTransform, tmpCoords);\n            elementIndex = writePointFeatureInstructions(this.renderInstructions_, elementIndex, tmpCoords[0], tmpCoords[1], this.texCoordCallback_(feature, 0), this.texCoordCallback_(feature, 1), this.texCoordCallback_(feature, 2), this.texCoordCallback_(feature, 3), this.sizeCallback_(feature), this.opacityCallback_(feature), this.rotateWithViewCallback_(feature), this.colorCallback_(feature, this.colorArray_));\n        }\n        /** @type import('./Layer').WebGLWorkerGenerateBuffersMessage */\n        var message = {\n            type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n            renderInstructions: this.renderInstructions_.buffer\n        };\n        // additional properties will be sent back as-is by the worker\n        message['projectionTransform'] = projectionTransform;\n        this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n        this.renderInstructions_ = null;\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        var context = declutterData[0];\n                        var currentAlpha = context.globalAlpha;\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = opacity;\n                        }\n                        if (declutterData.length > 11) {\n                            this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                        }\n                        drawImage.apply(undefined, declutterData);\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = currentAlpha;\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity\n                });\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        var declutterReplays = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer()).getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = /** @type {import(\"../../layer/Vector\").default} */ (this.getLayer());\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\nimport { assign } from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport { listen } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport ImageState from '../../ImageState.js';\nimport { renderDeclutterItems } from '../../render.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n     */\n    function CanvasVectorImageLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @type {!Array<string>}\n         */\n        _this.skippedFeatures_ = [];\n        /**\n         * @private\n         * @type {import(\"./VectorLayer.js\").default}\n         */\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.layerImageRatio_ = layer.getImageRatio();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\n        this.vectorRenderer_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.handleFontsChanged = function () {\n        this.vectorRenderer_.handleFontsChanged();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var hints = frameState.viewHints;\n        var vectorRenderer = this.vectorRenderer_;\n        var renderedExtent = frameState.extent;\n        if (this.layerImageRatio_ !== 1) {\n            renderedExtent = renderedExtent.slice(0);\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var skippedFeatures_1 = this.skippedFeatures_;\n            vectorRenderer.useContainer(null, null, 1);\n            var context = vectorRenderer.context;\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n                declutterItems: [],\n                size: [\n                    getWidth(renderedExtent) / viewResolution,\n                    getHeight(renderedExtent) / viewResolution\n                ],\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n                    rotation: 0\n                }))\n            }));\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\n            var image_1 = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n                if (vectorRenderer.prepareFrame(imageFrameState_1) &&\n                    (vectorRenderer.replayGroupChanged ||\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\n                    vectorRenderer.renderFrame(imageFrameState_1, null);\n                    renderDeclutterItems(imageFrameState_1, null);\n                    skippedFeatures_1 = newSkippedFeatures_1;\n                    callback();\n                }\n            });\n            listen(image_1, EventType.CHANGE, function () {\n                if (image_1.getState() === ImageState.LOADED) {\n                    this.image_ = image_1;\n                    this.skippedFeatures_ = skippedFeatures_1;\n                }\n            }, this);\n            image_1.load();\n        }\n        if (this.image_) {\n            var image = this.image_;\n            var imageResolution = image.getResolution();\n            var imagePixelRatio = image.getPixelRatio();\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        }\n        return !!this.image_;\n    };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (this.vectorRenderer_) {\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n        else {\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n    };\n    return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\nexport default CanvasVectorImageLayerRenderer;\n//# sourceMappingURL=VectorImageLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid'\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlistenByKey } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, containsCoordinate, equals, getIntersection, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.overlayContext_ = null;\n        /**\n         * @type {string}\n         */\n        _this.overlayContextUid_;\n        /**\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.overlayPixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inverseOverlayPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        // Use nearest lower resolution.\n        _this.zDirection = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var overlayContext;\n        if (target && target.childElementCount === 2) {\n            overlayContext = target.lastElementChild.getContext('2d');\n            if (!overlayContext) {\n                target = null;\n            }\n        }\n        var containerReused = this.containerReused;\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n        if (containerReused && !this.containerReused && !overlayContext) {\n            this.overlayContext_ = null;\n            this.overlayContextUid_ = undefined;\n        }\n        if (this.containerReused && overlayContext) {\n            this.overlayContext_ = overlayContext;\n        }\n        if (!this.overlayContext_) {\n            var overlayContext_1 = createCanvasContext2D();\n            var style = overlayContext_1.canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.overlayContext_ = overlayContext_1;\n            this.overlayContextUid_ = getUid(overlayContext_1);\n        }\n        if (this.container.childElementCount === 1) {\n            this.container.appendChild(this.overlayContext_.canvas);\n        }\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     * @param {boolean} queue Queue tile for rendering.\n     * @return {boolean} Tile needs to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection, queue) {\n        var render = false;\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR || state === TileState.ABORT) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                render = true;\n                if (queue) {\n                    this.renderTileImageQueue_[tileUid] = tile;\n                }\n            }\n        }\n        return render;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, frameState));\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection, true));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            var render = this.prepareTile(tile, pixelRatio, projection, false);\n            if (render) {\n                this.renderTileImage_(tile, frameState);\n            }\n        }\n        return tile;\n    };\n    /**\n     * @inheritdoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        layerState.hasOverlay = true;\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty && builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        var executorGroups = tile.executorGroups[layerUid];\n        if (executorGroups) {\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].dispose();\n            }\n        }\n        tile.executorGroups[layerUid] = [];\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, layer.getDeclutter());\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n                null :\n                sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var declutter = layer.getDeclutter();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        /** @type {!Object<string, boolean>} */\n        var features = {};\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var i, ii;\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n            var tile = renderedTiles[i];\n            if (!declutter) {\n                // When not decluttering, we only need to consider the tile that contains the given\n                // coordinate, because each feature will be rendered for each tile that contains it.\n                var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n                if (!containsCoordinate(tileExtent, coordinate)) {\n                    continue;\n                }\n            }\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n                /**\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n                 * @return {?} Callback result.\n                 */\n                function (feature) {\n                    var key = feature.getId();\n                    if (key === undefined) {\n                        key = getUid(feature);\n                    }\n                    if (!(key in features)) {\n                        features[key] = true;\n                        return callback(feature, layer);\n                    }\n                }, layer.getDeclutter() ? declutteredFeatures : null);\n            }\n        }\n        return found;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        this.renderQueuedTileImages_(hifi, frameState);\n        _super.prototype.renderFrame.call(this, frameState, target);\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            return this.container;\n        }\n        var source = layer.getSource();\n        // Unqueue tiles from the image queue when we don't need any more\n        var usedTiles = frameState.usedTiles[getUid(source)];\n        for (var tileUid in this.renderTileImageQueue_) {\n            if (!usedTiles || !(tileUid in usedTiles)) {\n                delete this.renderTileImageQueue_[tileUid];\n            }\n        }\n        var context = this.overlayContext_;\n        var declutterReplays = layer.getDeclutter() ? {} : null;\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var pixelRatio = frameState.pixelRatio;\n        var rotation = frameState.viewState.rotation;\n        var size = frameState.size;\n        // set forward and inverse pixel transforms\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n        // resize and clear\n        var canvas = context.canvas;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (getUid(context) === this.overlayContextUid_) {\n            context.clearRect(0, 0, width, height);\n        }\n        var tiles = this.renderedTiles;\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var clips = [];\n        var clipZs = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            if (tile.getState() == TileState.ABORT) {\n                continue;\n            }\n            var tileCoord = tile.tileCoord;\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            var clipped = false;\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var currentClip = void 0;\n                if (!declutterReplays && !clipped) {\n                    currentClip = executorGroup.getClipCoords(transform);\n                    context.save();\n                    // Create a clip mask for regions in this low resolution tile that are\n                    // already filled by a higher resolution tile\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\n                        var clip = clips[j];\n                        if (currentZ < clipZs[j]) {\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher resolution tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n                if (!declutterReplays && !clipped) {\n                    context.restore();\n                    clips.push(currentClip);\n                    clipZs.push(currentZ);\n                    clipped = true;\n                }\n            }\n        }\n        if (declutterReplays) {\n            var layerState = frameState.layerStatesArray[frameState.layerIndex];\n            replayDeclutter(declutterReplays, context, rotation, layerState.opacity, hifi, frameState.declutterItems);\n        }\n        return this.container;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderQueuedTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                frameState.animate = true;\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            delete this.renderTileImageQueue_[uid];\n            this.renderTileImage_(tile, frameState);\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, frameState) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n        var renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.max(pixelRatio, renderPixelRatio / pixelRatio);\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n        if (data) {\n            return data;\n        }\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n        var context = this.overlayContext_;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\nimport { get as getProjection, getTransform } from '../../proj.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + ((lon2 - lon1) * frac), lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport { degreesToStringHDMS } from '../coordinate.js';\nimport Text from '../style/Text.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector.js';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj.js';\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent.js';\nimport { clamp } from '../math.js';\nimport Style from '../style/Style.js';\nimport Feature from '../Feature.js';\nimport { bbox } from '../loadingstrategy.js';\nimport { meridian, parallel } from '../geom/flat/geodesic.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport Point from '../geom/Point.js';\nimport Collection from '../Collection.js';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)'\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLatP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLonP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLatP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLonP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n                options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n                options.latLabelPosition;\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.lonLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.lonLabelStyleCache_[label]) {\n                    this.lonLabelStyleCache_[label] = new Style({\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textBaseline: 'bottom',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.lonLabelStyleCache_[label];\n            }.bind(_this);\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.latLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.latLabelStyleCache_[label]) {\n                    this.latLabelStyleCache_[label] = new Style({\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textAlign: 'right',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.latLabelStyleCache_[label];\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: bbox,\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_\n        });\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        _this.tmpExtent_ = null;\n        return _this;\n    }\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n        // we should not keep track of loaded extents\n        setTimeout(function () {\n            source.removeLoadedExtent(extent);\n        }, 0);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = resolution * resolution / 4;\n        var updateProjectionInfo = !this.projection_ ||\n            !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridiansLabels_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallelsLabels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        var labelData;\n        if (this.meridiansLabels_) {\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n                labelData = this.meridiansLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.lonLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n        if (this.parallelsLabels_) {\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n                labelData = this.parallelsLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.latLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\n                this.meridiansLabels_[index] = {\n                    geom: textPoint,\n                    text: this.lonLabelFormatter_(lon)\n                };\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\n                this.parallelsLabels_[index] = {\n                    geom: textPoint,\n                    text: this.latLabelFormatter_(lat)\n                };\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var centerLonLat = this.toLonLatTransform_(center);\n        var centerLon = centerLonLat[0];\n        var centerLat = centerLonLat[1];\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        var validExtent = [\n            Math.max(extent[0], this.minLonP_),\n            Math.max(extent[1], this.minLatP_),\n            Math.min(extent[2], this.maxLonP_),\n            Math.min(extent[3], this.maxLatP_)\n        ];\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lon != this.minLon_ && cnt++ < maxLines) {\n            lon = Math.max(lon - interval, this.minLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\n            lon = Math.min(lon + interval, this.maxLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = this.intervals_[i] / 2;\n            p1[0] = centerLon - delta;\n            p1[1] = centerLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = centerLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate = [flatCoordinates[0], lat];\n        var point;\n        if (index in this.meridiansLabels_) {\n            point = this.meridiansLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate = [lon, flatCoordinates[1]];\n        var point;\n        if (index in this.parallelsLabels_) {\n            point = this.parallelsLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        this.maxLatP_ = worldExtentP[3];\n        this.maxLonP_ = worldExtentP[2];\n        this.minLatP_ = worldExtentP[1];\n        this.minLonP_ = worldExtentP[0];\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport { listen } from '../events.js';\nimport { getChangeEventType } from '../Object.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius'\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * @inheritDoc\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n                }.bind(this),\n                u_resolution: function (frameState) {\n                    return frameState.viewState.resolution;\n                }\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: this.gradient_\n                    }\n                }\n            ],\n            opacityCallback: this.weightFunction_\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport { assign } from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /** @class */ (function (_super) {\n    __extends(VectorImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.imageRatio;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n        return _this;\n    }\n    /**\n     * @return {number} Ratio between rendered extent size and viewport extent size.\n     */\n    VectorImageLayer.prototype.getImageRatio = function () {\n        return this.imageRatio_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorImageLayer.prototype.createRenderer = function () {\n        return new CanvasVectorImageLayerRenderer(this);\n    };\n    return VectorImageLayer;\n}(BaseVectorLayer));\nexport default VectorImageLayer;\n//# sourceMappingURL=VectorImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport { assert } from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\n *    cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\n        /**\n         * @private\n         * @type {VectorTileRenderType}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * @return {VectorTileRenderType} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotation(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolution(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = geometry.getLinearRing(0);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b);\n        };\n        var extent = this.getExtent();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex = squaredDist1 > squaredDist2 ?\n                        closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixel(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtent();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixel(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtent();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = vertexFeature.getGeometry();\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        var featureOverlay = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                features: options.features,\n                wrapX: options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @private\n         * @type {VectorLayer}\n         */\n        _this.featureOverlay_ = featureOverlay;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.featureOverlay_.getSource().getFeaturesCollection();\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {VectorLayer} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Get the overlay layer that this interaction renders selected features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Select.prototype.getOverlay = function () {\n        return this.featureOverlay_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var selectedFeatures = this.getFeatures();\n        if (currentMap) {\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n        }\n        _super.prototype.setMap.call(this, map);\n        this.featureOverlay_.setMap(map);\n        if (map) {\n            selectedFeatures.forEach(map.skipFeature.bind(map));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature, resolution) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     */\n    function TranslateEvent(type, features, coordinate) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                    return feature;\n                }\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection ?\n                opt_options.dataProjection : this.readProjection(source);\n            if (opt_options.extent) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent } from '../extent.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /** @class */ (function (_super) {\n    __extends(EsriJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function EsriJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        feature.setGeometry(geometry);\n        if (opt_options && opt_options.idField &&\n            esriJSONFeature.attributes[opt_options.idField]) {\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\n        }\n        if (esriJSONFeature.attributes) {\n            feature.setProperties(esriJSONFeature.attributes, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var options = opt_options ? opt_options : {};\n        if (object['features']) {\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            var features = [];\n            var esriJSONFeatures = esriJSONFeatureSet.features;\n            options.idField = object.objectIdFieldName;\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n            }\n            return features;\n        }\n        else {\n            return [this.readFeatureFromObject(object, options)];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n            var crs = spatialReference.wkid;\n            return getProjection('EPSG:' + crs);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Encode a geometry as a EsriJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONGeometry} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * Encode a feature as a esriJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var object = {};\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object['geometry'] = writeGeometry(geometry, opt_options);\n            if (opt_options && opt_options.featureProjection) {\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n                });\n            }\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object['attributes'] = properties;\n        }\n        else {\n            object['attributes'] = {};\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a EsriJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            'features': objects\n        };\n    };\n    return EsriJSON;\n}(JSONFeature));\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var type;\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n        type = GeometryType.POINT;\n    }\n    else if (object['points']) {\n        type = GeometryType.MULTI_POINT;\n    }\n    else if (object['paths']) {\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n        if (esriJSONPolyline.paths.length === 1) {\n            type = GeometryType.LINE_STRING;\n        }\n        else {\n            type = GeometryType.MULTI_LINE_STRING;\n        }\n    }\n    else if (object['rings']) {\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n        var layout = getGeometryLayout(esriJSONPolygon);\n        var rings = convertRings(esriJSONPolygon.rings, layout);\n        if (rings.length === 1) {\n            type = GeometryType.POLYGON;\n            object['rings'] = rings[0];\n        }\n        else {\n            type = GeometryType.MULTI_POLYGON;\n            object['rings'] = rings;\n        }\n    }\n    var geometryReader = GEOMETRY_READERS[type];\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n    var flatRing = [];\n    var outerRings = [];\n    var holes = [];\n    var i, ii;\n    for (i = 0, ii = rings.length; i < ii; ++i) {\n        flatRing.length = 0;\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\n        // is this ring an outer ring? is it clockwise?\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\n        if (clockwise) {\n            outerRings.push([rings[i]]);\n        }\n        else {\n            holes.push(rings[i]);\n        }\n    }\n    while (holes.length) {\n        var hole = holes.shift();\n        var matched = false;\n        // loop over all outer rings and see if they contain our hole.\n        for (i = outerRings.length - 1; i >= 0; i--) {\n            var outerRing = outerRings[i][0];\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\n            if (containsHole) {\n                // the hole is contained push it into our polygon\n                outerRings[i].push(hole);\n                matched = true;\n                break;\n            }\n        }\n        if (!matched) {\n            // no outer rings contain this hole turn it into and outer\n            // ring (reverse it)\n            outerRings.push([hole.reverse()]);\n        }\n    }\n    return outerRings;\n}\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n    var point;\n    if (object.m !== undefined && object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\n    }\n    else if (object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\n    }\n    else if (object.m !== undefined) {\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\n    }\n    else {\n        point = new Point([object.x, object.y]);\n    }\n    return point;\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new LineString(object.paths[0], layout);\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiLineString(object.paths, layout);\n}\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n    var layout = GeometryLayout.XY;\n    if (object.hasZ === true && object.hasM === true) {\n        layout = GeometryLayout.XYZM;\n    }\n    else if (object.hasZ === true) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (object.hasM === true) {\n        layout = GeometryLayout.XYM;\n    }\n    return layout;\n}\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPoint(object.points, layout);\n}\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPolygon(object.rings, layout);\n}\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new Polygon(object.rings, layout);\n}\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {EsriJSONPoint} */\n    var esriJSON;\n    var layout = geometry.getLayout();\n    if (layout === GeometryLayout.XYZ) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            m: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYZM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2],\n            m: coordinates[3]\n        };\n    }\n    else if (layout === GeometryLayout.XY) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1]\n        };\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    return esriJSON;\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n    var layout = geometry.getLayout();\n    return {\n        hasZ: (layout === GeometryLayout.XYZ ||\n            layout === GeometryLayout.XYZM),\n        hasM: (layout === GeometryLayout.XYM ||\n            layout === GeometryLayout.XYZM)\n    };\n}\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, opt_options) {\n    var hasZM = getHasZM(lineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: [\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n        ]\n    };\n}\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, opt_options) {\n    // Esri geometries use the left-hand rule\n    var hasZM = getHasZM(polygon);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    };\n}\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, opt_options) {\n    var hasZM = getHasZM(multiLineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, opt_options) {\n    var hasZM = getHasZM(multiPoint);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var hasZM = getHasZM(geometry);\n    var coordinates = geometry.getCoordinates(false);\n    var output = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\n            output.push(coordinates[i][x]);\n        }\n    }\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n    };\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\nexport default EsriJSON;\n//# sourceMappingURL=EsriJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = new XMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /** @class */ (function (_super) {\n    __extends(GMLBase, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function GMLBase(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\n        /**\n         * @protected\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType = options.featureType;\n        /**\n         * @protected\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS = options.featureNS;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.srsName = options.srsName;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.schemaLocation = '';\n        /**\n         * @type {Object<string, Object<string, Object>>}\n         */\n        _this.FEATURE_COLLECTION_PARSERS = {};\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\n        };\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<Feature> | undefined} Features.\n     */\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\n        var localName = node.localName;\n        var features = null;\n        if (localName == 'FeatureCollection') {\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\n        }\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\n            var context = objectStack[0];\n            var featureType = context['featureType'];\n            var featureNS = context['featureNS'];\n            var prefix = 'p';\n            var defaultPrefix = 'p0';\n            if (!featureType && node.childNodes) {\n                featureType = [], featureNS = {};\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n                    var child = node.childNodes[i];\n                    if (child.nodeType === 1) {\n                        var ft = child.nodeName.split(':').pop();\n                        if (featureType.indexOf(ft) === -1) {\n                            var key = '';\n                            var count = 0;\n                            var uri = child.namespaceURI;\n                            for (var candidate in featureNS) {\n                                if (featureNS[candidate] === uri) {\n                                    key = candidate;\n                                    break;\n                                }\n                                ++count;\n                            }\n                            if (!key) {\n                                key = prefix + count;\n                                featureNS[key] = uri;\n                            }\n                            featureType.push(key + ':' + ft);\n                        }\n                    }\n                }\n                if (localName != 'featureMember') {\n                    // recheck featureType for each featureMember\n                    context['featureType'] = featureType;\n                    context['featureNS'] = featureNS;\n                }\n            }\n            if (typeof featureNS === 'string') {\n                var ns = featureNS;\n                featureNS = {};\n                featureNS[defaultPrefix] = ns;\n            }\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n            var parsersNS = {};\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n            for (var p in featureNS) {\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n                        defaultPrefix : featureTypes[i].split(':')[0];\n                    if (featurePrefix === p) {\n                        parsers[featureTypes[i].split(':').pop()] =\n                            (localName == 'featureMembers') ?\n                                makeArrayPusher(this.readFeatureElement, this) :\n                                makeReplacer(this.readFeatureElement, this);\n                    }\n                }\n                parsersNS[featureNS[p]] = parsers;\n            }\n            if (localName == 'featureMember') {\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n            }\n            else {\n                features = pushParseAndPop([], parsersNS, node, objectStack);\n            }\n        }\n        if (features === null) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n     */\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\n        var context = /** @type {Object} */ (objectStack[0]);\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n        if (geometry) {\n            if (Array.isArray(geometry)) {\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n            }\n            else {\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\n     * @return {Feature|Object} Feature\n     */\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\n        var geometryName;\n        var values = {};\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var value = void 0;\n            var localName = n.localName;\n            // first, check if it is simple attribute\n            if (n.childNodes.length === 0\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n                value = getAllTextContent(n, false);\n                if (ONLY_WHITESPACE_RE.test(value)) {\n                    value = undefined;\n                }\n            }\n            else {\n                if (asFeature) {\n                    //if feature, try it as a geometry\n                    value = this.readGeometryElement(n, objectStack);\n                }\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n                    value = this.readFeatureElementInternal(n, objectStack, false);\n                }\n                else if (localName !== 'boundedBy') {\n                    // boundedBy is an extent and must not be considered as a geometry\n                    geometryName = localName;\n                }\n            }\n            if (values[localName]) {\n                if (!(values[localName] instanceof Array)) {\n                    values[localName] = [values[localName]];\n                }\n                values[localName].push(value);\n            }\n            else {\n                values[localName] = value;\n            }\n            var len = n.attributes.length;\n            if (len > 0) {\n                values[localName] = { _content_: values[localName] };\n                for (var i = 0; i < len; i++) {\n                    var attName = n.attributes[i].name;\n                    values[localName][attName] = n.attributes[i].value;\n                }\n            }\n        }\n        if (!asFeature) {\n            return values;\n        }\n        else {\n            var feature = new Feature(values);\n            if (geometryName) {\n                feature.setGeometryName(geometryName);\n            }\n            var fid = node.getAttribute('fid') ||\n                getAttributeNS(node, this.namespace, 'id');\n            if (fid) {\n                feature.setId(fid);\n            }\n            return feature;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Feature} Feature.\n     */\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\n        return this.readFeatureElementInternal(node, objectStack, true);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Point|undefined} Point.\n     */\n    GMLBase.prototype.readPoint = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPoint|undefined} MultiPoint.\n     */\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\n        if (coordinates) {\n            return new MultiPoint(coordinates);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            return new MultiLineString(lineStrings);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LineString|undefined} LineString.\n     */\n    GMLBase.prototype.readLineString = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\n     */\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n        if (ring) {\n            return ring;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LinearRing|undefined} LinearRing.\n     */\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Polygon|undefined} Polygon.\n     */\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>} Flat coordinates.\n     */\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\n        return geometry ? geometry : null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {\n            featureType: this.featureType,\n            featureNS: this.featureNS\n        };\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        var features = this.readFeaturesInternal(node, [options]);\n        return features || [];\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readProjectionFromNode = function (node) {\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n    };\n    return GMLBase;\n}(XMLFeature));\nGMLBase.prototype.namespace = GMLNS;\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\nexport default GMLBase;\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, (bool) ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(DOCUMENT.createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() + '-' +\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\n        padNumber(date.getUTCDate(), 2) + 'T' +\n        padNumber(date.getUTCHours(), 2) + ':' +\n        padNumber(date.getUTCMinutes(), 2) + ':' +\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML3\n */\nimport { extend } from '../array.js';\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /** @class */ (function (_super) {\n    __extends(GML3, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML3(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiCurve_ = options.multiCurve !== undefined ?\n            options.multiCurve : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiSurface_ = options.multiSurface !== undefined ?\n            options.multiSurface : true;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hasZ = options.hasZ !== undefined ?\n            options.hasZ : false;\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            var multiLineString = new MultiLineString(lineStrings);\n            return multiLineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Polygon|undefined} Polygon.\n     */\n    GML3.prototype.readSurface_ = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {LineString|undefined} LineString.\n     */\n    GML3.prototype.readCurve_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false);\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        var m;\n        while ((m = re.exec(s))) {\n            flatCoordinates.push(parseFloat(m[1]));\n            s = s.substr(m[0].length);\n        }\n        if (s !== '') {\n            return undefined;\n        }\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        if (axisOrientation === 'neu') {\n            var i = void 0, ii = void 0;\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n                var y = flatCoordinates[i];\n                var x = flatCoordinates[i + 1];\n                flatCoordinates[i] = x;\n                flatCoordinates[i + 1] = y;\n            }\n        }\n        var len = flatCoordinates.length;\n        if (len == 2) {\n            flatCoordinates.push(0);\n        }\n        if (len === 0) {\n            return undefined;\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var contextDimension = context['srsDimension'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        var coords = s.split(/\\s+/);\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\n        var dim = 2;\n        if (node.getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n        }\n        else if (node.getAttribute('dimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n        }\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n        }\n        else if (contextDimension) {\n            dim = readNonNegativeIntegerString(contextDimension);\n        }\n        var x, y, z;\n        var flatCoordinates = [];\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\n            x = parseFloat(coords[i]);\n            y = parseFloat(coords[i + 1]);\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        var axisOrientation = 'enu';\n        if (srsName) {\n            axisOrientation = getProjection(srsName).getAxisOrientation();\n        }\n        var point = value.getCoordinates();\n        var coords;\n        // only 2d for simple features profile\n        if (axisOrientation.substr(0, 2) === 'en') {\n            coords = (point[0] + ' ' + point[1]);\n        }\n        else {\n            coords = (point[1] + ' ' + point[0]);\n        }\n        if (hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        writeStringTextNode(node, coords);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ' ' + point[1] :\n            point[1] + ' ' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        var point;\n        for (var i = 0; i < len; ++i) {\n            point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var pos = createElementNS(node.namespaceURI, 'pos');\n        node.appendChild(pos);\n        this.writePos_(pos, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var posList = createElementNS(node.namespaceURI, 'posList');\n        node.appendChild(posList);\n        this.writePosList_(posList, geometry, objectStack);\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Polygon} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var posList = createElementNS(node.namespaceURI, 'posList');\n            node.appendChild(posList);\n            this.writePosList_(posList, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        var hasZ = context['hasZ'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiLineString} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureType = context['featureType'];\n        var featureNS = context['featureNS'];\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n        var serializers = {};\n        serializers[featureNS] = {};\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var curve = context['curve'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'LineString' && curve === true) {\n                nodeName = 'Curve';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS(this.namespace, nodeName);\n    };\n    /**\n     * Encode a geometry in GML 3.1.1 Simple Features.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var geom = createElementNS(this.namespace, 'geom');\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\n            curve: this.curve_, surface: this.surface_,\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeGeometryElement(geom, geometry, [context]);\n        return geom;\n    };\n    /**\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Element} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var node = createElementNS(this.namespace, 'featureMembers');\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n        var context = {\n            srsName: this.srsName,\n            hasZ: this.hasZ,\n            curve: this.curve_,\n            surface: this.surface_,\n            multiSurface: this.multiSurface_,\n            multiCurve: this.multiCurve_,\n            featureNS: this.featureNS,\n            featureType: this.featureType\n        };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeFeatureMembers_(node, features, [context]);\n        return node;\n    };\n    return GML3;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML3;\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\nexport default GML;\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML2\n */\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /** @class */ (function (_super) {\n    __extends(GML2, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML2(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(_this.readFeaturesInternal);\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            if (proj) {\n                axisOrientation = proj.getAxisOrientation();\n            }\n        }\n        var coordsGroups = s.trim().split(/\\s+/);\n        var flatCoordinates = [];\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n            var coords = coordsGroups[i].split(/,+/);\n            var x = parseFloat(coords[0]);\n            var y = parseFloat(coords[1]);\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML2.prototype.readBox_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS('http://www.opengis.net/gml', nodeName);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n            node.appendChild(coordinates);\n            this.writeCoordinates_(coordinates, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {string} namespaceURI XML namespace.\n     * @returns {Element} coordinates node.\n     * @private\n     */\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\n        coordinates.setAttribute('decimal', '.');\n        coordinates.setAttribute('cs', ',');\n        coordinates.setAttribute('ts', ' ');\n        return coordinates;\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ',' + point[1] :\n            point[1] + ',' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ',' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        var point = geometry.getCoordinates();\n        var coord = this.getCoords_(point, srsName, hasZ);\n        writeStringTextNode(coordinates, coord);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        this.writeCoordinates_(coordinates, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    return GML2;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Box': makeReplacer(GML2.prototype.readBox_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\nexport default GML2;\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML32;\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TextFeature.prototype.getType = function () {\n        return FormatType.TEXT;\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle(node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue(node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textStyle = null;\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    if (foundStyle.getImage()) {\n        var imageSize = foundStyle.getImage().getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = foundStyle.getImage().getScale();\n            // Offset the label to be centered to the right of the icon, if there is\n            // one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    if (foundStyle.getText() !== null) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        var foundText = foundStyle.getText();\n        textStyle = foundText.clone();\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        /** @type {Style|undefined} */\n        var nameStyle;\n        var name = '';\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                drawName = geometry.getType() === GeometryType.POINT;\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n        }\n        if (style) {\n            if (drawName) {\n                nameStyle = createNameStyleFunction(style[0], name);\n                return style.concat(nameStyle);\n            }\n            return style;\n        }\n        if (styleUrl) {\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n            if (drawName) {\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\n                return foundStyle.concat(nameStyle);\n            }\n            return foundStyle;\n        }\n        if (drawName) {\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\n            return defaultStyle.concat(nameStyle);\n        }\n        return defaultStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: 'anonymous',\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        strokeStyle = null;\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': style.getWidth()\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n    BAROMETRIC: 'barometric',\n    GPS: 'gps',\n    NONE: 'none'\n};\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /** @class */ (function (_super) {\n    __extends(IGC, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function IGC(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {IGCZ}\n         */\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\n        var altitudeMode = this.altitudeMode_;\n        var lines = text.split(NEWLINE_RE);\n        /** @type {Object<string, string>} */\n        var properties = {};\n        var flatCoordinates = [];\n        var year = 2000;\n        var month = 0;\n        var day = 1;\n        var lastDateTime = -1;\n        var i, ii;\n        for (i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            var m = void 0;\n            if (line.charAt(0) == 'B') {\n                m = B_RECORD_RE.exec(line);\n                if (m) {\n                    var hour = parseInt(m[1], 10);\n                    var minute = parseInt(m[2], 10);\n                    var second = parseInt(m[3], 10);\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (m[6] == 'S') {\n                        y = -y;\n                    }\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (m[9] == 'W') {\n                        x = -x;\n                    }\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != IGCZ.NONE) {\n                        var z = void 0;\n                        if (altitudeMode == IGCZ.GPS) {\n                            z = parseInt(m[11], 10);\n                        }\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\n                            z = parseInt(m[12], 10);\n                        }\n                        else {\n                            z = 0;\n                        }\n                        flatCoordinates.push(z);\n                    }\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) {\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    }\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            }\n            else if (line.charAt(0) == 'H') {\n                m = HFDTE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                }\n                else {\n                    m = H_RECORD_RE.exec(line);\n                    if (m) {\n                        properties[m[1]] = m[2].trim();\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) {\n            return null;\n        }\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n        var lineString = new LineString(flatCoordinates, layout);\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n        feature.setProperties(properties, true);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        if (feature) {\n            return [feature];\n        }\n        else {\n            return [];\n        }\n    };\n    return IGC;\n}(TextFeature));\nexport default IGC;\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport { extend } from '../array.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { get as getProjection } from '../proj.js';\nimport { transform2D } from '../geom/flat/transform.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {GeometryType} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {GeometryType}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ = this.type_ === GeometryType.POINT ?\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {GeometryType} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     * The SRS of the source and destination are expected to be the same.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n     */\n    RenderFeature.prototype.transform = function (source, destination) {\n        source = getProjection(source);\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    };\n    return RenderFeature;\n}());\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\n    RenderFeature.prototype.getEndss = function () {\n        return this.ends_;\n    };\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\nimport { get } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) { // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var id = rawFeature.id;\n        var values = rawFeature.properties;\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection, options.featureProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i));\n                        prevEndIndex = i;\n                    }\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                                    null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: []\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value = tag === 1 ? pbf.readString() :\n                tag === 2 ? pbf.readFloat() :\n                    tag === 3 ? pbf.readDouble() :\n                        tag === 4 ? pbf.readVarint64() :\n                            tag === 5 ? pbf.readVarint() :\n                                tag === 6 ? pbf.readSVarint() :\n                                    tag === 7 ? pbf.readBoolean() : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {}\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {GeometryType} */\n    var geometryType;\n    if (type === 1) {\n        geometryType = numEnds === 1 ?\n            GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType = numEnds === 1 ?\n            GeometryType.LINE_STRING :\n            GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n});\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /** @class */ (function (_super) {\n    __extends(OSMXML, _super);\n    function OSMXML() {\n        var _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = this.getReadOptions(node, opt_options);\n        if (node.localName == 'osm') {\n            var state = pushParseAndPop({\n                nodes: {},\n                ways: [],\n                features: []\n            }, PARSERS, node, [options]);\n            // parse nodes in ways\n            for (var j = 0; j < state.ways.length; j++) {\n                var values = /** @type {Object} */ (state.ways[j]);\n                /** @type {Array<number>} */\n                var flatCoordinates = [];\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n                    var point = state.nodes[values.ndrefs[i]];\n                    extend(flatCoordinates, point);\n                }\n                var geometry = void 0;\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n                    // closed way\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n                }\n                else {\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n                }\n                transformGeometryWithOptions(geometry, false, options);\n                var feature = new Feature(geometry);\n                feature.setId(values.id);\n                feature.setProperties(values.tags, true);\n                state.features.push(feature);\n            }\n            if (state.features) {\n                return state.features;\n            }\n        }\n        return [];\n    };\n    return OSMXML;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'tag': readTag\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var id = node.getAttribute('id');\n    /** @type {import(\"../coordinate.js\").Coordinate} */\n    var coordinates = [\n        parseFloat(node.getAttribute('lon')),\n        parseFloat(node.getAttribute('lat'))\n    ];\n    state.nodes[id] = coordinates;\n    var values = pushParseAndPop({\n        tags: {}\n    }, NODE_PARSERS, node, objectStack);\n    if (!isEmpty(values.tags)) {\n        var geometry = new Point(coordinates);\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n    var id = node.getAttribute('id');\n    var values = pushParseAndPop({\n        id: id,\n        ndrefs: [],\n        tags: {}\n    }, WAY_PARSERS, node, objectStack);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    state.ways.push(values);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.ndrefs.push(node.getAttribute('ref'));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\nexport default OSMXML;\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {GeometryLayout}\n         */\n        _this.geometryLayout_ = options.geometryLayout ?\n            options.geometryLayout : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry = /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /** @class */ (function (_super) {\n    __extends(TopoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function TopoJSON(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.layerName_ = options.layerName;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        if (object.type == 'Topology') {\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n            var transform = void 0, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            var arcs = topoJSONTopology['arcs'];\n            if (transform) {\n                transformArcs(arcs, scale, translate);\n            }\n            /** @type {Array<Feature>} */\n            var features = [];\n            var topoJSONFeatures = topoJSONTopology['objects'];\n            var property = this.layerName_;\n            var feature = void 0;\n            for (var objectName in topoJSONFeatures) {\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n                    continue;\n                }\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n                else {\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\n        return this.dataProjection;\n    };\n    return TopoJSON;\n}(JSONFeature));\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n    'Point': readPointGeometry,\n    'LineString': readLineStringGeometry,\n    'Polygon': readPolygonGeometry,\n    'MultiPoint': readMultiPointGeometry,\n    'MultiLineString': readMultiLineStringGeometry,\n    'MultiPolygon': readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n    var coordinates = [];\n    var index, arc;\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\n        index = indices[i];\n        if (i > 0) {\n            // splicing together arcs, discard last point\n            coordinates.pop();\n        }\n        if (index >= 0) {\n            // forward arc\n            arc = arcs[index];\n        }\n        else {\n            // reverse arc\n            arc = arcs[~index].slice().reverse();\n        }\n        coordinates.push.apply(coordinates, arc);\n    }\n    // provide fresh copies of coordinate arrays\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n        coordinates[j] = coordinates[j].slice();\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        transformVertex(coordinates, scale, translate);\n    }\n    return new Point(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            transformVertex(coordinates[i], scale, translate);\n        }\n    }\n    return new MultiPoint(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n    var coordinates = concatenateArcs(object['arcs'], arcs);\n    return new LineString(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new MultiLineString(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new Polygon(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        // for each polygon\n        var polyArray = object['arcs'][i];\n        var ringCoords = [];\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n            // for each ring\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n        }\n        coordinates[i] = ringCoords;\n    }\n    return new MultiPolygon(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n    var geometries = collection['geometries'];\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\n    }\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n    var geometry;\n    var type = object.type;\n    var geometryReader = GEOMETRY_READERS[type];\n    if ((type === 'Point') || (type === 'MultiPoint')) {\n        geometry = geometryReader(object, scale, translate);\n    }\n    else {\n        geometry = geometryReader(object, arcs);\n    }\n    var feature = new Feature();\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n    if (object.id !== undefined) {\n        feature.setId(object.id);\n    }\n    var properties = object.properties;\n    if (property) {\n        if (!properties) {\n            properties = {};\n        }\n        properties[property] = name;\n    }\n    if (properties) {\n        feature.setProperties(properties, true);\n    }\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\n        transformArc(arcs[i], scale, translate);\n    }\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\n        var vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nexport default TopoJSON;\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     */\n    function Filter(tagName) {\n        /**\n         * @private\n         * @type {!string}\n         */\n        this.tagName_ = tagName;\n    }\n    /**\n     * The XML tag name for a filter.\n     * @returns {!string} Name.\n     */\n    Filter.prototype.getTagName = function () {\n        return this.tagName_;\n    };\n    return Filter;\n}());\nexport default Filter;\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /** @class */ (function (_super) {\n    __extends(LogicalNary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n     */\n    function LogicalNary(tagName, conditions) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {Array<import(\"./Filter.js\").default>}\n         */\n        _this.conditions = conditions;\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n        return _this;\n    }\n    return LogicalNary;\n}(Filter));\nexport default LogicalNary;\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /** @class */ (function (_super) {\n    __extends(And, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function And(conditions) {\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n    }\n    return And;\n}(LogicalNary));\nexport default And;\n//# sourceMappingURL=And.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /** @class */ (function (_super) {\n    __extends(Bbox, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n     * on geometries when this is not provided.\n     */\n    function Bbox(geometryName, extent, opt_srsName) {\n        var _this = _super.call(this, 'BBOX') || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName;\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Bbox;\n}(Filter));\nexport default Bbox;\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /** @class */ (function (_super) {\n    __extends(Spatial, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName || 'the_geom';\n        /**\n         * @type {import(\"../../geom/Geometry.js\").default}\n         */\n        _this.geometry = geometry;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Spatial;\n}(Filter));\nexport default Spatial;\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /** @class */ (function (_super) {\n    __extends(Contains, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Contains(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n    }\n    return Contains;\n}(Spatial));\nexport default Contains;\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /** @class */ (function (_super) {\n    __extends(Comparison, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function Comparison(tagName, propertyName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.propertyName = propertyName;\n        return _this;\n    }\n    return Comparison;\n}(Filter));\nexport default Comparison;\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /** @class */ (function (_super) {\n    __extends(During, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} begin The begin date in ISO-8601 format.\n     * @param {!string} end The end date in ISO-8601 format.\n     */\n    function During(propertyName, begin, end) {\n        var _this = _super.call(this, 'During', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.begin = begin;\n        /**\n         * @type {!string}\n         */\n        _this.end = end;\n        return _this;\n    }\n    return During;\n}(Comparison));\nexport default During;\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /** @class */ (function (_super) {\n    __extends(ComparisonBinary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n        var _this = _super.call(this, tagName, propertyName) || this;\n        /**\n         * @type {!(string|number)}\n         */\n        _this.expression = expression;\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return ComparisonBinary;\n}(Comparison));\nexport default ComparisonBinary;\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /** @class */ (function (_super) {\n    __extends(EqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function EqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return EqualTo;\n}(ComparisonBinary));\nexport default EqualTo;\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    __extends(GreaterThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\n    }\n    return GreaterThan;\n}(ComparisonBinary));\nexport default GreaterThan;\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(GreaterThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\n    }\n    return GreaterThanOrEqualTo;\n}(ComparisonBinary));\nexport default GreaterThanOrEqualTo;\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /** @class */ (function (_super) {\n    __extends(Intersects, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Intersects(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\n    }\n    return Intersects;\n}(Spatial));\nexport default Intersects;\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /** @class */ (function (_super) {\n    __extends(IsBetween, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} lowerBoundary The lower bound of the range.\n     * @param {!number} upperBoundary The upper bound of the range.\n     */\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n        /**\n         * @type {!number}\n         */\n        _this.lowerBoundary = lowerBoundary;\n        /**\n         * @type {!number}\n         */\n        _this.upperBoundary = upperBoundary;\n        return _this;\n    }\n    return IsBetween;\n}(Comparison));\nexport default IsBetween;\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string=} opt_singleChar pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /** @class */ (function (_super) {\n    __extends(IsNull, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function IsNull(propertyName) {\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\n    }\n    return IsNull;\n}(Comparison));\nexport default IsNull;\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /** @class */ (function (_super) {\n    __extends(LessThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\n    }\n    return LessThan;\n}(ComparisonBinary));\nexport default LessThan;\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(LessThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\n    }\n    return LessThanOrEqualTo;\n}(ComparisonBinary));\nexport default LessThanOrEqualTo;\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /** @class */ (function (_super) {\n    __extends(Not, _super);\n    /**\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\n     */\n    function Not(condition) {\n        var _this = _super.call(this, 'Not') || this;\n        /**\n         * @type {!import(\"./Filter.js\").default}\n         */\n        _this.condition = condition;\n        return _this;\n    }\n    return Not;\n}(Filter));\nexport default Not;\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /** @class */ (function (_super) {\n    __extends(NotEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return NotEqualTo;\n}(ComparisonBinary));\nexport default NotEqualTo;\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /** @class */ (function (_super) {\n    __extends(Or, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function Or(conditions) {\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n    }\n    return Or;\n}(LogicalNary));\nexport default Or;\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /** @class */ (function (_super) {\n    __extends(Within, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Within(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\n    }\n    return Within;\n}(Spatial));\nexport default Within;\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(And, params));\n}\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(Or, params));\n}\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n    return new Not(condition);\n}\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n    return new Bbox(geometryName, extent, opt_srsName);\n}\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n    return new Contains(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n    return new Intersects(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n    return new Within(geometryName, geometry, opt_srsName);\n}\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n    return new EqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n    return new LessThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n    return new LessThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n    return new GreaterThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n    return new GreaterThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n    return new IsNull(propertyName);\n}\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n    return new During(propertyName, begin, end);\n}\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport { assert } from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative)\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat ?\n            options.gmlFormat : new GML3();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation ?\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var node = createElementNS(WFSNS, 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', '1.1.0');\n        var filter;\n        if (options) {\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n            if (options.outputFormat) {\n                node.setAttribute('outputFormat', options.outputFormat);\n            }\n            if (options.maxFeatures !== undefined) {\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\n            }\n            if (options.resultType) {\n                node.setAttribute('resultType', options.resultType);\n            }\n            if (options.startIndex !== undefined) {\n                node.setAttribute('startIndex', String(options.startIndex));\n            }\n            if (options.count !== undefined) {\n                node.setAttribute('count', String(options.count));\n            }\n            if (options.viewParams !== undefined) {\n                node.setAttribute('viewParams ', options.viewParams);\n            }\n            filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                var bbox = bboxFilter(\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n                if (filter) {\n                    // if bbox and filter are both set, combine the two into a single filter\n                    filter = andFilter(filter, bbox);\n                }\n                else {\n                    filter = bbox;\n                }\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'geometryName': options.geometryName,\n            'filter': filter,\n            'propertyNames': options.propertyNames ? options.propertyNames : []\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        return node;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var node = createElementNS(WFSNS, 'Transaction');\n        var version = options.version ? options.version : DEFAULT_VERSION;\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var obj;\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        var schemaLocation = SCHEMA_LOCATIONS[version];\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n        if (inserts) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\n        }\n        if (updates) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\n        }\n        if (deletes) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\n        }\n        if (options.nativeElements) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\n        }\n        return node;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild &&\n            node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 &&\n                        n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        })\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var filter = createElementNS(OGCNS, 'Filter');\n    var child = createElementNS(OGCNS, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var name = createElementNS(WFSNS, 'Name');\n    var context = objectStack[objectStack.length - 1];\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(WFSNS, 'Value');\n        node.appendChild(value);\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery)\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeContainsFilter),\n        'Intersects': makeChildAppender(writeIntersectsFilter),\n        'Within': makeChildAppender(writeWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    node.setAttribute('typeName', typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(OGCNS, 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var valueReference = createElementNS(FESNS, 'ValueReference');\n    writeStringTextNode(valueReference, filter.propertyName);\n    node.appendChild(valueReference);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.pattern);\n}\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n    var property = createElementNS(OGCNS, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n    writeOgcExpression('PropertyName', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n    writeOgcExpression('Literal', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    writeFilterCondition(child, filter, []);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nexport default WFS;\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n    'POINT': Point,\n    'LINESTRING': LineString,\n    'POLYGON': Polygon,\n    'MULTIPOINT': MultiPoint,\n    'MULTILINESTRING': MultiLineString,\n    'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n    TEXT: 1,\n    LEFT_PAREN: 2,\n    RIGHT_PAREN: 3,\n    NUMBER: 4,\n    COMMA: 5,\n    EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = /** @class */ (function () {\n    /**\n     * @param {string} wkt WKT string.\n     */\n    function Lexer(wkt) {\n        /**\n         * @type {string}\n         */\n        this.wkt = wkt;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.index_ = -1;\n    }\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is alphabetic.\n     * @private\n     */\n    Lexer.prototype.isAlpha_ = function (c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n    };\n    /**\n     * @param {string} c Character.\n     * @param {boolean=} opt_decimal Whether the string number\n     *     contains a dot, i.e. is a decimal number.\n     * @return {boolean} Whether the character is numeric.\n     * @private\n     */\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\n    };\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is whitespace.\n     * @private\n     */\n    Lexer.prototype.isWhiteSpace_ = function (c) {\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n    };\n    /**\n     * @return {string} Next string character.\n     * @private\n     */\n    Lexer.prototype.nextChar_ = function () {\n        return this.wkt.charAt(++this.index_);\n    };\n    /**\n     * Fetch and return the next token.\n     * @return {!Token} Next string token.\n     */\n    Lexer.prototype.nextToken = function () {\n        var c = this.nextChar_();\n        var position = this.index_;\n        /** @type {number|string} */\n        var value = c;\n        var type;\n        if (c == '(') {\n            type = TokenType.LEFT_PAREN;\n        }\n        else if (c == ',') {\n            type = TokenType.COMMA;\n        }\n        else if (c == ')') {\n            type = TokenType.RIGHT_PAREN;\n        }\n        else if (this.isNumeric_(c) || c == '-') {\n            type = TokenType.NUMBER;\n            value = this.readNumber_();\n        }\n        else if (this.isAlpha_(c)) {\n            type = TokenType.TEXT;\n            value = this.readText_();\n        }\n        else if (this.isWhiteSpace_(c)) {\n            return this.nextToken();\n        }\n        else if (c === '') {\n            type = TokenType.EOF;\n        }\n        else {\n            throw new Error('Unexpected character: ' + c);\n        }\n        return { position: position, value: value, type: type };\n    };\n    /**\n     * @return {number} Numeric token value.\n     * @private\n     */\n    Lexer.prototype.readNumber_ = function () {\n        var c;\n        var index = this.index_;\n        var decimal = false;\n        var scientificNotation = false;\n        do {\n            if (c == '.') {\n                decimal = true;\n            }\n            else if (c == 'e' || c == 'E') {\n                scientificNotation = true;\n            }\n            c = this.nextChar_();\n        } while (this.isNumeric_(c, decimal) ||\n            // if we haven't detected a scientific number before, 'e' or 'E'\n            // hint that we should continue to read\n            !scientificNotation && (c == 'e' || c == 'E') ||\n            // once we know that we have a scientific number, both '-' and '+'\n            // are allowed\n            scientificNotation && (c == '-' || c == '+'));\n        return parseFloat(this.wkt.substring(index, this.index_--));\n    };\n    /**\n     * @return {string} String token value.\n     * @private\n     */\n    Lexer.prototype.readText_ = function () {\n        var c;\n        var index = this.index_;\n        do {\n            c = this.nextChar_();\n        } while (this.isAlpha_(c));\n        return this.wkt.substring(index, this.index_--).toUpperCase();\n    };\n    return Lexer;\n}());\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param {Lexer} lexer The lexer.\n     */\n    function Parser(lexer) {\n        /**\n         * @type {Lexer}\n         * @private\n         */\n        this.lexer_ = lexer;\n        /**\n         * @type {Token}\n         * @private\n         */\n        this.token_;\n        /**\n         * @type {GeometryLayout}\n         * @private\n         */\n        this.layout_ = GeometryLayout.XY;\n    }\n    /**\n     * Fetch the next token form the lexer and replace the active token.\n     * @private\n     */\n    Parser.prototype.consume_ = function () {\n        this.token_ = this.lexer_.nextToken();\n    };\n    /**\n     * Tests if the given type matches the type of the current token.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.isTokenType = function (type) {\n        var isMatch = this.token_.type == type;\n        return isMatch;\n    };\n    /**\n     * If the given type matches the current token, consume it.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.match = function (type) {\n        var isMatch = this.isTokenType(type);\n        if (isMatch) {\n            this.consume_();\n        }\n        return isMatch;\n    };\n    /**\n     * Try to parse the tokens provided by the lexer.\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\n     */\n    Parser.prototype.parse = function () {\n        this.consume_();\n        var geometry = this.parseGeometry_();\n        return geometry;\n    };\n    /**\n     * Try to parse the dimensional info.\n     * @return {GeometryLayout} The layout.\n     * @private\n     */\n    Parser.prototype.parseGeometryLayout_ = function () {\n        var layout = GeometryLayout.XY;\n        var dimToken = this.token_;\n        if (this.isTokenType(TokenType.TEXT)) {\n            var dimInfo = dimToken.value;\n            if (dimInfo === Z) {\n                layout = GeometryLayout.XYZ;\n            }\n            else if (dimInfo === M) {\n                layout = GeometryLayout.XYM;\n            }\n            else if (dimInfo === ZM) {\n                layout = GeometryLayout.XYZM;\n            }\n            if (layout !== GeometryLayout.XY) {\n                this.consume_();\n            }\n        }\n        return layout;\n    };\n    /**\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n     * @private\n     */\n    Parser.prototype.parseGeometryCollectionText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var geometries = [];\n            do {\n                geometries.push(this.parseGeometry_());\n            } while (this.match(TokenType.COMMA));\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return geometries;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {Array<number>} All values in a point.\n     * @private\n     */\n    Parser.prototype.parsePointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePoint_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return null;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a linestring.\n     * @private\n     */\n    Parser.prototype.parseLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePointList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n     * @private\n     */\n    Parser.prototype.parsePolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a multipoint.\n     * @private\n     */\n    Parser.prototype.parseMultiPointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = void 0;\n            if (this.token_.type == TokenType.LEFT_PAREN) {\n                coordinates = this.parsePointTextList_();\n            }\n            else {\n                coordinates = this.parsePointList_();\n            }\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\n     *                                          in a multilinestring.\n     * @private\n     */\n    Parser.prototype.parseMultiLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n     * @private\n     */\n    Parser.prototype.parseMultiPolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePolygonTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<number>} A point.\n     * @private\n     */\n    Parser.prototype.parsePoint_ = function () {\n        var coordinates = [];\n        var dimensions = this.layout_.length;\n        for (var i = 0; i < dimensions; ++i) {\n            var token = this.token_;\n            if (this.match(TokenType.NUMBER)) {\n                coordinates.push(/** @type {number} */ (token.value));\n            }\n            else {\n                break;\n            }\n        }\n        if (coordinates.length == dimensions) {\n            return coordinates;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointList_ = function () {\n        var coordinates = [this.parsePoint_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePoint_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointTextList_ = function () {\n        var coordinates = [this.parsePointText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePointText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parseLineStringTextList_ = function () {\n        var coordinates = [this.parseLineStringText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parseLineStringText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePolygonTextList_ = function () {\n        var coordinates = [this.parsePolygonText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePolygonText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {boolean} Whether the token implies an empty geometry.\n     * @private\n     */\n    Parser.prototype.isEmptyGeometry_ = function () {\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\n            this.token_.value == EMPTY;\n        if (isEmpty) {\n            this.consume_();\n        }\n        return isEmpty;\n    };\n    /**\n     * Create an error message for an unexpected token error.\n     * @return {string} Error message.\n     * @private\n     */\n    Parser.prototype.formatErrorMessage_ = function () {\n        return 'Unexpected `' + this.token_.value + '` at position ' +\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\n    };\n    /**\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n     * @private\n     */\n    Parser.prototype.parseGeometry_ = function () {\n        var token = this.token_;\n        if (this.match(TokenType.TEXT)) {\n            var geomType = token.value;\n            this.layout_ = this.parseGeometryLayout_();\n            if (geomType == 'GEOMETRYCOLLECTION') {\n                var geometries = this.parseGeometryCollectionText_();\n                return new GeometryCollection(geometries);\n            }\n            else {\n                var ctor = GeometryConstructor[geomType];\n                if (!ctor) {\n                    throw new Error('Invalid geometry type: ' + geomType);\n                }\n                var coordinates = void 0;\n                switch (geomType) {\n                    case 'POINT': {\n                        coordinates = this.parsePointText_();\n                        break;\n                    }\n                    case 'LINESTRING': {\n                        coordinates = this.parseLineStringText_();\n                        break;\n                    }\n                    case 'POLYGON': {\n                        coordinates = this.parsePolygonText_();\n                        break;\n                    }\n                    case 'MULTIPOINT': {\n                        coordinates = this.parseMultiPointText_();\n                        break;\n                    }\n                    case 'MULTILINESTRING': {\n                        coordinates = this.parseMultiLineStringText_();\n                        break;\n                    }\n                    case 'MULTIPOLYGON': {\n                        coordinates = this.parseMultiPolygonText_();\n                        break;\n                    }\n                    default: {\n                        throw new Error('Invalid geometry type: ' + geomType);\n                    }\n                }\n                if (!coordinates) {\n                    if (ctor === GeometryConstructor['POINT']) {\n                        coordinates = [NaN, NaN];\n                    }\n                    else {\n                        coordinates = [];\n                    }\n                }\n                return new ctor(coordinates, this.layout_);\n            }\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    return Parser;\n}());\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /** @class */ (function (_super) {\n    __extends(WKT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WKT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * Split GeometryCollection into multiple features.\n         * @type {boolean}\n         * @private\n         */\n        _this.splitCollection_ = options.splitCollection !== undefined ?\n            options.splitCollection : false;\n        return _this;\n    }\n    /**\n     * Parse a WKT string.\n     * @param {string} wkt WKT string.\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\n     *     The geometry created.\n     * @private\n     */\n    WKT.prototype.parse_ = function (wkt) {\n        var lexer = new Lexer(wkt);\n        var parser = new Parser(lexer);\n        return parser.parse();\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\n        var geom = this.readGeometryFromText(text, opt_options);\n        if (geom) {\n            var feature = new Feature();\n            feature.setGeometry(geom);\n            return feature;\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n        var geometries = [];\n        var geometry = this.readGeometryFromText(text, opt_options);\n        if (this.splitCollection_ &&\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            geometries = ( /** @type {GeometryCollection} */(geometry))\n                .getGeometriesArray();\n        }\n        else {\n            geometries = [geometry];\n        }\n        var features = [];\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var feature = new Feature();\n            feature.setGeometry(geometries[i]);\n            features.push(feature);\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\n        var geometry = this.parse_(text);\n        if (geometry) {\n            return transformGeometryWithOptions(geometry, false, opt_options);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        return '';\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\n        if (features.length == 1) {\n            return this.writeFeatureText(features[0], opt_options);\n        }\n        var geometries = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            geometries.push(features[i].getGeometry());\n        }\n        var collection = new GeometryCollection(geometries);\n        return this.writeGeometryText(collection, opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n        return encode(transformGeometryWithOptions(geometry, true, opt_options));\n    };\n    return WKT;\n}(TextFeature));\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    if (coordinates.length === 0) {\n        return '';\n    }\n    return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n    var array = [];\n    var components = geom.getPoints();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePointGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n    var array = [];\n    var geoms = geom.getGeometries();\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\n        array.push(encode(geoms[i]));\n    }\n    return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    var array = [];\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        array.push(coordinates[i].join(' '));\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n    var array = [];\n    var components = geom.getLineStrings();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n    var array = [];\n    var rings = geom.getLinearRings();\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n    var array = [];\n    var components = geom.getPolygons();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n    var layout = geom.getLayout();\n    var dimInfo = '';\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n        dimInfo += Z;\n    }\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n        dimInfo += M;\n    }\n    return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n    'Point': encodePointGeometry,\n    'LineString': encodeLineStringGeometry,\n    'Polygon': encodePolygonGeometry,\n    'MultiPoint': encodeMultiPointGeometry,\n    'MultiLineString': encodeMultiLineStringGeometry,\n    'MultiPolygon': encodeMultiPolygonGeometry,\n    'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n    var type = geom.getType();\n    var geometryEncoder = GeometryEncoder[type];\n    var enc = geometryEncoder(geom);\n    type = type.toUpperCase();\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n        if (dimInfo.length > 0) {\n            type += ' ' + dimInfo;\n        }\n    }\n    if (enc.length === 0) {\n        return type + ' ' + EMPTY;\n    }\n    return type + '(' + enc + ')';\n}\nexport default WKT;\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @abstract\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) { };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSCapabilities\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wms'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n});\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /** @class */ (function (_super) {\n    __extends(WMSCapabilities, _super);\n    function WMSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {string|undefined}\n         */\n        _this.version = undefined;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromNode = function (node) {\n        this.version = node.getAttribute('version').trim();\n        var wmsCapabilityObject = pushParseAndPop({\n            'version': this.version\n        }, PARSERS, node, []);\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\n    };\n    return WMSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var extent = [\n        readDecimalString(node.getAttribute('minx')),\n        readDecimalString(node.getAttribute('miny')),\n        readDecimalString(node.getAttribute('maxx')),\n        readDecimalString(node.getAttribute('maxy'))\n    ];\n    var resolutions = [\n        readDecimalString(node.getAttribute('resx')),\n        readDecimalString(node.getAttribute('resy'))\n    ];\n    return {\n        'crs': node.getAttribute('CRS'),\n        'extent': extent,\n        'res': resolutions\n    };\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\n    if (!geographicBoundingBox) {\n        return undefined;\n    }\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n        return undefined;\n    }\n    return [\n        westBoundLongitude, southBoundLatitude,\n        eastBoundLongitude, northBoundLatitude\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n    if (!layerObject) {\n        return undefined;\n    }\n    var queryable = readBooleanString(node.getAttribute('queryable'));\n    if (queryable === undefined) {\n        queryable = parentLayerObject['queryable'];\n    }\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n    if (cascaded === undefined) {\n        cascaded = parentLayerObject['cascaded'];\n    }\n    layerObject['cascaded'] = cascaded;\n    var opaque = readBooleanString(node.getAttribute('opaque'));\n    if (opaque === undefined) {\n        opaque = parentLayerObject['opaque'];\n    }\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n    if (noSubsets === undefined) {\n        noSubsets = parentLayerObject['noSubsets'];\n    }\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n    if (!fixedWidth) {\n        fixedWidth = parentLayerObject['fixedWidth'];\n    }\n    layerObject['fixedWidth'] = fixedWidth;\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n    if (!fixedHeight) {\n        fixedHeight = parentLayerObject['fixedHeight'];\n    }\n    layerObject['fixedHeight'] = fixedHeight;\n    // See 7.2.4.8\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n    addKeys.forEach(function (key) {\n        if (key in parentLayerObject) {\n            var childValue = layerObject[key] || [];\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\n        }\n    });\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n    replaceKeys.forEach(function (key) {\n        if (!(key in layerObject)) {\n            var parentValue = parentLayerObject[key];\n            layerObject[key] = parentValue;\n        }\n    });\n    return layerObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n    var dimensionObject = {\n        'name': node.getAttribute('name'),\n        'units': node.getAttribute('units'),\n        'unitSymbol': node.getAttribute('unitSymbol'),\n        'default': node.getAttribute('default'),\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n        'current': readBooleanString(node.getAttribute('current')),\n        'values': readString(node)\n    };\n    return dimensionObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n    if (formatOnlineresource) {\n        var size = [\n            readNonNegativeIntegerString(node.getAttribute('width')),\n            readNonNegativeIntegerString(node.getAttribute('height'))\n        ];\n        formatOnlineresource['size'] = size;\n        return formatOnlineresource;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n    var authorityObject = readFormatOnlineresource(node, objectStack);\n    if (authorityObject) {\n        authorityObject['name'] = node.getAttribute('name');\n        return authorityObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n    var metadataObject = readFormatOnlineresource(node, objectStack);\n    if (metadataObject) {\n        metadataObject['type'] = node.getAttribute('type');\n        return metadataObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\nexport default WMSCapabilities;\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport { extend, includes } from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName +\n                    featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString } from './xsd.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version').trim();\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastMouseMovePixel_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\n        this.updateHTML_(this.lastMouseMovePixel_);\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n        this.lastMouseMovePixel_ = null;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixel(pixel);\n            if (coordinate) {\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/OverviewMap\n */\nimport PluggableMap from '../PluggableMap.js';\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen, listenOnce, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\nvar ControlledMap = /** @class */ (function (_super) {\n    __extends(ControlledMap, _super);\n    function ControlledMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ControlledMap.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return ControlledMap;\n}(PluggableMap));\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */ (function (_super) {\n    __extends(OverviewMap, _super);\n    /**\n     * @param {Options=} opt_options OverviewMap options.\n     */\n    function OverviewMap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : '\\u00BB';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.ovmapDiv_ = document.createElement('div');\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\n        /**\n         * @type {ControlledMap}\n         * @private\n         */\n        _this.ovmap_ = new ControlledMap({\n            view: options.view\n        });\n        var ovmap = _this.ovmap_;\n        if (options.layers) {\n            options.layers.forEach(function (layer) {\n                ovmap.addLayer(layer);\n            });\n        }\n        var box = document.createElement('div');\n        box.className = 'ol-overviewmap-box';\n        box.style.boxSizing = 'border-box';\n        /**\n         * @type {import(\"../Overlay.js\").default}\n         * @private\n         */\n        _this.boxOverlay_ = new Overlay({\n            position: [0, 0],\n            positioning: OverlayPositioning.BOTTOM_LEFT,\n            element: box\n        });\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ovmapDiv_);\n        element.appendChild(button);\n        /* Interactive map */\n        var scope = _this;\n        var overlay = _this.boxOverlay_;\n        var overlayBox = _this.boxOverlay_.getElement();\n        /* Functions definition */\n        var computeDesiredMousePosition = function (mousePosition) {\n            return {\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n            };\n        };\n        var move = function (event) {\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n            overlay.setPosition(coordinates);\n        };\n        var endMoving = function (event) {\n            var coordinates = ovmap.getEventCoordinate(event);\n            scope.getMap().getView().setCenter(coordinates);\n            window.removeEventListener('mousemove', move);\n            window.removeEventListener('mouseup', endMoving);\n        };\n        /* Binding */\n        overlayBox.addEventListener('mousedown', function () {\n            window.addEventListener('mousemove', move);\n            window.addEventListener('mouseup', endMoving);\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    OverviewMap.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (map === oldMap) {\n            return;\n        }\n        if (oldMap) {\n            var oldView = oldMap.getView();\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            this.ovmap_.setTarget(null);\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.ovmap_.setTarget(this.ovmapDiv_);\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n            var view = map.getView();\n            if (view) {\n                this.bindView_(view);\n                if (view.isDef()) {\n                    this.ovmap_.updateSize();\n                    this.resetExtent_();\n                }\n            }\n        }\n    };\n    /**\n     * Handle map property changes.  This only deals with changes to the map's view.\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n     * @private\n     */\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n        if (event.key === MapProperty.VIEW) {\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            var newView = this.getMap().getView();\n            this.bindView_(newView);\n        }\n    };\n    /**\n     * Register listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.bindView_ = function (view) {\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Unregister listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.unbindView_ = function (view) {\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Handle rotation changes to the main map.\n     * TODO: This should rotate the extent rectrangle instead of the\n     * overview map's view.\n     * @private\n     */\n    OverviewMap.prototype.handleRotationChanged_ = function () {\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    };\n    /**\n     * Reset the overview map extent if the box size (width or\n     * height) is less than the size of the overview map size times minRatio\n     * or is greater than the size of the overview size times maxRatio.\n     *\n     * If the map extent was not reset, the box size can fits in the defined\n     * ratio sizes. This method then checks if is contained inside the overview\n     * map current extent. If not, recenter the overview map to the current\n     * main map center location.\n     * @private\n     */\n    OverviewMap.prototype.validateExtent_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n        var ovview = ovmap.getView();\n        var ovextent = ovview.calculateExtent(ovmapSize);\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n        var ovmapWidth = ovmapSize[0];\n        var ovmapHeight = ovmapSize[1];\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\n            boxHeight < ovmapHeight * MIN_RATIO ||\n            boxWidth > ovmapWidth * MAX_RATIO ||\n            boxHeight > ovmapHeight * MAX_RATIO) {\n            this.resetExtent_();\n        }\n        else if (!containsExtent(ovextent, extent)) {\n            this.recenter_();\n        }\n    };\n    /**\n     * Reset the overview map extent to half calculated min and max ratio times\n     * the extent of the main map.\n     * @private\n     */\n    OverviewMap.prototype.resetExtent_ = function () {\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n            return;\n        }\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovview = ovmap.getView();\n        // get how many times the current map overview could hold different\n        // box sizes using the min and max ratio, pick the step in the middle used\n        // to calculate the extent from the main map to set it to the overview map,\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n        scaleFromCenter(extent, ratio);\n        ovview.fit(extent);\n    };\n    /**\n     * Set the center of the overview map to the map center without changing its\n     * resolution.\n     * @private\n     */\n    OverviewMap.prototype.recenter_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        ovview.setCenter(view.getCenter());\n    };\n    /**\n     * Update the box using the main map extent\n     * @private\n     */\n    OverviewMap.prototype.updateBox_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        var rotation = view.getRotation();\n        var overlay = this.boxOverlay_;\n        var box = this.boxOverlay_.getElement();\n        var extent = view.calculateExtent(mapSize);\n        var ovresolution = ovview.getResolution();\n        var bottomLeft = getBottomLeft(extent);\n        var topRight = getTopRight(extent);\n        // set position using bottom left coordinates\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n        overlay.setPosition(rotateBottomLeft);\n        // set box size calculated from map extent size and overview map resolution\n        if (box) {\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n     * @private\n     */\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\n        var coordinateRotate;\n        var map = this.getMap();\n        var view = map.getView();\n        var currentCenter = view.getCenter();\n        if (currentCenter) {\n            coordinateRotate = [\n                coordinate[0] - currentCenter[0],\n                coordinate[1] - currentCenter[1]\n            ];\n            rotateCoordinate(coordinateRotate, rotation);\n            addCoordinate(coordinateRotate, currentCenter);\n        }\n        return coordinateRotate;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    OverviewMap.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    OverviewMap.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        // manage overview map if it had not been rendered before and control\n        // is expanded\n        var ovmap = this.ovmap_;\n        if (!this.collapsed_ && !ovmap.isRendered()) {\n            ovmap.updateSize();\n            this.resetExtent_();\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n                this.updateBox_();\n            }, this);\n        }\n    };\n    /**\n     * Return `true` if the overview map is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the overview map should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the overview map according to the passed parameter. Will\n     * not do anything if the overview map isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Determine if the overview map is collapsed.\n     * @return {boolean} The overview map is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Return the overview map.\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\n     * @api\n     */\n    OverviewMap.prototype.getOverviewMap = function () {\n        return this.ovmap_;\n    };\n    return OverviewMap;\n}(Control));\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n}\nexport default OverviewMap;\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport { getChangeEventType } from '../Object.js';\nimport { assert } from '../asserts.js';\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { listen } from '../events.js';\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined ? options.className :\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ?\n            ProjUnits.DEGREES :\n            ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var nominalCount = this.minWidth_ * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= this.minWidth_) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' + stepWidth + 'px;' +\n                'background-color: ' + backgroundColor + ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n                    this.createStepText(i, width, false, scale, suffix) :\n                    '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                { /*render text at the end */ }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText = '<div ' +\n                'class=\"ol-scale-text\" ' +\n                'style=\"width: ' + width + 'px;\">' +\n                mapScale +\n                '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return '<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' + position + ';' +\n            'top: ' + top + 'px;\"' +\n            '></div>';\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n        return '<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' + margin + 'px;' +\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n            'min-width: ' + minWidth + 'px;' +\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n            '>' +\n            lengthString +\n            '</div>';\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = this.getMap().getView().getResolution();\n        var dpi = 25.4 / 0.28;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    return ScaleLine;\n}(Control));\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.viewState_ = null;\n    }\n    else {\n        this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n}\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomSlider\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { clamp } from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options=} opt_options Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render\n        }) || this;\n        /**\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\n          * @private\n          */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        /**\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.dragger_ = new PointerEventHandler(containerElement);\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\n        listen(thumbElement, EventType.CLICK, stopPropagation);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.disposeInternal = function () {\n        this.dragger_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerSize = {\n            width: container.offsetWidth, height: container.offsetHeight\n        };\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var computedStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(computedStyle['marginRight']) +\n            parseFloat(computedStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(computedStyle['marginTop']) +\n            parseFloat(computedStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerSize.width > containerSize.height) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerSize.width - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerSize.height - thumbHeight;\n        }\n        this.sliderInitialized_ = true;\n    };\n    /**\n     * @param {MouseEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animate({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    return ZoomSlider;\n}(Control));\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n    if (!mapEvent.frameState) {\n        return;\n    }\n    if (!this.sliderInitialized_) {\n        this.initSlider_();\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n}\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n        view.fit(extent);\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {defaults as _ol_control$defaults} from './ol/control';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol_util$getUid} from './ol/util';\nimport {ARRAY_BUFFER as _ol_webgl$ARRAY_BUFFER} from './ol/webgl';\nimport {ELEMENT_ARRAY_BUFFER as _ol_webgl$ELEMENT_ARRAY_BUFFER} from './ol/webgl';\nimport {STREAM_DRAW as _ol_webgl$STREAM_DRAW} from './ol/webgl';\nimport {STATIC_DRAW as _ol_webgl$STATIC_DRAW} from './ol/webgl';\nimport {DYNAMIC_DRAW as _ol_webgl$DYNAMIC_DRAW} from './ol/webgl';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$IIIF from './ol/source/IIIF';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Layer from './ol/layer/Layer';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.util = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.util.getUid = _ol_util$getUid;\nol.webgl.ARRAY_BUFFER = _ol_webgl$ARRAY_BUFFER;\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.DYNAMIC_DRAW = _ol_webgl$DYNAMIC_DRAW;\nol.webgl.ELEMENT_ARRAY_BUFFER = _ol_webgl$ELEMENT_ARRAY_BUFFER;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.STATIC_DRAW = _ol_webgl$STATIC_DRAW;\nol.webgl.STREAM_DRAW = _ol_webgl$STREAM_DRAW;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\nimport Projection from './Projection.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map"],"sourceRoot":""}